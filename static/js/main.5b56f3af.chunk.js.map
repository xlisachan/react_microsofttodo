{"version":3,"sources":["actions/constants.js","reducers/queryReducer.js","reducers/currentReducer.js","reducers/listsReducer.js","reducers/tasksReducer.js","reducers/index.js","store/index.js","actions/tasksActions.js","actions/currentActions.js","components/Main/Body/TaskDetail.js","components/Main/Body/TaskDetails.js","components/Main/Body/TaskItem.js","components/DeleteModal.js","components/Main/Body/Task.js","components/AddItem.js","components/Main/Body/index.js","actions/listsActions.js","components/MenuTemplate.js","components/Main/Header/todoMenu.js","components/Main/Header/HeaderButtonMenu.js","components/Main/Header/HeaderTitle.js","components/Main/Header/HeaderBanner.js","components/Main/Header/HeaderSortBar.js","components/Main/Header/index.js","components/MoreInfoFooter.js","components/MoreInfoHeader.js","components/MoreInfoMyDay.js","components/MoreInfoNote.js","components/MoreInfoPlannedDatePicker.js","components/MoreInfoPlannedDateMenu.js","components/MoreInfoPlannedMenu.js","components/MoreInfoPlanned.js","components/MoreInfoSteps.js","sections/MoreInfo/index.js","sections/Main/index.js","components/SideSearch.js","components/SideListItem.js","components/SideCustomList.js","components/SideLists.js","components/SideAddList.js","sections/Side/index.js","actions/queryActions.js","components/ResponsiveDrawer.js","App.js","index.js"],"names":["constants","SET_LIST","SET_TASK","SET_STEP","SET_NOTE","ADD_STEP","REMOVE_STEP","ADD_LIST","REMOVE_LIST","RENAME_LIST","SET_ORDERBY","SET_ORDERDIR","RESET_ORDERDIR","TOGGLE_HIDE","SET_BGCOLOR","LOAD_TASKS","ADD_TASK","REMOVE_TASK","EDIT_TASK_STATUS_COMPLETE","EDIT_TASK_STATUS_IMPORTANT","EDIT_TASK_STATUS_MYDAY","REMOVE_TASK_DATE_DUE","ADD_TASK_DATE_DUE","UPDATE_TASK","EDIT_STEP_STATUS_COMPLETE","UPDATE_STEP","UPDATE_NOTE","CHANGE_QUERY","CLEAR_QUERY","queryReducer","state","action","type","C","payload","initialState","step","currentReducer","list","id","title","task","taskSteps","note","steps","map","filter","stepId","listReducer","name","newName","orderBy","sorted","orderDir","hideCompleted","color","todaysDate","moment","Date","format","tasksReducer","date_created","date_due","temp","my_day","task_id","importantStatus","completedStatus","important","planned","date_completed","date","taskId","item","combineReducers","query","current","lists","listsReducer","tasks","localStorage","JSON","parse","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","subscribe","stringify","getState","removeTask","toggleCompleted","toggleImportant","toggleMyDay","setList","setTask","setStep","TaskDetail","el","statusColor","text","length","className","style","icon","Icon","connect","selectedListId","selectedList","numOfCompletedSteps","count","forEach","getPlannedDate","add","details","list_id","display","fontSize","arr","detail","renderDetails","selectedTaskId","dispatch","onSetTask","onToggleComplete","onToggleImportant","onClick","f","borderRadius","backgroundColor","textDecoration","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","palette","background","border","boxShadow","shadows","padding","spacing","outline","DeleteModal","location","todo","classes","React","useState","modalStyle","open","setOpen","deleteType","Modal","aria-labelledby","aria-describedby","DialogActions","Button","autoFocus","onRemoveTask","onToggleMyDay","onClose","divider","onAddTask","addTask","onAddStep","addStep","_newItem","addItem","placeholder","setItem","getSize","margin","height","borderBottom","onSubmit","e","preventDefault","newStep","uuid","v4","ref","input","flex","value","onChange","target","AddItem","changeOrder","MenuTemplate","anchorEl","menuArr","renderMenuItems","Menu","todoMenu","onChangeBgColor","changeBgColor","onChangeOrder","order","onToggleHide","toggleHide","subAnchorEl","setAnchor","subMenuOpen","setMenu","setValue","handleSubMenuClose","headerMenu","children","defaultList","MenuItem","currentTarget","handleSubItemClick","size","ListItemText","primary","caption","anchorOrigin","vertical","horizontal","transformOrigin","handleSort","join","marginRight","HeaderTitle","forwardRef","currentList","onRenameList","onSetList","namesOnList","test","subName","num","includes","renameList","HeaderBanner","formatColor","secondaryColor","setAnchorEl","variant","minWidth","HeaderButtonMenu","Boolean","onChangeDir","changeDir","onClear","resetChangeDir","barColor","getDirIcon","appBar","marginLeft","breakpoints","up","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","transition","easeOut","enteringScreen","Header","col","parseInt","AppBar","clsx","selectedTask","getFormattedDate","inputDate","onUpdateTask","currentTask","subTask","onKeyDown","which","shiftKey","onEnterPress","ListItem","currentNote","onSetNote","setNote","onUpdateNote","updateNote","ClickAwayListener","onClickAway","prev","MaterialUIPickers","onAddDateDue","selectedDate","setSelectedDate","utils","DateFnsUtils","label","newDate","KeyboardButtonProps","getDay","plannedMenu","PlannedMenu","setState","props","day","this","dateDueMenu","Component","addDateDue","onRemoveDateDue","removeDateDue","handleButtonClick","getDateDue","currentStep","currentSteps","onRemoveStep","removeStep","onSetStep","onToggleStep","toggleStep","onUpdateStep","updateStep","stepStyle","subStep","getPlaceholder","selected","List","onKeyPress","toolbar","mixins","drawer","flexShrink","drawerPaper","drawerHeader","flexDirection","justifyContent","Hidden","smDown","implementation","Drawer","anchor","Divider","root","alignItems","content","flexGrow","contentShift","MainSection","onOpen","mainStyle","filteredTasks","toLowerCase","indexOf","push","replace","sort","a","b","CssBaseline","search","shape","fade","searchIcon","pointerEvents","inputRoot","inputInput","SideSearch","InputBase","inputProps","inputRef","listIcons","index","ListItemIcon","numOfTasks","numberOfTasks","onRemoveList","removeList","onEditClick","defaultLists","customLists","onAddList","addList","setListName","newList","onChangeQuery","changeQuery","_searchInput","aria-label","xsDown","ResponsiveDrawer","inputEl","useTheme","matches","useMediaQuery","openDrawer","handleDrawerClose","select","Main","App","loadTasks","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b56f3af.chunk.js","sourcesContent":["const constants = {\n    // CURRENT\n    SET_LIST: \"SET_LIST\",\n    SET_TASK: \"SET_TASK\",\n    SET_STEP: \"SET_STEP\",\n    SET_NOTE: \"SET_NOTE\",\n    ADD_STEP: \"ADD_STEP\",\n    REMOVE_STEP: \"REMOVE_STEP\",\n\n    // LIST\n    ADD_LIST: \"ADD_LIST\",\n    REMOVE_LIST: \"REMOVE_LIST\",\n    RENAME_LIST: \"RENAME_LIST\",\n    SET_ORDERBY: \"SET_ORDERBY\",\n    SET_ORDERDIR: \"SET_ORDERDIR\",\n    RESET_ORDERDIR: \"RESET_ORDERDIR\",\n    TOGGLE_HIDE: \"TOGGLE_HIDE\",\n    SET_BGCOLOR: \"SET_BGCOLOR\",\n    \n    // TASK\n    LOAD_TASKS: \"LOAD_TASKS\",\n    ADD_TASK: \"ADD_TASK\",\n    REMOVE_TASK: \"REMOVE_TASK\",\n    EDIT_TASK_STATUS_COMPLETE: \"EDIT_TASK_STATUS_COMPLETE\",\n    EDIT_TASK_STATUS_IMPORTANT: \"EDIT_TASK_STATUS_IMPORTANT\",\n    EDIT_TASK_STATUS_MYDAY: \"EDIT_TASK_STATUS_MYDAY\",\n    REMOVE_TASK_DATE_DUE: \"REMOVE_TASK_DATE_DUE\",\n    ADD_TASK_DATE_DUE: \"ADD_TASK_DATE_DUE\",\n    UPDATE_TASK: \"UPDATE_TASK\",\n    EDIT_STEP_STATUS_COMPLETE: \"EDIT_STEP_STATUS_COMPLETE\",\n    UPDATE_STEP: \"UPDATE_STEP\",\n    UPDATE_NOTE: \"UPDATE_NOTE\",\n\n    // QUERY\n    CHANGE_QUERY: \"CHANGE_QUERY\",\n    CLEAR_QUERY: \"CLEAR_QUERY\"\n}\n\nexport default constants;","import C from '../actions/constants';\n\nconst initialState = \"\";\n\nconst queryReducer = (state=initialState, action) => {\n\tswitch(action.type) {\n        case C.CHANGE_QUERY :\n            return action.payload\n        \n        case C.CLEAR_QUERY :\n            return ''\n        \n        default :\n            return state\n    }\n}\n\nexport default queryReducer;\n","import C from '../actions/constants';\n\nconst initialState = {\n    \"list\": {\n        \"id\": \"0\",\n        \"title\": \"My Day\"\n    },\n    \"task\": {\n        \"id\": \"\",\n        \"task\": \"\"\n    },\n    \"step\": {\n        \"id\":\"\",\n        \"step\":\"\"\n    },\n    \"taskSteps\": [],\n    \"note\": \"\"\n}\n\nconst step = (state={}, action) =>\n    (action.type === C.ADD_STEP) ?\n        action.payload :\n        state\n\nconst currentReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case C.SET_LIST :\n            return {\n                ...state,\n                list: {\n                    id: action.id,\n                    title: action.payload\n                },\n                task: {\n                    id: \"\",\n                    task: \"\"\n                },\n                step: {\n                    id: \"\",\n                    step:\"\"\n                },\n                taskSteps: [],\n                note: \"\"\n            }\n        \n        case C.SET_TASK :\n            return {\n                ...state,\n                task: {\n                    id: action.id,\n                    task: action.payload\n                },\n                step: {\n                    id: \"\",\n                    step: \"\"\n                },\n                taskSteps: action.steps,\n                note: action.note\n            }\n\n        case C.SET_STEP :\n            return {\n                ...state,\n                step: action.payload,\n                taskSteps: state.taskSteps.map(step =>\n                    step.id === action.id ?\n                        action.payload\n                        :\n                        step\n                )\n            }\n                \n        case C.SET_NOTE :\n            return {\n                ...state,\n                note: action.payload\n            }\n        \n        case C.ADD_STEP :\n            return {\n                ...state,\n                taskSteps: [\n                    ...state.taskSteps,\n                    step({}, action)\n                ]\n            }\n\n        case C.REMOVE_STEP :\n            return {\n                ...state,\n                taskSteps: state.taskSteps.filter(step => step.id !== action.stepId)\n            }\n\n        default : \n            return state\n    }\n}\n\nexport default currentReducer;","import C from '../actions/constants';\n\nconst initialState = [\n    {\n        \"id\": \"0\",\n        \"name\": \"My Day\",\n        \"orderBy\": \"date_created\",\n        \"orderDir\": \"asc\",\n        \"sorted\": false,\n        \"hideCompleted\": false,\n        \"color\": [80,40,250],\n        \"defaultList\": true\n    },\n    {\n        \"id\": \"1\",\n        \"name\": \"Important\",\n        \"orderBy\": \"date_created\",\n        \"orderDir\": \"asc\",\n        \"sorted\": false,\n        \"hideCompleted\": false,\n        \"color\": [80,40,250],\n        \"defaultList\": true\n    },\n    {\n        \"id\": \"2\",\n        \"name\": \"Planned\",\n        \"orderBy\": \"date_due\",\n        \"orderDir\": \"asc\",\n        \"sorted\": false,\n        \"hideCompleted\": false,\n        \"color\": [80,40,250],\n        \"defaultList\": true\n    },\n    {\n        \"id\": \"3\",\n        \"name\": \"Tasks\",\n        \"orderBy\": \"date_created\",\n        \"orderDir\": \"asc\",\n        \"sorted\": false,\n        \"hideCompleted\": false,\n        \"color\": [80,40,250],\n        \"defaultList\": true\n    }\n];\n\nconst list = (state={}, action) =>\n    (action.type === C.ADD_LIST) ?\n        action.payload :\n        state\n\nconst listReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case C.ADD_LIST :\n            return [\n                ...state,\n                list(null, action)\n            ]\n        \n        case C.REMOVE_LIST :\n            return state.filter(list => list.id !== action.payload)\n\n        case C.RENAME_LIST :\n            return state.map(list => \n                list.id === action.payload ?\n                {\n                    ...list,\n                    name: action.newName\n                }\n                :\n                list\n            )\n\n        case C.SET_ORDERBY :\n            return state.map(list => \n                list.id === action.id ?\n                    {\n                        ...list,\n                        orderBy: action.payload,\n                        sorted: true\n                    }\n                    :\n                    list\n            )\n        \n        case C.SET_ORDERDIR :\n            return state.map(list => \n                list.id === action.id ?\n                    list.orderDir === 'asc' ?\n                        {\n                            ...list,\n                            orderDir: 'desc',\n                            sorted: true\n                        }\n                        :\n                        {\n                            ...list,\n                            orderDir: 'asc',\n                            sorted: true\n                        }\n                    :\n                    list\n            )\n        \n        case C.RESET_ORDERDIR :\n            return state.map(list => \n                list.id === action.id ?\n                    {\n                        ...list,\n                        orderDir: 'asc',\n                        sorted: false\n                    }\n                    :\n                    list\n            )\n        \n        case C.TOGGLE_HIDE :\n            return state.map(list => \n                list.id === action.id ?\n                    {\n                        ...list,\n                        hideCompleted: !list.hideCompleted\n                    }\n                    :\n                    list\n            )\n        \n        case C.SET_BGCOLOR :\n            return state.map(list => \n                list.id === action.id ?\n                    {\n                        ...list,\n                        color: action.payload\n                    }\n                    :\n                    list\n            )\n\n        default :\n            return state\n    }\n}\n\nexport default listReducer;\n","import C from '../actions/constants';\nimport moment from 'moment';\n\nconst todaysDate = moment(new Date()).format('YYYY-MM-DD');\n\nconst initialState = [];\n\nconst step = (state={}, action) =>\n    (action.type === C.ADD_STEP) ?\n        action.payload :\n        state\n        \nconst task = (state={}, action) =>\n    (action.type === C.ADD_TASK) ?\n        action.payload :\n        state\n\nconst tasksReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case C.ADD_TASK :\n            return [\n                ...state,\n                task(null, action)\n            ]\n        \n        case C.LOAD_TASKS :\n            return state.map(task =>\n                (\n                    task.date_created === todaysDate ||\n                    task.date_due === todaysDate ||\n                    task.temp === todaysDate\n                )?\n                    {\n                        ...task,\n                        my_day: true\n                    }\n                    :\n                    {\n                        ...task,\n                        my_day: false\n                    }\n                )\n        \n        case C.EDIT_TASK_STATUS_COMPLETE :\n            return state.map(task => {\n                if (task.task_id === action.payload) {\n                    if (task.importantStatus && task.date_due) {\n                        if (task.completedStatus) {\n                            return {\n                                ...task,\n                                important: !task.important,\n                                planned: !task.planned,\n                                completedStatus: !task.completedStatus,\n                                date_completed: \"\"\n                            }\n                        } else {\n                            return {\n                                ...task,\n                                important: !task.important,\n                                planned: !task.planned,\n                                completedStatus: !task.completedStatus,\n                                date_completed: todaysDate\n                            }\n                        }\n                    } else if (task.importantStatus) {\n                        if (task.completedStatus) {\n                            return {\n                                ...task,\n                                important: !task.important,\n                                completedStatus: !task.completedStatus,\n                                date_completed: \"\"\n                            }\n                        } else {\n                            return {\n                                ...task,\n                                important: !task.important,\n                                completedStatus: !task.completedStatus,\n                                date_completed: todaysDate\n                            }\n                        }\n                    } else if (task.date_due) {\n                        if (task.completedStatus) {\n                            return {\n                                ...task,\n                                planned: !task.planned,\n                                completedStatus: !task.completedStatus,\n                                date_completed: \"\"\n                            }\n                        } else {\n                            return {\n                                ...task,\n                                planned: !task.planned,\n                                completedStatus: !task.completedStatus,\n                                date_completed: todaysDate\n                            }\n                        }\n                    } else {\n                        if (task.completedStatus) {\n                            return {\n                                ...task,\n                                completedStatus: !task.completedStatus,\n                                date_completed: \"\"\n                            }\n                        } else {\n                            return {\n                                ...task,\n                                completedStatus: !task.completedStatus,\n                                date_completed: todaysDate\n                            }\n                        }\n                    }\n                } else {\n                    return task\n                }\n            })\n\n        case C.EDIT_TASK_STATUS_IMPORTANT :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                    task.completedStatus ?\n                        {\n                            ...task,\n                            importantStatus: !task.importantStatus,\n                            important: false\n                        }\n                        :\n                        {\n                            ...task,\n                            importantStatus: !task.importantStatus,\n                            important: !task.important\n                        }\n                    :\n                    task\n                )\n            \n        case C.EDIT_TASK_STATUS_MYDAY :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                    task.my_day === true ?\n                        {\n                            ...task,\n                            my_day: !task.my_day,\n                            temp: \"\"\n                        }\n                        :\n                        {\n                            ...task,\n                            my_day: !task.my_day,\n                            temp: todaysDate\n                        }\n                    :\n                    task\n            )            \n            \n        case C.REMOVE_TASK_DATE_DUE :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                {\n                    ...task,\n                    date_due: \"\",\n                    planned: false\n                }\n                :\n                task\n            )\n\n        case C.ADD_TASK_DATE_DUE :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                {\n                    ...task,\n                    date_due: action.date,\n                    planned: true\n                }\n                :\n                task\n            )\n\n        case C.UPDATE_TASK :\n            return state.map(task =>\n                task.task_id === action.taskId ?\n                    {\n                        ...task,\n                        item: action.payload\n                    }\n                    :\n                    task\n            )    \n\n        case C.SET_NOTE :\n            return state.map(task =>\n                task.task_id === action.id ?\n                {\n                    ...task,\n                    note: action.payload\n                }\n                :\n                task\n            )\n\n        case C.REMOVE_TASK :\n            return state.filter(task => task.task_id !== action.payload)\n            \n        case C.ADD_STEP :\n            return state.map(task =>\n                task.task_id === action.taskId ?\n                    {\n                        ...task,\n                        steps: [\n                            ...task.steps,\n                            step({}, action)\n                        ]\n                    }\n                    :\n                    task\n                )\n        \n        case C.EDIT_STEP_STATUS_COMPLETE :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                    {\n                        ...task,\n                        steps: task.steps.map(step =>\n                            step.id === action.stepId ?\n                                {\n                                    ...step,\n                                    completedStatus: !step.completedStatus\n                                }\n                                :\n                                step\n                        )\n                    }\n                    :\n                    task\n                )\n\n        case C.UPDATE_STEP :\n            return state.map(task =>\n                task.task_id === action.taskId ?\n                    {\n                        ...task,\n                        steps: task.steps.map(step =>\n                            step.id === action.id ?\n                                {\n                                    ...step,\n                                    step: action.payload\n                                }\n                                :\n                                step\n                        )\n                    }\n                    :\n                    task\n                )\n\n        case C.REMOVE_STEP :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                    {\n                        ...task,\n                        steps: task.steps.filter(step => step.id !== action.stepId)\n                    }\n                    :\n                    task\n                )\n            \n        case C.UPDATE_NOTE :\n            return state.map(task =>\n                task.task_id === action.taskId ?\n                    {\n                        ...task,\n                        note: action.payload\n                    }\n                    :\n                    task\n                )\n        default:\n            return state\n    }\n}\n\nexport default tasksReducer;","import { combineReducers } from 'redux';\nimport queryReducer from './queryReducer';\nimport currentReducer from './currentReducer';\nimport listsReducer from './listsReducer';\nimport tasksReducer from './tasksReducer';\n\nexport default combineReducers({\n    query: queryReducer,\n    current: currentReducer,\n    lists: listsReducer,\n    tasks: tasksReducer\n})","import rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst initialState = (localStorage[\"redux-store\"]) ?\n    JSON.parse(localStorage[\"redux-store\"]) :\n    {};\n\nconst saveState = () => \n    localStorage[\"redux-store\"] = JSON.stringify(store.getState())\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(\n      applyMiddleware(...middleware),\n    )\n  );\n\nstore.subscribe(saveState)\n\nexport default store;","import C from '../actions/constants';\n\nexport const loadTasks = () => ({\n    type: C.LOAD_TASKS\n})\n\nexport const addTask = (\n        task_id, item, date_completed, date_created, date_due, temp,\n        completedStatus, importantStatus, my_day, planned, important, tasks, list_id, note, steps\n    ) => dispatch => {\n    dispatch({\n        type: C.ADD_TASK,\n        payload: {\n            task_id, item, date_completed, date_created, date_due, temp,\n            completedStatus, importantStatus, my_day, planned, important, tasks, list_id, note, steps\n        }\n    })\n}\n\nexport const removeTask = id => ({\n    type: C.REMOVE_TASK,\n    payload: id\n})\n\nexport const toggleCompleted = id => ({\n    type: C.EDIT_TASK_STATUS_COMPLETE,\n    payload: id\n})\n\nexport const toggleImportant = id => ({\n    type: C.EDIT_TASK_STATUS_IMPORTANT,\n    payload: id\n})\n\nexport const toggleMyDay = id => ({\n    type: C.EDIT_TASK_STATUS_MYDAY,\n    payload: id\n})\n\nexport const removeDateDue = id => ({\n    type: C.REMOVE_TASK_DATE_DUE,\n    payload: id\n})\n\nexport const addDateDue = (id, date) => ({\n    type: C.ADD_TASK_DATE_DUE,\n    payload: id,\n    date\n})\n\nexport const updateTask = (taskId, newTask) => ({\n    type: C.UPDATE_TASK,\n    payload: newTask,\n    taskId\n})\n\nexport const addStep = (completedStatus, id, step, taskId) => dispatch => {\n    dispatch({\n        type: C.ADD_STEP,\n        payload: {completedStatus, id, step, taskId},\n        taskId\n    })\n}\n\nexport const removeStep = (taskId, stepId) => ({\n    type: C.REMOVE_STEP,\n    payload: taskId,\n    stepId\n})\n\nexport const toggleStep = (taskId, stepId) => ({\n    type: C.EDIT_STEP_STATUS_COMPLETE,\n    payload: taskId,\n    stepId\n})\n\nexport const updateStep = (id, step, taskId) => ({\n    type: C.UPDATE_STEP,\n    payload: step, \n    id,\n    taskId\n})\n\nexport const updateNote = (taskId, note) => ({\n    type: C.UPDATE_NOTE,\n    payload: note,\n    taskId\n})","import C from '../actions/constants';\n\nexport const setList = (id, title) => ({\n    type: C.SET_LIST,\n    payload: title,\n    id\n})\n\nexport const setTask = (id, task, note, steps) => ({\n    type: C.SET_TASK,\n    payload: task,\n    id,\n    note,\n    steps\n})\n\nexport const setStep = (id, step) => ({\n    type: C.SET_STEP,\n    payload: {id, step},\n    id\n})\n\nexport const setNote = (id, note) => ({\n    type: C.SET_NOTE,\n    payload: note,\n    id\n})","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Icon } from '@material-ui/core';\n\nconst TaskDetail = ({el, name, task}) => {\n    const todaysDate = moment(new Date()).format('YYYY-MM-DD');\n\n    const statusColor = (el.id === 'my_day' || (el.id === 'planned' && task.date_due === todaysDate))\n        ? 'royalblue'\n        : (el.id === 'planned' && task.date_due < todaysDate)\n            ? 'crimson'\n            : null;\n\n    return (\n        (el.id === \"my_day\" && task.my_day === true && name !== \"My Day\") ||\n        (el.id === \"custom\" && task.tasks === false && name !== el.text) ||\n        (el.id === \"tasks\" && task.tasks === true && name !== \"Tasks\") ||\n        (el.id === \"step\" && task.steps.length > 0) ||\n        (el.id === \"planned\" && task.date_due) ||\n        (el.id === \"note\" && task.note)\n    ) ?\n        <li className=\"main-list-detail\" style={{ color: statusColor }}>\n            {el.icon ? (\n                <Icon className=\"main-list-detail-icon\">\n                    {el.icon}\n                </Icon>\n                ) : null}\n                \n            {el.text}\n        </li>\n        : null\n};\n\nTaskDetail.propTypes = {\n    el: PropTypes.object.isRequired,\n    name: PropTypes.string.isRequired,\n    task: PropTypes.object.isRequired\n};\n\nexport default TaskDetail;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FaCheck } from 'react-icons/fa';\nimport moment from 'moment';\n\nimport TaskDetail from './TaskDetail';\n\nconst TaskDetails = ({lists, selectedListId, task}) => {\n    const selectedList = lists.filter(list => list.id === selectedListId);\n\n    const listItemDetail = () => {\n        return {\n            display: 'flex',\n            fontSize: '12px',\n            color: task.completedStatus ? 'darkgray' : 'dimgray'\n        }\n    }\n\n    const getListName = () => {\n        const arr = lists.filter(list => list.id === task.list_id);\n        return arr[0].name;\n    }\n\n    const completedTask = () => {\n        return numOfCompletedSteps() === task.steps.length ?\n            <FaCheck className=\"main-task-icon\" /> : null\n    }\n\n    const numOfCompletedSteps = () => {\n        let count = 0;\n        task.steps.forEach(step =>\n            step.completedStatus === true ? count++ : count)\n\n        return count;\n    }\n\n    const getFormattedDate = () => {\n        let formattedDate;\n        if (task.date_due === moment(new Date()).format('YYYY-MM-DD')) {\n            formattedDate = 'Today';\n        } else if (task.date_due === moment(new Date()).add(1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Tomorrow';\n        } else if (task.date_due === moment(new Date()).add(-1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Yesterday';\n        } else {\n            formattedDate = moment(task.date_due).format('ddd, MMM D')\n        }\n        return formattedDate;\n    }\n    \n    const getPlannedDate = !task.date_due ? null : getFormattedDate();\n\n    const details = [\n        {\n            \"id\": \"my_day\",\n            \"icon\": \"wb_sunny\",\n            \"text\": \"My Day\"\n        },\n        {\n            \"id\": \"tasks\",\n            \"text\": \"Tasks\"\n        },\n        {\n            \"id\": \"custom\",\n            \"text\": getListName()\n        },\n        {\n            \"id\": \"step\",\n            \"icon\": task.steps.length > 0 && completedTask() ? \"check\" : null,\n            \"text\": task.steps.length > 0 ? `${numOfCompletedSteps()} of ${task.steps.length}` : null\n        },\n        {\n            \"id\": \"planned\",\n            \"icon\": \"calendar_today\",\n            \"text\": getPlannedDate\n        },\n        {\n            \"id\": \"note\",\n            \"icon\": \"bookmark_border\",\n            \"text\": \"Note\"\n        }\n    ];\n\n    const renderDetails = arr => {\n        const name = selectedList[0].name;\n\n        return arr.map(detail =>\n            <TaskDetail\n                key={detail.id}\n                el={detail}\n                name={name}\n                task={task}\n            />\n        )\n    }\n\n    return (\n        <ul style={ listItemDetail() }>\n            { renderDetails(details) }\n        </ul>\n    );\n};\n\nTaskDetails.propTypes = {\n    lists: PropTypes.array.isRequired,\n    selectedListId: PropTypes.string.isRequired, \n    task: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"]\n});\n \nexport default connect(mapStateToProps)(TaskDetails);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaCheckCircle, FaRegCircle, FaStar, FaRegStar } from 'react-icons/fa';\nimport { connect } from 'react-redux';\n\nimport { setTask } from '../../../actions/currentActions';\nimport { toggleCompleted, toggleImportant } from '../../../actions/tasksActions'; \n\nimport TaskDetails from './TaskDetails';\n\nconst TaskItem = ({\n    selectedTaskId,\n    task,\n    onClick = f => f,\n    onSetTask = f => f,\n    onToggleComplete = f => f,\n    onToggleImportant = f => f\n}) => {\n    const handleClick = () => {\n        onSetTask(task.task_id, task.item, task.note, task.steps);\n        onClick();\n    }\n\n    const listStyle = id => {\n        return {\n            borderRadius: id === selectedTaskId ? 10 : null,\n            backgroundColor: id === selectedTaskId ? '#eee' : null\n        }\n    };\n\n    const listItem = () => {\n        return {\n            color: task.completedStatus ? 'dimgray' : 'black',\n            textDecoration: task.completedStatus ? 'line-through' : 'none'\n        }\n    };\n\n    return ( \n        <div className=\"main-list-item align-center space-between\" \n            style={ listStyle(task.task_id) } onClick={ handleClick }>\n            \n            <div className=\"main-body-task-item\">\n                {task.completedStatus ? (\n                    <FaCheckCircle\n                        className=\"list-icon list-icon-margin-rt green\"\n                        onClick={() => onToggleComplete(task.task_id)}\n                    />\n                ) : (\n                    <FaRegCircle\n                        className=\"list-icon list-icon-margin-rt gray\"\n                        onClick={() => onToggleComplete(task.task_id)}\n                    />\n                )}\n\n                <span style={ listItem() }>\n                    { task.item }\n\n                    <TaskDetails task={ task } />\n                </span>\n            </div>\n\n            {task.importantStatus ? (\n                <FaStar\n                    className=\"list-icon blue\" \n                    onClick={() => onToggleImportant(task.task_id)}\n                />\n            ) : (\n                <FaRegStar \n                    className=\"list-icon gray\"\n                    onClick={() => onToggleImportant(task.task_id)}\n                /> \n            )}\n        </div>\n    );\n};\n\nTaskItem.propTypes = {\n    selectedTaskId: PropTypes.string,\n    task: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSetTask: PropTypes.func.isRequired,\n    onToggleComplete: PropTypes.func.isRequired,\n    onToggleImportant: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    selectedTaskId: state.current.task[\"id\"]\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetTask(id, task, note, steps) {\n        dispatch(\n            setTask(id, task, note, steps)\n        )\n    },\n    onToggleComplete(id) {\n        dispatch(\n            toggleCompleted(id)\n        )\n    },\n    onToggleImportant(id) {\n        dispatch(\n            toggleImportant(id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaRegTrashAlt, FaTimes } from 'react-icons/fa';\nimport { Modal, DialogActions, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst getModalStyle = () => {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 4),\n        outline: 'none',\n    },\n}));\n\nconst DeleteModal = ({id, location, name, todo, onClick=f=>f}) => {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const deleteType = location === 'moreinfo-bottom'\n        ? <FaRegTrashAlt className=\"task-menu-item\" />\n        : location === 'moreinfo-top'\n            ? <FaTimes />\n            : (\n                <>\n                    <FaRegTrashAlt className=\"task-menu-item\" />\n                    <span>Delete {todo}</span>\n                </>\n            );\n\n    return (\n        <div className=\"delete-modal\">\n            <div id={`${todo}_${id}`} onClick={handleOpen}>\n                { deleteType }\n            </div>\n            \n            <Modal\n                aria-labelledby={`item-${todo}_${id}`}\n                aria-describedby={`content-${todo}_${id}`}\n                open={open}>\n\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id={`item-${todo}_${id}`} className=\"delete-modal-header\">\n                        \"{ name }\" will be permanently deleted.\n                    </h2>\n\n                    <p id={`content-${todo}_${id}`}>\n                        You won't be able to undo this action.\n                    </p>\n                    \n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n\n                        <Button onClick={onClick} color=\"primary\" autoFocus={true}>\n                            Delete { todo }\n                        </Button>\n                    </DialogActions>\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nDeleteModal.propTypes = {\n    id: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    todo: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nexport default DeleteModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu';\nimport {\n    FaCheckCircle,\n    FaRegCheckCircle,\n    FaRegStar,\n    FaRegSun,\n    FaStar,\n} from 'react-icons/fa';\nimport { connect } from 'react-redux';\n\nimport {\n    removeTask,\n    toggleCompleted,\n    toggleImportant,\n    toggleMyDay\n} from '../../../actions/tasksActions';\nimport TaskItem from './TaskItem';\nimport DeleteModal from '../../DeleteModal';\n\nconst Task = ({\n    task,\n    onClick = f => f,\n    onClose = f => f,\n    onRemoveTask = f => f,\n    onToggleComplete = f => f,\n    onToggleImportant = f => f,\n    onToggleMyDay=f=>f\n}) => {\n    const handleRemove = () => {\n        onRemoveTask(task.task_id);\n        onClose();\n    }\n\n    return (\n        <div className=\"main-body-task\">\n            <ContextMenuTrigger id={`menuitem_${task.task_id}`}>\n                <TaskItem task={ task } onClick={ onClick } />\n            </ContextMenuTrigger>\n\n            <ContextMenu id={`menuitem_${task.task_id}`}>\n                <MenuItem>\n                    {task.my_day ? (\n                        <div onClick={() => onToggleMyDay(task.task_id)}>\n                            <FaRegSun className=\"list-icon task-menu-item\" />\n                            <span>Remove from My Day</span>\n                        </div>\n                    ) : (\n                        <div onClick={() => onToggleMyDay(task.task_id)}>\n                            <FaRegSun className=\"list-icon task-menu-item\" />\n                            <span>Add to My Day</span>\n                        </div>   \n                    )}\n                </MenuItem>\n\n                <MenuItem>\n                    {task.completedStatus ? (\n                        <div onClick={() => onToggleComplete(task.task_id)}>\n                            <FaRegCheckCircle className=\"list-icon task-menu-item\" />\n                            <span>Mark as not completed</span>\n                        </div>\n                    ) : (\n                        <div onClick={() => onToggleComplete(task.task_id)}>\n                            <FaCheckCircle className=\"list-icon task-menu-item\" />\n                            <span>Mark as completed</span>\n                        </div> \n                    )}\n                </MenuItem>\n                \n                <MenuItem>\n                    {task.importantStatus ? (\n                        <div onClick={() => onToggleImportant(task.task_id)}>\n                            <FaRegStar className=\"list-icon task-menu-item\" />\n                            <span>Remove importance</span>\n                        </div>\n                    ) : (\n                        <div onClick={() => onToggleImportant(task.task_id)}>\n                            <FaStar className=\"list-icon task-menu-item\" />\n                            <span>Mark as important</span>\n                        </div>\n                    )}\n                </MenuItem>\n                \n                <MenuItem divider />\n\n                <MenuItem>\n                    <DeleteModal \n                        id={ task.task_id }\n                        location={ 'main-rightclick' }\n                        name={ task.item }\n                        todo={ 'task' }\n                        onClick={ handleRemove }\n                    />\n                </MenuItem>\n            </ContextMenu>\n        </div>\n    )\n};\n\nTask.propTypes = {\n    task: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onRemoveTask: PropTypes.func.isRequired,\n    onToggleComplete: PropTypes.func.isRequired,\n    onToggleImportant: PropTypes.func.isRequired,\n    onToggleMyDay: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveTask(id) {\n        dispatch(\n            removeTask(id)\n        )\n    },\n    onToggleComplete(id) {\n        dispatch(\n            toggleCompleted(id)\n        )\n    },\n    onToggleImportant(id) {\n        dispatch(\n            toggleImportant(id)\n        )\n    },\n    onToggleMyDay(id) {\n        dispatch(\n            toggleMyDay(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(Task);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FaRegCircle, FaPlus } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport uuid from 'uuid';\n\nimport { addStep, addTask } from '../actions/tasksActions';\n\nconst AddItemContainer = ({\n    addItem,\n    lists,\n    placeholder,\n    selectedListId,\n    selectedTaskId,\n    onAddStep = f => f,\n    onAddTask = f => f\n}) => {\n    const [item, setItem] = useState('');\n    const selectedList = lists.filter(list => list.id === selectedListId);\n    const name = selectedList[0].name;\n    const todaysDate = moment(new Date()).format('YYYY-MM-DD');\n    const getSize = addItem === 'task' ? 19 : 16;\n\n    const handleChange = () => {\n        setItem(_newItem.value)\n    };\n\n    let _newItem;\n\n    const itemStyle = () => {\n        return (addItem === 'task') ?\n            {\n                margin: '0 auto',\n                height: 60,\n                padding: '10px 14px',\n                borderBottom: '1px solid gainsboro'\n            } : {\n                margin: '3px 0 10px 0',\n                height: 30,\n                padding: '10px 12px',\n                borderBottom: 'none'\n            }\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (!item) return\n\n        const newStep = {\n            completedStatus: false,\n            id: uuid.v4(),\n            step: item,\n            task_id: selectedTaskId\n        }\n\n        if (addItem === 'step') {\n            onAddStep(newStep);\n        }\n\n        else {\n            if (name === \"My Day\") {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: \"\",\n                    completedStatus: false,\n                    importantStatus: false,\n                    my_day: true,\n                    planned: false,\n                    important: false,\n                    tasks: true,\n                    list_id: '3',\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            } else if (name === \"Important\") {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: \"\",\n                    completedStatus: false,\n                    importantStatus: true,\n                    my_day: false,\n                    planned: false,\n                    important: true,\n                    tasks: true,\n                    list_id: '3',\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            } else if (name === \"Planned\") {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: todaysDate,\n                    completedStatus: false,\n                    importantStatus: false,\n                    my_day: false,\n                    planned: true,\n                    important: false,\n                    tasks: true,\n                    list_id: '3',\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            } else if (name === \"Tasks\") {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: \"\",\n                    completedStatus: false,\n                    importantStatus: false,\n                    my_day: false,\n                    planned: false,\n                    important: false,\n                    tasks: true,\n                    list_id: '3',\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            } else {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: \"\",\n                    completedStatus: false,\n                    importantStatus: false,\n                    my_day: false,\n                    planned: false,\n                    important: false,\n                    tasks: false,\n                    list_id: selectedList[0].id,\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            }\n        }\n\n        setItem('');\n    };\n    \n    return (\n        <form\n            className=\"additem-form align-center\"\n            style={itemStyle()}\n            onSubmit={onSubmit}>\n\n            <button className=\"additem-btn\" type=\"submit\">\n                {!item ? (\n                    <FaPlus\n                        style={{ fontSize: getSize }}\n                        className=\"blue\"\n                    />\n                ) : (\n                    <FaRegCircle\n                        style={{ fontSize: getSize }}\n                        className=\"gray\"\n                    />\n                )}\n            </button>\n            \n            <input\n                name=\"item\"\n                placeholder={placeholder}\n                ref={input => _newItem = input}\n                style={{ flex: '10', padding: 5, border: 'none' }}\n                type=\"text\"\n                value={item}\n                onChange={e => handleChange(e.target.value)}\n            />\n        </form>\n    );\n};\n\nAddItemContainer.propTypes = {\n    addItem: PropTypes.string.isRequired,\n    lists: PropTypes.array.isRequired,\n    placeholder: PropTypes.any,\n    selectedListId: PropTypes.string.isRequired,\n    selectedTaskId: PropTypes.string.isRequired,\n    onAddStep: PropTypes.func.isRequired,\n    onAddTask: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"],\n    selectedTaskId: state.current.task[\"id\"]\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onAddTask({\n        task_id, item, date_completed, date_created, date_due,\n        temp, completedStatus, importantStatus, my_day, planned,\n        important, tasks, list_id, note, steps\n        }) {\n        dispatch(\n            addTask(\n                task_id, item, date_completed, date_created, date_due,\n                temp, completedStatus, importantStatus, my_day, planned,\n                important, tasks, list_id, note, steps\n            )\n        )\n    },\n\n    onAddStep({completedStatus, id, step, task_id}) {\n        dispatch(\n            addStep(completedStatus, id, step, task_id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddItemContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Task from './Task';\nimport AddItem from '../../AddItem';\n\nconst Body = ({ query, tasks, onClick = f => f, onClose = f => f }) => (\n    <div className=\"main-container\">\n        {tasks.map(task =>\n            <Task\n                key={task.task_id}\n                task={task}\n                onClick={onClick}\n                onClose={onClose}\n            />\n        )}\n\n        {query ?\n            null\n            :\n            <AddItem\n                addItem={'task'}\n                placeholder={'Add Task'}\n            />\n        }\n    </div>\n);\n\nBody.propTypes = {\n    query: PropTypes.string,\n    tasks: PropTypes.array,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    query: state.query\n});\n\nexport default connect(mapStateToProps)(Body);","import C from './constants';\n\nexport const addList = (id, name, orderBy, orderDir, sorted, hideCompleted, color, defaultList) => dispatch => {\n    dispatch({\n        type: C.ADD_LIST,\n        payload: {id, name, orderBy, orderDir, sorted, hideCompleted, color, defaultList}\n    })\n}\n\nexport const removeList = id => ({\n    type: C.REMOVE_LIST,\n    payload: id\n})\n\nexport const renameList = (id, newName) => ({\n    type: C.RENAME_LIST,\n    payload: id,\n    newName\n})\n\nexport const changeOrder = (orderBy, id) => ({\n    type: C.SET_ORDERBY,\n    payload: orderBy,\n    id\n})\n\nexport const changeDir = id => ({\n    type: C.SET_ORDERDIR,\n    id\n})\n\nexport const resetChangeDir = id => ({\n    type: C.RESET_ORDERDIR,\n    id\n})\n\nexport const toggleHide = id => ({\n    type: C.TOGGLE_HIDE,\n    id\n})\n\nexport const changeBgColor = (color, id) => ({\n    type: C.SET_BGCOLOR,\n    payload: color,\n    id\n})","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu } from '@material-ui/core';\n\nconst MenuTemplate = ({anchorEl, menuArr, open, onClose=f=>f, renderMenuItems=f=>f}) => (\n    <Menu\n        open={ open }\n        onClose={ onClose }\n        anchorEl={ anchorEl }>\n\n        { renderMenuItems(menuArr) }\n    </Menu>\n);\n\nMenuTemplate.propTypes = {\n    open: PropTypes.bool.isRequired,\n    anchorElement: PropTypes.any,\n    onClose: PropTypes.func.isRequired,\n    menuArr: PropTypes.array.isRequired,\n    renderMenuItems: PropTypes.func.isRequired\n};\n\nexport default MenuTemplate;\n","const todoMenu = [\n    {\n        \"id\": \"sortTasks\",\n        \"size\": '21px',\n        \"icon\": \"format_line_spacing\",\n        \"caption\": \"Sort\",\n        \"children\": [\n            {\n                \"id\": \"importantStatus\",\n                \"size\": '21px',\n                \"icon\": \"star_border\",\n                \"caption\": \"Importance\"\n            },\n            {\n                \"id\": \"item\",\n                \"size\": '21px',\n                \"icon\": \"sort_by_alpha\",\n                \"caption\": \"Alphabetically\"\n            },\n            {\n                \"id\": \"date_due\",\n                \"size\": '21px',\n                \"icon\": \"event\",\n                \"caption\": \"Due date\"\n            },\n            {\n                \"id\": \"date_created\",\n                \"size\": '21px',\n                \"icon\": \"library_add\",\n                \"caption\": \"Creation date\"\n            },\n            {\n                \"id\": \"completedStatus\",\n                \"size\": '21px',\n                \"icon\": \"check_circle_outline\",\n                \"caption\": \"Completed\"\n            },\n            {\n                \"id\": \"my_day\",\n                \"size\": '21px',\n                \"icon\": \"wb_sunny\",\n                \"caption\": \"Added to My Day\"\n            }\n        ]\n    },\n    {\n        \"id\": \"changeTheme\",\n        \"size\": '21px',\n        \"icon\": \"color_lens\",\n        \"caption\": \"Change theme\",\n        \"children\": [\n            {\n                \"id\": \"blue\",\n                \"size\": '32px',\n                \"icon\": \"lens\",\n                \"color\": [80,40,250]\n            },\n            {\n                \"id\": \"red\",\n                \"size\": '32px',\n                \"icon\": \"lens\",\n                \"color\": [250,70,60]\n            },\n            {\n                \"id\": \"purple\",\n                \"size\": '32px',\n                \"icon\": \"lens\",\n                \"color\": [100,30,150]\n            },\n            {\n                \"id\": \"green\",\n                \"size\": '32px',\n                \"icon\": \"lens\",\n                \"color\": [80,160,50]\n            },\n            {\n                \"id\": \"ltblue\",\n                \"size\": '32px',\n                \"icon\": \"lens\",\n                \"color\": [0,120,255]\n            },\n        ]\n    },\n    {\n        \"id\": \"hideTasks\",\n        \"size\": '21px',\n        \"icon\": \"check_circle_outline\",\n        \"caption\": \"Hide completed tasks\"\n    },\n    {\n        \"id\": \"showTasks\",\n        \"size\": '21px',\n        \"icon\": \"check_circle_outline\",\n        \"caption\": \"Show completed tasks\"\n    }\n]\n\nexport default todoMenu;","import React, { useState } from 'react';\nimport { FaCaretRight } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport { Icon, ListItemText, Menu, MenuItem } from '@material-ui/core';\n\nimport { changeBgColor, changeOrder, toggleHide } from '../../../actions/listsActions';\nimport MenuTemplate from '../../MenuTemplate';\nimport headerMenu from './todoMenu';\n\nconst HeaderMenuContainer = ({anchorEl, open, onClose, lists, selectedListId, onToggleHide=f=>f, onChangeBgColor=f=>f, onChangeOrder=f=>f}) => {\n    const [subAnchorEl, setAnchor] = useState(null);\n    const [subMenuOpen, setMenu] = useState(false);\n    const [value, setValue] = useState(null);\n\n    const handleSubItemClick = (e, item) => {\n        setAnchor(e.currentTarget);\n        setMenu(!subMenuOpen);\n        setValue(item.id);\n    }\n\n    const handleSubMenuClose = () => {\n        setMenu(false);\n    }\n\n    const formatColor = color => {\n        return color ?\n            'rgb(' + color.join(',') + ')' : null\n    }\n\n    const handleSort = item => {\n        item.id === 'hideTasks' || item.id === 'showTasks' ?\n            onToggleHide(selectedListId)\n            :\n            item.icon === 'lens' ?\n                onChangeBgColor(item.color, selectedListId)\n                :\n                onChangeOrder(item.id, selectedListId);\n                setMenu(false);\n                onClose();\n    }\n\n    const renderMenuItems = children => {\n        const selectedList = lists.filter(list => list.id === selectedListId),\n              name = selectedList[0].name,\n              hideCompleted = selectedList[0].hideCompleted,\n              defaultList = selectedList[0].defaultList;\n\n        return children.map(item => {\n            if (item.children) {\n                return (name !== 'Planned' || item.id !== \"sortTasks\") ?\n                    <div key={ item.id }>\n                        <MenuItem\n                            className=\"main-header-menu-item\"\n                            onClick={e => handleSubItemClick(e, item)}>\n                        \n                            <Icon\n                                className=\"main-header-icon\"\n                                style={{ fontSize: item.size }}>\n                                { item.icon }\n                            </Icon>\n\n                            <ListItemText primary={ item.caption } />\n\n                            <FaCaretRight />\n                        </MenuItem>\n\n                        { \n                            value === item.id &&\n                            <Menu\n                                anchorEl={ subAnchorEl }\n                                open={ subMenuOpen }\n                                onClose={ handleSubMenuClose }\n                                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                                transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}>\n\n                                { renderMenuItems(item.children) }\n                            </Menu>\n                        }\n                    </div>\n                    :\n                    null\n            }\n\n            return (\n                (\n                    ((name === 'My Day' && item.id !== 'my_day') && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks'))) ||\n                    (name === 'Important' && (item.id !== 'importantStatus' && item.id !== 'completedStatus') && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks'))) ||\n                    (name === 'Planned' && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks'))) ||\n                    (name === 'Tasks' && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks'))) ||\n                    (!defaultList && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks')))\n                ) ?\n                    <MenuItem\n                        key={item.id}\n                        className=\"main-header-menu-item\"\n                        onClick={() => handleSort(item)}>\n                            <Icon style={{color: formatColor(item.color), marginRight: '8px', fontSize: item.size}}>\n                                { item.icon }\n                            </Icon>\n                    \n                            <ListItemText \n                                primary={item.caption} \n                            />\n                    </MenuItem>\n                    :\n                    null\n            )\n        });\n    };\n\n    return (\n        <MenuTemplate \n            anchorEl={ anchorEl }\n            menuArr={ headerMenu }\n            open={ open }\n            onClose={ onClose }\n            renderMenuItems={ renderMenuItems }\n        />\n    )\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"]\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeBgColor(color, id) {\n        dispatch(\n            changeBgColor(color, id)\n        )\n    },\n\n    onChangeOrder(order, id) {\n        dispatch(\n            changeOrder(order, id)\n        )\n    },\n\n    onToggleHide(id) {\n        dispatch(\n            toggleHide(id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderMenuContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { setList } from '../../../actions/currentActions';\nimport { renameList } from '../../../actions/listsActions';\n\nconst HeaderTitle = React.forwardRef(({\n    currentList,\n    lists,\n    onRenameList = f => f,\n    onSetList = f => f\n}, ref) => {\n    const selectedList = lists.filter(list => list.id === currentList.id);\n    const defaultList = selectedList[0].defaultList;\n    \n    const onSubmit = e => {\n        e.preventDefault();\n\n        const namesOnList = lists.map(list => list.name);\n        const regex=/^\\s+$/;\n\n        if (regex.test(currentList.title) || currentList.title === '') {\n            let subName = \"Untitled List\"\n            let num = 1\n            \n            while (namesOnList.includes(subName)) {\n                subName = `Untitled List (${num})`;\n                num++\n            }\n            onRenameList(currentList.id, subName);\n        } else if (!namesOnList.includes(currentList.title)){\n            onRenameList(currentList.id, currentList.title);\n        } else if (namesOnList.includes(currentList.title)) {\n            let subName = currentList.title;\n            let num = 1;\n\n            while (namesOnList.includes(subName)) {\n                subName = `${subName} (${num})`\n                num++\n            }\n            onRenameList(currentList.id, subName);\n        }\n    }\n\n    return (\n        <h2 className=\"main-header-title-text\" >\n            { defaultList ?\n                currentList.title\n                :\n                <form onSubmit={ onSubmit }>\n                    <input\n                        ref={ref}\n                        type=\"text\"\n                        className=\"edit-input\"\n                        value={ currentList.title }\n                        onChange={e => onSetList(currentList.id, e.target.value)}\n                    />\n                </form>\n            }\n        </h2>\n    )\n});\n\nHeaderTitle.propTypes = {\n    currentList: PropTypes.object.isRequired,\n    lists: PropTypes.array.isRequired,\n    onRenameList: PropTypes.func.isRequired,\n    onSetList: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    currentList: state.current.list,\n    lists: state.lists\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetList(id, title) {\n        dispatch(\n            setList(id, title)\n        )\n    },\n\n    onRenameList(id, name) {\n        dispatch(\n            setList(id, name)\n        )\n\n        dispatch(\n            renameList(id, name)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })(HeaderTitle);\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { FaEllipsisH } from 'react-icons/fa';\nimport { Button } from '@material-ui/core';\n\nimport HeaderButtonMenu from './HeaderButtonMenu';\nimport HeaderTitle from './HeaderTitle';\n\nconst HeaderBanner = React.forwardRef(({ name, formatColor, secondaryColor }, ref) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleButtonClick = e => {\n        setAnchorEl(e.currentTarget);\n    }\n\n    const handleMenuClose = () => {\n        setAnchorEl(null)\n    }\n\n    return (\n        <header className=\"main-header align-center space-between\" style={{ backgroundColor: formatColor }}>\n            <div className=\"main-header-title\">\n                <HeaderTitle ref={ref} />\n\n                {name === \"My Day\" ?\n                    <span>\n                        {moment(new Date()).format('dddd, MMMM D')}\n                    </span>\n                    :\n                    null\n                }\n            </div>\n\n            <div className=\"header-banner-button\">\n                <Button\n                    variant=\"contained\"\n                    style={{\n                        minWidth: 30,\n                        color: 'white',\n                        backgroundColor: secondaryColor()\n                    }}\n                    onClick={handleButtonClick}>\n\n                    <FaEllipsisH />\n                </Button>\n\n                <HeaderButtonMenu\n                    open={Boolean(anchorEl)}\n                    onClose={handleMenuClose}\n                    anchorEl={anchorEl}\n                />\n            </div>\n        </header>\n    )\n});\n\nHeaderBanner.propTypes = {\n    name: PropTypes.string.isRequired,\n    formatColor: PropTypes.string.isRequired,\n    secondaryColor: PropTypes.func.isRequired\n};\n \nexport default HeaderBanner;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FaChevronUp, FaChevronDown, FaTimes } from 'react-icons/fa';\n\nimport { changeDir, changeOrder, resetChangeDir } from '../../../actions/listsActions';\n\nconst HeaderSortBar = ({\n    barColor,\n    lists,\n    selectedList,\n    selectedListId,\n    onChangeDir = f => f,\n    onClear = f => f\n}) => {\n    const currentList = lists.filter(list => list.id === selectedListId);\n\n    const getOrderBy = () => {\n        const orderBy = currentList[0].orderBy;\n\n        const dict = {\n            'importantStatus': 'by importance',\n            'item': 'alphabetically',\n            'date_due': 'by due date',\n            'date_created': 'by creation date',\n            'completedStatus': 'by completed',\n            'my_day': 'by added to My Day'\n        }\n\n        return dict[orderBy];\n    }\n\n    const getDirIcon = currentList[0].orderDir === 'asc'\n        ? <FaChevronUp />\n        : <FaChevronDown />;\n\n    return (\n        selectedList[0].sorted ?\n            <div className=\"main-header-sortbar align-center space-between\" style={{ backgroundColor: barColor }}>\n                <div onClick={() => onChangeDir(selectedListId)}>\n                    Sorted { getOrderBy() } { getDirIcon }\n                </div>\n                \n                <FaTimes onClick={ () => onClear(selectedListId) }/>\n            </div>\n            :\n            null\n    )\n};\n    \nHeaderSortBar.propTypes = {\n    barColor: PropTypes.string.isRequired,\n    lists: PropTypes.array.isRequired,\n    selectedList: PropTypes.array.isRequired,\n    selectedListId: PropTypes.string.isRequired,\n    onChangeDir: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired\n};\n    \nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"]\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeDir(id) {\n        dispatch(\n            changeDir(id)\n        )\n    },\n\n    onClear(id) {\n        dispatch(\n            changeOrder('date_created', id)\n        )\n\n        dispatch(\n            resetChangeDir(id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderSortBar);\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport HeaderBanner from './HeaderBanner';\nimport HeaderSortBar from './HeaderSortBar';\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        marginLeft: 200,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - 200px)`,\n        },\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        [theme.breakpoints.up('md')]: {\n            width: `calc(100% - ${drawerWidth+200}px)`,\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginRight: drawerWidth,\n        },\n    }\n}));\n\nconst Header = React.forwardRef(({lists, open, selectedListId}, ref) => {\n    const selectedList = lists.filter(list => list.id === selectedListId);\n    const name = selectedList[0].name;\n    const formatColor = 'rgb(' + selectedList[0].color.join(',') + ')';\n\n    const secondaryColor = () => {\n        const newArr = selectedList[0].color.map(col => parseInt(col * .6));\n        const newColor = 'rgb(' + newArr.join(',') + ')';\n        return newColor;\n    };\n\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}>\n            <HeaderBanner\n                ref={ref}\n                name={name}\n                formatColor={formatColor}\n                secondaryColor={secondaryColor}\n            />\n\n            <HeaderSortBar\n                barColor={secondaryColor()}\n                selectedList={selectedList}\n            />\n        </AppBar>\n    );\n});\n\nHeader.propTypes = {\n    lists: PropTypes.array.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedListId: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"]\n});\n\nexport default connect(mapStateToProps, null, null, { forwardRef: true })(Header);\n","import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { FaChevronRight } from 'react-icons/fa';\nimport { connect } from 'react-redux';\n\nimport { removeTask } from '../actions/tasksActions';\nimport DeleteModal from './DeleteModal';\n\nconst MoreInfoFooter = ({\n    selectedTask,\n    onClose = f => f,\n    onRemoveTask = f => f\n}) => {\n    if (!selectedTask[0]) return null;\n\n    const onRemove = (id) => {\n        onRemoveTask(id);\n        onClose();\n    }\n\n    const getFormattedDate = (inputDate) => {\n        let formattedDate;\n        if (inputDate === moment(new Date()).format('YYYY-MM-DD')) {\n            formattedDate = 'Today';\n        } else if (inputDate === moment(new Date()).add(1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Tomorrow';\n        } else if (inputDate === moment(new Date()).add(-1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Yesterday';\n        } else {\n            formattedDate = moment(inputDate).format('ddd, MMM D')\n        }\n        \n        return formattedDate;\n    }\n\n    return (\n        <div className=\"moreinfo-footer moreinfo-margins\">\n            <FaChevronRight onClick={onClose} />\n\n            {selectedTask[0].completedStatus ? (\n                <span className=\"moreinfo-footer-text\">\n                    Completed { getFormattedDate(selectedTask[0].date_completed) }\n                </span>\n            ) : (\n                <span className=\"moreinfo-footer-text\">\n                    Created { getFormattedDate(selectedTask[0].date_created) }\n                </span>\n            )}\n\n            <DeleteModal \n                id={ selectedTask[0].task_id }\n                location= { 'moreinfo-bottom' }\n                name={ selectedTask[0].item }\n                todo={ 'task' }\n                onClick={() => onRemove(selectedTask[0].task_id)}\n            />\n        </div>\n    )\n};\n\nMoreInfoFooter.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onRemoveTask: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveTask(id) {\n        dispatch(\n            removeTask(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(MoreInfoFooter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    FaCheckCircle,\n    FaRegCircle,\n    FaStar,\n    FaRegStar\n} from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport Textarea from 'react-textarea-autosize';\n\nimport { setTask } from '../actions/currentActions'; \nimport {\n    toggleCompleted,\n    toggleImportant,\n    updateTask\n} from '../actions/tasksActions';\n\nconst MoreInfoHeader = ({\n    currentTask,\n    selectedTask,\n    onSetTask = f => f,\n    onToggleComplete = f => f,\n    onToggleImportant=f=>f,\n    onUpdateTask = f => f\n}) => {\n    if (!selectedTask[0]) return null;\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (currentTask.task === '') {\n            let subTask = selectedTask[0].item;\n            onUpdateTask(currentTask.id, subTask, selectedTask[0].note, selectedTask[0].steps);\n        } else {\n            onUpdateTask(currentTask.id, currentTask.task, selectedTask[0].note, selectedTask[0].steps);\n        }\n    }\n\n    const onEnterPress = e => {\n        if (e.which === 13 && !e.shiftKey) {\n            e.preventDefault();\n            onSubmit(e);\n        }\n    }\n\n    return (\n        <div className=\"moreinfo-header moreinfo-margins\">\n            <div className=\"moreinfo-header-item\">\n                {selectedTask[0].completedStatus ? (\n                    <FaCheckCircle \n                        className=\"list-icon list-icon-margin-rt green\" \n                        onClick={() => onToggleComplete(selectedTask[0].task_id)}\n                    />\n                ) : (\n                    <FaRegCircle \n                        className=\"list-icon list-icon-margin-rt gray\" \n                        onClick={() => onToggleComplete(selectedTask[0].task_id)}\n                    />\n                )}\n\n                <form onSubmit={onSubmit}>\n                    <Textarea\n                        type=\"text\"\n                        className=\"moreinfo-list-title\"\n                        value={ currentTask.task }\n                        onChange={e => onSetTask(currentTask.id, e.target.value, selectedTask[0].note, selectedTask[0].steps)}\n                        onKeyDown={e => onEnterPress(e)}\n                    />\n                </form>\n            </div>\n\n            {selectedTask[0].importantStatus ? (\n                <FaStar \n                    className=\"list-icon blue\" \n                    onClick={() => onToggleImportant(selectedTask[0].task_id)}\n                />\n            ) : (\n                <FaRegStar \n                    className=\"list-icon gray\" \n                    onClick={() => onToggleImportant(selectedTask[0].task_id)}\n                />\n            )}\n        </div>\n    );\n};\n\nMoreInfoHeader.propTypes = {\n    currentTask: PropTypes.object,\n    selectedTask: PropTypes.array,\n    onSetTask: PropTypes.func.isRequired,\n    onToggleComplete: PropTypes.func.isRequired,\n    onToggleImportant: PropTypes.func.isRequired,\n    onUpdateTask: PropTypes.func.isRequired\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onSetTask(id, task, note, steps) {\n        dispatch(\n            setTask(id, task, note, steps)\n        )\n    },\n\n    onToggleComplete(id) {\n        dispatch(\n            toggleCompleted(id)\n        )\n    },\n\n    onToggleImportant(id) {\n        dispatch(\n            toggleImportant(id)\n        )\n    },\n\n    onUpdateTask(id, task, note, steps) {\n        dispatch(\n            setTask(id, task, note, steps)\n        )\n\n        dispatch(\n            updateTask(id, task)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(MoreInfoHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaRegSun, FaTimes } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport { ListItem } from '@material-ui/core';\n\nimport { toggleMyDay } from '../actions/tasksActions';\n\nconst MoreInfoMyDay = ({\n    currentList,\n    selectedTask,\n    onClose = f => f,\n    onToggleMyDay = f => f\n}) => {\n    if (!selectedTask[0]) return null;\n\n    const handleClick = () => {\n        if (currentList === \"My Day\") {\n            onClose();\n        }\n        onToggleMyDay(selectedTask[0].task_id);\n    };\n    \n    return (\n        <ListItem className=\"moreinfo-body-list-item\" onClick={ handleClick }>\n            {selectedTask[0].my_day ? (\n                <div className=\"align-center space-between\">\n                    <div className=\"align-center blue\">\n                        <FaRegSun className=\"list-icon list-icon-left\"/>\n                        Added to My Day \n                    </div>\n                    \n                    <FaTimes className=\"dimgray\" />\n                </div>\n            ) : (\n                <div className=\"align-center dimgray\">\n                    <FaRegSun className=\"list-icon list-icon-left\" />\n                    <span>Add to My Day</span>\n                </div>\n            )}\n        </ListItem>\n    );\n};\n\nMoreInfoMyDay.propTypes = {\n    currentList: PropTypes.string.isRequired,\n    selectedTask: PropTypes.array,\n    onClose: PropTypes.func.isRequired,\n    onToggleMyDay: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    currentList: state.current.list[\"title\"],\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleMyDay(id) {\n        dispatch(\n            toggleMyDay(id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoreInfoMyDay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Textarea from 'react-textarea-autosize';\nimport { ClickAwayListener, ListItem } from '@material-ui/core';\n\nimport { setNote } from '../actions/currentActions';\nimport { updateNote } from '../actions/tasksActions';\n\nconst MoreInfoNote = ({\n    currentNote,\n    selectedTask,\n    onSetNote = f => f,\n    onUpdateNote = f => f\n}) => {\n    const [open, setOpen] = React.useState(false);\n\n    if (!selectedTask[0]) return null;\n    if (!currentNote) currentNote = \"\";\n\n    const handleClick = () => {\n        setOpen(prev => !prev);\n    };\n\n    const handleClickAway = () => {\n        if (open) {\n            onUpdateNote(selectedTask[0].task_id, currentNote);\n        }\n        setOpen(false);\n    };\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway}>\n            <ListItem className=\"moreinfo-body-note\" onClick={handleClick}>\n                {selectedTask[0].note ? (\n                    <Textarea\n                        value={ currentNote }\n                        onChange={e => onSetNote(selectedTask[0].task_id, e.target.value)}\n                    />\n                ) : (\n                    <Textarea\n                        placeholder={'Add a Note'}\n                        value={ currentNote }\n                        onChange={e => onSetNote(selectedTask[0].task_id, e.target.value)}\n                    />\n                ) }\n            </ListItem>\n        </ClickAwayListener>\n    );\n};\n\nMoreInfoNote.propTypes = {\n    currentNote: PropTypes.string,\n    selectedTask: PropTypes.array,\n    onSetNote: PropTypes.func.isRequired,\n    onUpdateNote: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    currentNote: state.current.note,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetNote(id, note) {\n        dispatch(\n            setNote(id, note)\n        )\n    },\n\n    onUpdateNote(id, note) {\n        dispatch(\n            updateNote(id, note)\n        )\n    }\n});\n\nexport default (connect)(mapStateToProps, mapDispatchToProps)(MoreInfoNote);\n","import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';\n\nimport 'date-fns';\n\nconst MaterialUIPickers = ({\n    selectedTask,\n    tasks,\n    onAddDateDue = f => f,\n    onClose = f => f\n}) => {\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n        \n        const arr = tasks.filter(task => task.task_id === selectedTask[0].task_id);\n        const taskId = arr[0].task_id;\n        const newDate = moment(date).format('YYYY-MM-DD');\n\n        onAddDateDue(taskId, newDate);\n        onClose();\n    }\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n                margin=\"normal\"\n                id=\"date-picker-dialog\"\n                label=\"Pick a Date\"\n                format=\"MM/dd/yyyy\"\n                value={selectedDate}\n                onChange={handleDateChange}\n                KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                }}\n            />\n        </MuiPickersUtilsProvider>\n    );\n};\n\nMaterialUIPickers.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    tasks: PropTypes.array.isRequired,\n    onAddDateDue: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default MaterialUIPickers;","import moment from 'moment';\n\nconst getDay = num => {\n    return moment(new Date()).add(num, 'days').format('ddd')\n}\n\nconst plannedMenu = [\n    {\n        \"id\": \"today\",\n        \"icon\": \"today\",\n        \"caption\": \"Today\",\n        \"size\": \"13px\",\n        \"num\": 0,\n        \"day\": getDay(0)\n    },\n    {\n        \"id\": \"tomorrow\",\n        \"icon\": \"event\",\n        \"caption\": \"Tomorrow\",\n        \"size\": \"13px\",\n        \"num\": 1,\n        \"day\": getDay(1)\n    },\n    {\n        \"id\": \"nextWeek\",\n        \"icon\": \"event_note\",\n        \"caption\": \"Next Week\",\n        \"size\": \"13px\",\n        \"num\": 2,\n        \"day\": getDay(2)\n    },\n    {\n        \"id\":\"pickDate\",\n        \"icon\": \"calendar_today\",\n        \"caption\": \"Pick a Date\",\n        \"children\": \"children\"\n    }\n]\n\nexport default plannedMenu;\n","import React, { Component } from 'react';\nimport moment from 'moment'\nimport { connect } from 'react-redux';\nimport { Icon, ListItemText, MenuItem } from '@material-ui/core';\n\nimport { addDateDue } from '../actions/tasksActions';\nimport DatePicker from './MoreInfoPlannedDatePicker';\nimport dateDueMenu from './MoreInfoPlannedDateMenu';\nimport MenuTemplate from './MenuTemplate';\n\nclass PlannedMenu extends Component {\n    state={\n        subAnchorEl: null,\n        subMenuOpen: false,\n        value: null\n    }\n\n    handleSubItemClick = (e, item) => {\n        this.setState({\n            subAnchorEl: e.currentTarget,\n            subMenuOpen: !this.state.subMenuOpen,\n            value: item.id\n        });\n    }\n\n    handleSubMenuClose = () => {\n        this.setState({\n            subMenuOpen: false\n        });\n    }\n    \n    handleSort = (item) => {\n        const { selectedTask, tasks, onAddDateDue=f=>f, onClose=f=>f } = this.props;\n        const arr = tasks.filter(task => task.task_id === selectedTask[0].task_id);\n        const taskId = arr[0].task_id;\n        const newDate = moment(new Date()).add(item.num, 'days').format('YYYY-MM-DD');\n\n        onAddDateDue(taskId, newDate);\n        onClose();\n    }\n\n    renderMenuItems = children => {\n        const { selectedTask, tasks, onAddDateDue=f=>f, onClose=f=>f } = this.props;\n\n        return children.map(item => {\n            if (item.children) {\n                return (\n                    <MenuItem key={item.id}>\n                        <DatePicker\n                            selectedTask={ selectedTask }\n                            tasks={ tasks }\n                            onAddDateDue={ onAddDateDue }\n                            onClose={ onClose }\n                        />\n                    </MenuItem>\n                )\n            }\n\n            return (\n                <MenuItem key={item.id}\n                    className=\"moreinfo-planned-item align-center space-between\"\n                    onClick={() => this.handleSort(item)}>\n                        <Icon className=\"list-icon moreinfo-planned-icon\">\n                            { item.icon }\n                        </Icon>\n                \n                        <ListItemText primary={item.caption} />\n\n                        <span style={{fontSize: item.size}}>\n                            {item.day}\n                        </span>\n                </MenuItem>\n            )\n        });\n    };\n \n    render() {\n        const { anchorEl, open, onClose } = this.props;\n        \n        return (\n            <MenuTemplate\n                anchorEl={anchorEl}\n                menuArr={dateDueMenu}\n                open={open}\n                onClose={onClose}\n                renderMenuItems={this.renderMenuItems}\n            />\n        );\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onAddDateDue(id, date) {\n        dispatch(\n            addDateDue(id, date)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(PlannedMenu);","import React, { useState } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { FaRegCalendar, FaTimes } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport { ListItem } from '@material-ui/core';\n\nimport { removeDateDue } from '../actions/tasksActions';\nimport PlannedMenu from './MoreInfoPlannedMenu';\n\nconst MoreInfoPlanned = ({\n    selectedTask,\n    tasks,\n    onRemoveDateDue=f=>f,\n}) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    if (!selectedTask[0]) return null;\n\n    const todaysDate = moment(new Date()).format('YYYY-MM-DD');\n\n    const plannedStyle = () => {\n        return {\n            color: selectedTask[0].date_due < todaysDate ? 'crimson' : 'royalblue'\n        }\n    }\n\n    const handleButtonClick = e => {\n        setAnchorEl(e.currentTarget);\n    }\n\n    const handleMenuClose = () => {\n        setAnchorEl(null)\n    }\n\n    const getDateDue = () => {\n        if (!selectedTask[0].date_due) return\n\n        let formattedDate;\n        if (selectedTask[0].date_due === todaysDate) {\n            formattedDate = 'Today';\n        } else if (selectedTask[0].date_due === moment(new Date()).add(1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Tomorrow';\n        } else if (selectedTask[0].date_due === moment(new Date()).add(-1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Yesterday';\n        } else {\n            formattedDate = moment(selectedTask[0].date_due).format('ddd, MMM D')\n        }\n        return formattedDate;\n    }\n\n    return (\n        <ListItem className=\"moreinfo-body-list-item\">\n            {!selectedTask[0].date_due ? (\n                <div className=\"align-center dimgray\" onClick={ handleButtonClick }>\n                    <FaRegCalendar className=\"list-icon list-icon-margin-rt\" />\n                    <span>Add Due Date</span>\n                </div>\n            ) : (\n                <div className=\"align-center space-between\">\n                    <div className=\"align-center\" style={plannedStyle()} onClick={ handleButtonClick }>\n                        <FaRegCalendar className=\"list-icon list-icon-margin-rt\" />\n                        <span>Due {getDateDue()}</span>\n                    </div>\n\n                    <FaTimes\n                        className=\"dimgray\"\n                        onClick={() => onRemoveDateDue(selectedTask[0].task_id)}\n                    />\n                </div>\n            )}\n\n            <PlannedMenu\n                open={ Boolean(anchorEl) }\n                onClose={ handleMenuClose }\n                anchorEl={ anchorEl }\n                selectedTask={ selectedTask }\n                tasks={ tasks }\n            />\n        </ListItem>\n    );\n};\n\nMoreInfoPlanned.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    tasks: PropTypes.array.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveDateDue(id) {\n        dispatch(\n            removeDateDue(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(MoreInfoPlanned);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaCheckCircle, FaRegCircle } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport Textarea from 'react-textarea-autosize';\nimport { List, ListItem } from '@material-ui/core';\n\nimport { setStep } from '../actions/currentActions'; \nimport { removeStep, toggleStep, updateStep } from '../actions/tasksActions';\nimport AddItem from './AddItem';\nimport DeleteModal from './DeleteModal';\n\nconst MoreInfoSteps = ({\n    currentStep,\n    currentSteps,\n    selectedTask,\n    step,\n    onRemoveStep = f => f,\n    onSetStep = f => f,\n    onToggleStep = f => f,\n    onUpdateStep = f => f\n}) => {\n    if (!selectedTask[0]) return null;\n\n    const stepContainer = id => {\n        return {\n            backgroundColor: currentStep.id === id ? '#eee' : null,\n        }\n    }\n\n    const stepStyle = step => {\n        return step.completedStatus ?\n            {\n                color: 'dimgray',\n                textDecoration: 'line-through'\n            } : {\n                color: 'black',\n                textDecoration: 'none'\n            }\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (currentStep.step === '') {\n            let subStep = currentStep[0].step;\n            onUpdateStep(currentStep.id, subStep, selectedTask[0].task_id);\n        } else {\n            onUpdateStep(currentStep.id, currentStep.step, selectedTask[0].task_id);\n        }\n    }\n\n    const onEnterPress = e => {\n        if (e.which === 13 && !e.shiftKey) {\n            e.preventDefault();\n            onSubmit(e);\n        }\n    }\n\n    const getPlaceholder = (step) => {\n        const el = currentSteps.filter(selected => selected.id === step.id);\n\n        if (!el[0]) return\n        return el[0].step\n    }\n\n    const renderSteps = () => {\n        if (selectedTask[0].steps.length === 0) return null;\n        \n        return selectedTask[0].steps.map(step =>\n            <ListItem\n                key={`${step.step}_${step.id}`}\n                className=\"moreinfo-step\"\n                style={stepContainer(step.id)}\n                onClick={() => onSetStep(step.id, step.step)}>\n\n                <div className=\"align-center\">\n                    {step.completedStatus ? (\n                        <FaCheckCircle \n                            className=\"moreinfo-step-margin-rt green\" \n                            onClick={() => onToggleStep(selectedTask[0].task_id, step.id)}\n                        />\n                    ) : (\n                        <FaRegCircle \n                            className=\"moreinfo-step-margin-rt gray\" \n                            onClick={() => onToggleStep(selectedTask[0].task_id, step.id)}\n                        />\n                    )}\n                    \n                    <Textarea\n                        style={ stepStyle(step) }\n                        type=\"text\"\n                        value={getPlaceholder(step)}\n                        onChange={e => onSetStep(step.id, e.target.value)}\n                        onKeyPress={e => onEnterPress(e)}\n                    />\n                </div>\n\n                <DeleteModal \n                    id={ step.id }\n                    location={ 'moreinfo-top' }\n                    name={ step.step }\n                    todo={ 'step' }\n                    onClick={() => onRemoveStep(selectedTask[0].task_id, step.id)}\n                />\n            </ListItem>\n        )\n    }\n    \n    return (\n        <div className=\"moreinfo-body-steps\">\n            <List>\n                { renderSteps() }\n            </List>\n\n            <AddItem\n                addItem={'step'}\n                placeholder={\n                    selectedTask[0].steps.length > 0 ?\n                        'Next Step' : 'Add step'\n                }\n            />\n        </div>\n        \n    );\n};\n\nMoreInfoSteps.propTypes = {\n    currentStep: PropTypes.object,\n    currentSteps: PropTypes.array,\n    selectedTask: PropTypes.array,\n    step: PropTypes.object,\n    onRemoveStep: PropTypes.func.isRequired,\n    onSetStep: PropTypes.func.isRequired,\n    onToggleStep: PropTypes.func.isRequired,\n    onUpdateStep: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    currentStep: state.current.step,\n    currentSteps: state.current.taskSteps,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveStep(taskId, stepId) {\n        dispatch(\n            removeStep(taskId, stepId)\n        )\n    },\n\n    onSetStep(id, step) {\n        dispatch(\n            setStep(id, step)\n        )\n    },\n\n    onToggleStep(taskId, stepId) {\n        dispatch(\n            toggleStep(taskId, stepId)\n        )\n    },\n\n    onUpdateStep(id, step, taskId) {\n        dispatch(\n            setStep(id, step, taskId)\n        )\n    \n        dispatch(\n            updateStep(id, step, taskId)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoreInfoSteps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Divider, Drawer, Hidden } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MoreInfoFooter from '../../components/MoreInfoFooter';\nimport MoreInfoHeader from '../../components/MoreInfoHeader';\nimport MoreInfoMyDay from '../../components/MoreInfoMyDay';\nimport MoreInfoNote from '../../components/MoreInfoNote';\nimport MoreInfoPlanned from '../../components/MoreInfoPlanned';\nimport MoreInfoSteps from '../../components/MoreInfoSteps';\n\nimport './styles.css';\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: theme.mixins.toolbar,\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        background: '#FAFAFA'\n    },\n    drawerHeader: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n    },\n}));\n\nconst MoreInfo = ({currentTask, open, tasks, onClose=f=>f}) => {\n    const classes = useStyles();\n    const selectedTask = tasks.filter(task => task.task_id === currentTask.id);\n\n    return (\n        <Hidden smDown implementation=\"css\">\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"right\"\n                open={ open }\n                classes={{\n                    paper: classes.drawerPaper,\n                }}>\n\n                <div className={classes.drawerHeader}>\n                    <div className={classes.toolbar} />\n\n                    <MoreInfoHeader\n                        currentTask={currentTask}\n                        selectedTask={selectedTask}\n                    />\n\n                    <div className=\"moreinfo-body\">\n                        <MoreInfoSteps\n                            selectedTask={selectedTask}\n                        />\n\n                        <Divider />\n\n                        <MoreInfoMyDay\n                            selectedTask={selectedTask}\n                            onClose={onClose}\n                        />\n\n                        <Divider />\n\n                        <MoreInfoPlanned\n                            selectedTask={selectedTask}\n                            tasks={tasks}\n                        />\n\n                        <Divider />\n\n                        <MoreInfoNote\n                            selectedTask={selectedTask}\n                        />\n                    </div>\n\n                    <MoreInfoFooter\n                        selectedTask={selectedTask}\n                        onClose={onClose}\n                    />\n                </div>\n            </Drawer>\n        </Hidden>\n    )\n};\n\nMoreInfo.propTypes = {\n    currentTask: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    tasks: PropTypes.array.isRequired, \n    onClose: PropTypes.func.isRequired\n};\n\n\nconst mapStateToProps = state => ({\n    currentTask: state.current.task,\n    tasks: state.tasks\n});\n\nexport default connect(mapStateToProps)(MoreInfo);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CssBaseline } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ListBody from '../../components/Main/Body';\nimport Header from '../../components/Main/Header';\nimport MoreInfo from '../MoreInfo/';\n\nimport './styles.css';\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        [theme.breakpoints.up('md')]: {\n            marginRight: -drawerWidth,\n        }\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: 0,\n    },\n}));\n\nconst MainSection = React.forwardRef(({ lists, query, selectedListId, tasks, open, onClose = f => f, onOpen = f => f }, ref) => {\n    const classes = useStyles();\n\n    const mainStyle = () => {\n        return {\n            position: selectedList[0].sorted ? 'relative' : null,\n            top: selectedList[0].sorted ? 30 : null\n        }\n    }\n    \n    let filteredTasks = [],\n        order,\n        selectedList = lists.filter(list => list.id === selectedListId),\n        name = selectedList[0].name,\n        orderBy = selectedList[0].orderBy,\n        orderDir = selectedList[0].orderDir,\n        hideCompleted = selectedList[0].hideCompleted;\n\n    orderDir === 'asc' ? order = 1 : order = -1;\n\n    query ?\n        tasks.forEach(task => {\n            if (\n                (task.item.toLowerCase().indexOf(query) !== -1) ||\n                (task.note.toLowerCase().indexOf(query) !== -1)\n            ) {\n                filteredTasks.push(task);\n            }\n        })\n        :\n        filteredTasks = tasks\n            .filter(task => {\n                return task[`${name.toLowerCase().replace(/ /g, \"_\")}`] || task.list_id === selectedListId\n            })\n            .sort((a, b) => {\n                return (\n                    orderBy === 'item' ||\n                    orderBy === 'date_due' ||\n                    orderBy === 'date_created'\n                ) ?\n                    (a[orderBy].toLowerCase() < b[orderBy].toLowerCase()) ? -1 * order : 1 * order\n                    :\n                    (orderDir === 'asc') ?\n                        b[orderBy] - a[orderBy] : a[orderBy] - b[orderBy]\n            })\n            .filter(task => hideCompleted ? !task.completedStatus : task)\n\n    return (\n        // refactor\n        query ? (\n            <div style={{flexGrow: 1}}>\n                {filteredTasks.length > 0 ?\n                    <div className={classes.root}>\n                        <main style={mainStyle()}\n                            className={clsx(classes.content, {\n                                [classes.contentShift]: open,\n                            })}>\n\n                            <ListBody tasks={filteredTasks} onClick={onOpen} onClose={onClose} />\n                        </main>\n\n                        <MoreInfo open={open} onClose={onClose} />\n                    </div>\n                    :\n                    <div className=\"main-no-match align-center\">\n                        <p>We searched high and low but couldn't find what you're looking for.</p>\n                    </div>\n                }\n            </div>\n        ) : (\n            <div style={{flexGrow: 1}} className={classes.root}>\n                <CssBaseline />\n\n                <Header ref={ref} open={open} />\n\n                <main style={ mainStyle() }\n                    className={clsx(classes.content, {\n                        [classes.contentShift]: open,\n                    })}>\n\n                    <div className={classes.drawerHeader} />\n\n                    <ListBody tasks={ filteredTasks } onClick={ onOpen } onClose={ onClose } />\n                </main>\n\n                <MoreInfo open={ open } onClose={ onClose } />\n            </div>\n        )\n    )\n});\n\nMainSection.propTypes = {\n    lists: PropTypes.array,\n    open: PropTypes.bool.isRequired,\n    query: PropTypes.string,\n    selectedListId: PropTypes.string,\n    tasks: PropTypes.array,\n    onClose: PropTypes.func.isRequired,\n    onOpen: PropTypes.func.isRequired\n};\n    \nconst mapStateToProps = state => ({\n    lists: state.lists,\n    query: state.query,\n    selectedListId: state.current.list[\"id\"],\n    tasks: state.tasks,\n});\n\nexport default connect(mapStateToProps, null, null, {forwardRef: true})(MainSection);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaSearch, FaTimesCircle } from 'react-icons/fa';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: theme.mixins.toolbar,\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade('#787', 0.15),\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '50%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(5),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '88%'\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 6),\n        transition: theme.transitions.create('width'),\n        width: '90%',\n    },\n}));\n\nconst SideSearch = React.forwardRef(({query, onChange=f=>f, onClear=f=>f}, ref) => {\n    const classes = useStyles();\n\n    return (\n        <div className=\"side-search\">\n            <div className={classes.toolbar} />\n\n            <div className={classes.search} style={{width: '90%', margin: 'auto'}}>\n                <div className={classes.searchIcon}>\n                    <FaSearch className=\"side-search-icons\" />\n                </div>\n\n                <InputBase\n                    placeholder=\"Search\"\n                    classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'Search' }}\n                    inputRef={ ref }\n                    onChange={ onChange }\n                />\n\n                {!query ?\n                    null :\n                    <FaTimesCircle\n                        className=\"side-search-icons\"\n                        onClick={onClear}\n                    />\n                }\n            </div>\n        </div>\n    );\n});\n\nSideSearch.propTypes = {\n    query: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default SideSearch;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    FaList,\n    FaRegSun,\n    FaRegStar,\n    FaRegCalendar,\n    FaRegCalendarCheck\n} from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\n\nimport { setList } from '../actions/currentActions';\n\nconst listIcons = [<FaRegSun />, <FaRegStar />, <FaRegCalendar />, <FaRegCalendarCheck />];\n\nconst SideListItem = ({\n    list,\n    index,\n    lists,\n    query,\n    selectedListId,\n    tasks,\n    onClick = f => f,\n    onClose = f => f,\n    onSetList = f => f\n}) => {\n    const selectedList = lists.filter(list => list.id === selectedListId);\n    const name = selectedList[0].name;\n\n    const headerStyle = text => {\n        return {\n            alignItems: 'center',\n            backgroundColor: name === text ? 'gainsboro' : null,\n            display: 'flex', \n            justifyContent: 'space-between'\n        }\n    }\n\n    const iconStyle = color => {\n        return {\n            marginRight: -25, \n            fontSize: 19,\n            color: 'rgb(' + color.join(',') + ')'\n        }\n    }\n\n    const handleClick = () => {\n        if (query) {\n            onClick()\n        }\n\n        onSetList(list.id, list.name);\n        onClose();\n    }\n\n    const numberOfTasks = (id, name) => {\n        const numOfTasks = tasks.filter(task =>\n            ((task[`${name.toLowerCase().replace(/ /g,\"_\") }`] || task.list_id === id) && !task.completedStatus)\n        ).length\n        \n        return numOfTasks > 0 ?\n            <div className=\"gray\">\n                { numOfTasks }\n            </div>\n            :\n            null\n    }\n\n    return (\n        <ListItem style={ headerStyle(list.name) } onClick={ handleClick }>\n            <div className=\"side-list-item\">\n                <ListItemIcon style={ iconStyle(list.color) }>\n                    { list.defaultList ? listIcons[index] : <FaList /> }\n                </ListItemIcon>\n\n                <ListItemText primary={list.name} />\n            </div>\n\n            { numberOfTasks(list.id, list.name) } \n        </ListItem>\n    );\n};\n\nSideListItem.propTypes = {\n    index: PropTypes.number,\n    list: PropTypes.object.isRequired,\n    lists: PropTypes.array.isRequired,\n    query: PropTypes.string.isRequired,\n    selectedListId: PropTypes.string.isRequired,\n    tasks: PropTypes.array,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSetList: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    query: state.query,\n    selectedListId: state.current.list[\"id\"],\n    tasks: state.tasks\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetList(id, title) {\n        dispatch(\n            setList(id, title)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideListItem);\n","import React from 'react';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu';\nimport { FaRegEdit } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { setList } from '../actions/currentActions';\nimport { removeList } from '../actions/listsActions';\nimport { removeTask } from '../actions/tasksActions';\n\nimport SideListItem from './SideListItem';\nimport DeleteModal from './DeleteModal';\n\n\nconst SideCustomList = ({\n    list,\n    tasks,\n    onClick = f => f,\n    onClose = f => f,\n    onEditClick = f => f,\n    onRemoveList = f => f,\n    onRemoveTask = f => f \n}) => {\n    const removeTasks = () => {\n        const listTasks = tasks.filter(task => task.list_id === list.id);\n\n        listTasks.forEach(task => onRemoveTask(task.task_id))\n    }\n\n    const removeAll = () => {\n        removeTasks();\n        onRemoveList(list.id);\n    }\n\n    return (\n        <div className=\"side-custom-list\">\n            <ContextMenuTrigger id={list.id}>\n                <SideListItem\n                    list={ list }\n                    onClick={ onClick }\n                    onClose={ onClose }\n                />\n            </ContextMenuTrigger>\n\n            <ContextMenu id={list.id}>\n                <MenuItem onClick={ onEditClick }>\n                    <FaRegEdit className=\"list-icon task-menu-item\" />\n                    <span>Rename list</span>\n                </MenuItem>\n\n                <MenuItem>\n                    <DeleteModal\n                        id={ list.id }\n                        location={ 'side-rightclick' }\n                        name={ list.name }\n                        todo={ 'list'}\n                        onClick={ removeAll }\n                    />\n                </MenuItem>\n            </ContextMenu>\n        </div>\n    )\n};\n\nSideCustomList.propTypes = {\n    list: PropTypes.object.isRequired,\n    tasks: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired,\n    onRemoveList: PropTypes.func.isRequired,\n    onRemoveTask: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    tasks: state.tasks\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveList(id) {\n        dispatch(\n            removeList(id)\n        )\n\n        dispatch(\n            setList('0', 'My Day')\n        )\n    },\n\n    onRemoveTask(id) {\n        dispatch(\n            removeTask(id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideCustomList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Divider, List } from '@material-ui/core';\n\nimport CustomList from './SideCustomList';\nimport SideListItem from './SideListItem';\n\nconst SideLists = ({lists, onClick=f=>f, onClose=f=>f, onEditClick=f=>f}) => {\n    const defaultLists = lists\n        .filter(list => list.defaultList)\n        .map((list, index) => (\n            <SideListItem\n                key={list.name + '_' + list.id}\n                list={ list }\n                index={ index }\n                onClick={ onClick }\n                onClose={ onClose }\n            />\n        ))\n\n    const customLists = lists\n        .filter(list => !list.defaultList)\n        .map(list => (\n            <CustomList\n                key={list.name + '_' + list.id}\n                list={ list }\n                onClick={ onClick }\n                onEditClick={ onEditClick }\n                onClose={ onClose }\n            />\n        ))\n\n    return (\n        <List className=\"side-lists\">\n            { defaultLists }\n\n            <Divider style={{margin: 10}} />\n\n            { customLists }\n        </List>\n    );\n};\n\nSideLists.propTypes = {\n    lists: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n});\n\nexport default connect(mapStateToProps)(SideLists);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaPlus } from 'react-icons/fa';\nimport { connect } from 'react-redux';\nimport uuid from 'uuid';\nimport { ListItemText } from '@material-ui/core';\n\nimport { setList } from '../actions/currentActions';\nimport { addList } from '../actions/listsActions';\n\nconst SideAddList = ({lists, onAddList=f=>f, onEditClick=f=>f, onClose=f=>f})  => {\n    const namesOnList = lists.map(list => list.name);\n\n    const setListName = () => {\n        let subName = \"Untitled List\";\n        let num = 1;\n\n        while (namesOnList.includes(subName)) {\n            subName = `Untitled List ${num}`;\n            num++;\n        }\n\n        return subName;\n    }\n\n    const handleClick = () => {\n        const newList = {\n            id: uuid.v4(),\n            name: setListName(),\n            orderBy: 'date_created',\n            orderDir: 'asc',\n            sorted: false,\n            hideCompleted: false,\n            color: [80,40,250],\n            defaultList: false\n        }\n\n        onAddList(newList);\n        onEditClick();\n        onClose();\n    }\n\n    return (\n        <div className=\"side-add-list\" onClick={ handleClick }>\n            <FaPlus className=\"list-icon list-icon-margin-rt\" />\n\n            <ListItemText primary=\"New List\" />\n        </div>\n    )\n};\n\nSideAddList.propTypes = {\n    lists: PropTypes.array.isRequired,\n    onAddList: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onAddList({id, name, orderBy, orderDir, sorted, hideCompleted, color, defaultList}) {\n        dispatch(\n            addList(id, name, orderBy, orderDir, sorted, hideCompleted, color, defaultList)\n        )\n\n        dispatch(\n            setList(id, name)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideAddList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Drawer, Hidden } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SideSearch from '../../components/SideSearch';\nimport SideLists from '../../components/SideLists';\nimport SideAddList from '../../components/SideAddList';\n\nimport { changeQuery, clearQuery } from '../../actions/queryActions';\n\nimport './styles.css';\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        background: '#eee'\n    },\n}));\n\nconst Side = ({query, onChangeQuery=f=>f, onClear=f=>f, onClose=f=>f, onEditClick=f=>f}) => {\n    let _searchInput;\n\n    const handleChange = e => {\n        onChangeQuery(e.target.value);\n        onClose();\n    }\n\n    const clearSearch = () => {\n        _searchInput.value = '';\n        onClear();\n    }\n\n    const classes = useStyles();\n\n    return (\n        <nav className={classes.drawer} aria-label=\"Todo Lists\">\n            <Hidden xsDown implementation=\"css\">\n                <Drawer open variant=\"permanent\" classes={{paper: classes.drawerPaper}}>\n                    <SideSearch\n                        ref={input => _searchInput = input}\n                        query={query}\n                        onChange={handleChange}\n                        onClear={clearSearch}\n                    />\n\n                    <SideLists\n                        onClick={onClear}\n                        onClose={onClose}\n                        onEditClick={onEditClick}\n                    />\n\n                    <SideAddList\n                        onEditClick={onEditClick}\n                        onClose={onClose}\n                    />\n                </Drawer>\n            </Hidden>\n        </nav>\n    )\n};\n\nSide.propTypes = {\n    query: PropTypes.string,\n    onChangeQuery: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    query: state.query\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeQuery(query) {\n        dispatch(\n            changeQuery(query)\n        )\n    },\n\n    onClear() {\n        dispatch(\n            clearQuery()\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {forwardRef: true})(Side);","import C from './constants';\n\nexport const changeQuery = query => ({\n    type: C.CHANGE_QUERY,\n    payload: query\n})\n\nexport const clearQuery = () => ({\n    type: C.CLEAR_QUERY\n})","import React from 'react';\nimport { CssBaseline, useMediaQuery} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport Main from '../sections/Main/';\nimport Side from '../sections/Side/';\n\nconst ResponsiveDrawer = () => {\n    let inputEl = null;\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('md'));\n\n    const [openDrawer, setOpen] = React.useState(false)\n\n    const handleDrawerOpen = () => {\n        if (!matches) return\n        setOpen(true);\n    }\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    }\n\n    const editClick = () => {\n        if(inputEl) {\n            inputEl.select();\n        }\n    }\n\n    return (\n        <div style={{display: 'flex'}}>\n            <CssBaseline />\n\n            <Side\n                onClose={ handleDrawerClose }\n                onEditClick={ editClick }\n            />\n\n            <Main\n                ref={input => inputEl = input}\n                open={ openDrawer }\n                onOpen={ handleDrawerOpen }\n                onClose={ handleDrawerClose }\n            />\n        </div>\n    );\n};\n\nexport default ResponsiveDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadTasks } from './actions/tasksActions';\nimport ResponsiveDrawer from './components/ResponsiveDrawer';\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.loadTasks();\n    }\n    \n    render() {\n        return (\n            <ResponsiveDrawer />\n        );\n    }\n}\n\nexport default connect(null, { loadTasks })(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}