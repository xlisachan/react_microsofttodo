{"version":3,"sources":["actions/constants.js","reducers/queryReducer.js","reducers/currentReducer.js","reducers/listsReducer.js","reducers/tasksReducer.js","reducers/index.js","store/index.js","actions/tasksActions.js","components/Side/Search/Search.js","actions/listsActions.js","actions/currentActions.js","components/Side/Lists/TitleRow.js","components/Side/Lists/TitleRowContainer.js","components/common/DeleteModal.js","components/Side/Lists/RightClickMenuSide.js","components/Side/Lists/RightClickMenuSideContainer.js","components/Side/Lists/TitleList.js","components/Side/Lists/TitleListContainer.js","components/Side/AddList/AddList.js","components/Side/AddList/AddListContainer.js","components/Side/Sidebar.js","components/Side/index.js","actions/queryActions.js","components/Main/Todolist/Body/Task/Status/Completed.js","components/Main/Todolist/Body/Task/Status/Important.js","components/Main/Todolist/Body/Task/Details/Detail.js","components/Main/Todolist/Body/Task/Details/Details.js","components/Main/Todolist/Body/Task/Item.js","components/Main/Todolist/Body/Task/Task.js","components/Main/Todolist/Body/Task/TaskContainer.js","components/Main/Todolist/Body/Task/MenuItem/MarkMyDay.js","components/Main/Todolist/Body/Task/MenuItem/MarkCompleted.js","components/Main/Todolist/Body/Task/MenuItem/MarkImportant.js","components/Main/Todolist/Body/Task/RightClickMenu/RightClickMenu.js","components/Main/Todolist/Body/Task/Tasks.js","components/common/AddButton.js","components/common/AddItem.js","components/common/AddItemContainer.js","components/Main/Todolist/Body/index.js","components/MoreInfo/Header/Status/Completed.js","components/MoreInfo/Header/Status/Important.js","components/MoreInfo/Header/HeaderSection.js","components/MoreInfo/Header/HeaderSectionContainer.js","components/MoreInfo/Body/Sections/Steps/Completed.js","components/MoreInfo/Body/Sections/Steps/Step.js","components/MoreInfo/Body/Sections/Steps/StepContainer.js","components/MoreInfo/Body/Sections/Steps/Steps.js","components/MoreInfo/Body/Sections/Steps/StepsContainer.js","components/MoreInfo/Body/Sections/MyDay.js","components/MoreInfo/Body/Sections/Planned/PlannedButton.js","components/MoreInfo/Body/Sections/Planned/DatePicker.js","components/common/MenuTemplate.js","components/MoreInfo/Body/Sections/Planned/DateMenu.js","components/MoreInfo/Body/Sections/Planned/PlannedMenu.js","components/MoreInfo/Body/Sections/Planned/MorePlanned.js","components/MoreInfo/Body/Sections/Note.js","components/MoreInfo/Body/BodySection.js","components/MoreInfo/Footer/Completed.js","components/MoreInfo/Footer/FooterSection.js","components/MoreInfo/Footer/FooterSectionContainer.js","components/MoreInfo/MoreInfo.js","components/MoreInfo/MoreInfoContainer.js","components/Main/Results/Results.js","components/Main/Results/ResultsContainer.js","components/Main/Todolist/Header/Title/Name.js","components/Main/Todolist/Header/Title/NameContainer.js","components/Main/Todolist/Header/Title/TodaysDate.js","components/Main/Todolist/Header/Title/MenuButton/todoMenu.js","components/Main/Todolist/Header/Title/MenuButton/HeaderMenuContainer.js","components/Main/Todolist/Header/Title/MenuButton/HeaderButton.js","components/Main/Todolist/Header/Title/index.js","components/Main/Todolist/Header/SortBar/SortBar.js","components/Main/Todolist/Header/SortBar/SortBarContainer.js","components/Main/Todolist/Header/Header.js","components/Main/Todolist/Header/index.js","components/Main/Todolist/TodoList.js","components/Main/Main.js","components/Main/index.js","components/ResponsiveDrawer.js","App.js","index.js"],"names":["constants","SET_LIST","SET_TASK","SET_STEP","SET_NOTE","ADD_STEP","REMOVE_STEP","ADD_LIST","REMOVE_LIST","RENAME_LIST","SET_ORDERBY","SET_ORDERDIR","RESET_ORDERDIR","TOGGLE_HIDE","SET_BGCOLOR","LOAD_TASKS","ADD_TASK","REMOVE_TASK","EDIT_TASK_STATUS_COMPLETE","EDIT_TASK_STATUS_IMPORTANT","EDIT_TASK_STATUS_MYDAY","REMOVE_TASK_DATE_DUE","ADD_TASK_DATE_DUE","UPDATE_TASK","EDIT_STEP_STATUS_COMPLETE","UPDATE_STEP","UPDATE_NOTE","CHANGE_QUERY","CLEAR_QUERY","queryReducer","state","action","type","C","payload","initialState","step","currentReducer","list","id","title","task","taskSteps","note","steps","map","filter","stepId","listReducer","name","newName","orderBy","sorted","orderDir","hideCompleted","color","todaysDate","moment","Date","format","tasksReducer","date_created","date_due","temp","my_day","task_id","importantStatus","completedStatus","important","planned","date_completed","date","taskId","item","combineReducers","query","current","lists","listsReducer","tasks","localStorage","JSON","parse","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","REDUX_DEVTOOLS_EXTENSION_COMPOSE","subscribe","stringify","getState","removeTask","toggleCompleted","toggleImportant","toggleMyDay","useStyles","makeStyles","theme","toolbar","mixins","search","position","borderRadius","shape","backgroundColor","fade","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","Search","React","forwardRef","ref","onChange","f","onClear","classes","className","style","margin","fontSize","InputBase","placeholder","root","input","inputProps","inputRef","onClick","changeOrder","setList","setTask","setStep","TitleRow","listIcons","index","headerStyle","iconStyle","numberOfTasks","ListItem","ListItemIcon","defaultList","ListItemText","primary","connect","selectedListId","dispatch","onSetList","onClose","text","join","numOfTasks","toLowerCase","replace","list_id","length","getModalStyle","top","left","transform","paper","palette","background","border","boxShadow","shadows","outline","DeleteModal","location","todo","useState","modalStyle","open","setOpen","deleteType","Modal","aria-labelledby","aria-describedby","fontWeight","DialogActions","Button","autoFocus","RightClickMenuSide","onEditClick","onRemove","Fragment","onRemoveList","removeList","onRemoveTask","forEach","TitleList","renderLists","List","overflow","paddingBottom","defaults","Divider","customs","defaultLists","customLists","AddList","onAddList","addList","namesOnList","setListName","subName","num","includes","newList","uuid","v4","drawer","flexShrink","drawerPaper","Sidebar","aria-label","Hidden","xsDown","implementation","Drawer","variant","onChangeQuery","changeQuery","_searchInput","e","target","value","onToggleComplete","completed","notCompleted","onToggleImportant","notImportant","Detail","el","statusColor","detailIcon","icon","Icon","paddingTop","listDetail","selectedList","numOfCompletedSteps","count","getPlannedDate","add","details","arr","detail","renderDetails","Item","textDecoration","Task","selectedTaskId","onSetTask","onToggleMyDay","removeMyDay","addMyDay","markNotCompleted","markCompleted","removeImportance","markImportant","divider","Tasks","AddButton","addItem","getSize","status","AddItem","itemStyle","onSubmit","flex","propTypes","PropTypes","string","isRequired","func","onAddTask","addTask","onAddStep","addStep","_newItem","setItem","borderBottom","preventDefault","newStep","selectedTask","HeaderSection","currentTask","onEnterPress","onKeyDown","onUpdateTask","subTask","which","shiftKey","Completed","onToggleStep","Step","stepContainer","stepStyle","getPlaceholder","onRemoveStep","onSetStep","onKeyPress","currentStep","currentSteps","removeStep","toggleStep","onUpdateStep","updateStep","selected","subStep","Steps","StepsContainer","currentList","onRemoveDateDue","removeDateDue","show","getDateDue","MaterialUIPickers","onAddDateDue","selectedDate","setSelectedDate","utils","DateFnsUtils","label","newDate","KeyboardButtonProps","MenuTemplate","anchorEl","menuArr","renderMenuItems","Menu","getDay","plannedMenu","PlannedMenu","subAnchorEl","subMenuOpen","handleSubItemClick","setState","currentTarget","handleSubMenuClose","handleSort","props","children","MenuItem","caption","size","day","this","dateDueMenu","Component","addDateDue","Planned","setAnchorEl","Boolean","currentNote","onSetNote","setNote","onUpdateNote","updateNote","ClickAwayListener","onClickAway","prev","BodySection","MorePlanned","getFormattedDate","inputDate","created","FooterSection","drawerHeader","flexDirection","More","smDown","anchor","MoreInfo","content","flexGrow","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","Match","filteredTasks","onOpen","clsx","NoMatch","ResultsContainer","Title","NameContainer","onRenameList","Name","test","renameList","TodaysDate","todoMenu","onChangeBgColor","changeBgColor","onChangeOrder","order","onToggleHide","toggleHide","setAnchor","setMenu","setValue","headerMenu","anchorOrigin","vertical","horizontal","transformOrigin","HeaderButton","buttonColor","minWidth","formatColor","secondaryColor","SortBar","barColor","getDirIcon","getOrderBy","onChangeDir","changeDir","resetChangeDir","appBar","appBarShift","drawerWidth","Header","AppBar","HeaderContainer","col","parseInt","TodoList","CssBaseline","Main","array","bool","MainContainer","indexOf","push","sort","a","b","ResponsiveDrawer","inputEl","useTheme","matches","useMediaQuery","openDrawer","handleDrawerClose","Side","select","App","loadTasks","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f847650b.chunk.js","sourcesContent":["const constants = {\n    // CURRENT\n    SET_LIST: \"SET_LIST\",\n    SET_TASK: \"SET_TASK\",\n    SET_STEP: \"SET_STEP\",\n    SET_NOTE: \"SET_NOTE\",\n    ADD_STEP: \"ADD_STEP\",\n    REMOVE_STEP: \"REMOVE_STEP\",\n\n    // LIST\n    ADD_LIST: \"ADD_LIST\",\n    REMOVE_LIST: \"REMOVE_LIST\",\n    RENAME_LIST: \"RENAME_LIST\",\n    SET_ORDERBY: \"SET_ORDERBY\",\n    SET_ORDERDIR: \"SET_ORDERDIR\",\n    RESET_ORDERDIR: \"RESET_ORDERDIR\",\n    TOGGLE_HIDE: \"TOGGLE_HIDE\",\n    SET_BGCOLOR: \"SET_BGCOLOR\",\n    \n    // TASK\n    LOAD_TASKS: \"LOAD_TASKS\",\n    ADD_TASK: \"ADD_TASK\",\n    REMOVE_TASK: \"REMOVE_TASK\",\n    EDIT_TASK_STATUS_COMPLETE: \"EDIT_TASK_STATUS_COMPLETE\",\n    EDIT_TASK_STATUS_IMPORTANT: \"EDIT_TASK_STATUS_IMPORTANT\",\n    EDIT_TASK_STATUS_MYDAY: \"EDIT_TASK_STATUS_MYDAY\",\n    REMOVE_TASK_DATE_DUE: \"REMOVE_TASK_DATE_DUE\",\n    ADD_TASK_DATE_DUE: \"ADD_TASK_DATE_DUE\",\n    UPDATE_TASK: \"UPDATE_TASK\",\n    EDIT_STEP_STATUS_COMPLETE: \"EDIT_STEP_STATUS_COMPLETE\",\n    UPDATE_STEP: \"UPDATE_STEP\",\n    UPDATE_NOTE: \"UPDATE_NOTE\",\n\n    // QUERY\n    CHANGE_QUERY: \"CHANGE_QUERY\",\n    CLEAR_QUERY: \"CLEAR_QUERY\"\n}\n\nexport default constants;","import C from '../actions/constants';\n\nconst initialState = \"\";\n\nconst queryReducer = (state=initialState, action) => {\n\tswitch(action.type) {\n        case C.CHANGE_QUERY :\n            return action.payload\n        \n        case C.CLEAR_QUERY :\n            return ''\n        \n        default :\n            return state\n    }\n}\n\nexport default queryReducer;\n","import C from '../actions/constants';\n\nconst initialState = {\n    \"list\": {\n        \"id\": \"0\",\n        \"title\": \"My Day\"\n    },\n    \"task\": {\n        \"id\": \"\",\n        \"task\": \"\"\n    },\n    \"step\": {\n        \"id\":\"\",\n        \"step\":\"\"\n    },\n    \"taskSteps\": [],\n    \"note\": \"\"\n}\n\nconst step = (state={}, action) =>\n    (action.type === C.ADD_STEP) ?\n        action.payload :\n        state\n\nconst currentReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case C.SET_LIST :\n            return {\n                ...state,\n                list: {\n                    id: action.id,\n                    title: action.payload\n                },\n                task: {\n                    id: \"\",\n                    task: \"\"\n                },\n                step: {\n                    id: \"\",\n                    step:\"\"\n                },\n                taskSteps: [],\n                note: \"\"\n            }\n        \n        case C.SET_TASK :\n            return {\n                ...state,\n                task: {\n                    id: action.id,\n                    task: action.payload\n                },\n                step: {\n                    id: \"\",\n                    step: \"\"\n                },\n                taskSteps: action.steps,\n                note: action.note\n            }\n\n        case C.SET_STEP :\n            return {\n                ...state,\n                step: action.payload,\n                taskSteps: state.taskSteps.map(step =>\n                    step.id === action.id ?\n                        action.payload\n                        :\n                        step\n                )\n            }\n                \n        case C.SET_NOTE :\n            return {\n                ...state,\n                note: action.payload\n            }\n        \n        case C.ADD_STEP :\n            return {\n                ...state,\n                taskSteps: [\n                    ...state.taskSteps,\n                    step({}, action)\n                ]\n            }\n\n        case C.REMOVE_STEP :\n            return {\n                ...state,\n                taskSteps: state.taskSteps.filter(step => step.id !== action.stepId)\n            }\n\n        default : \n            return state\n    }\n}\n\nexport default currentReducer;","import C from '../actions/constants';\n\nconst initialState = [\n    {\n        \"id\": \"0\",\n        \"name\": \"My Day\",\n        \"orderBy\": \"date_created\",\n        \"orderDir\": \"asc\",\n        \"sorted\": false,\n        \"hideCompleted\": false,\n        \"color\": [80,40,250],\n        \"defaultList\": true\n    },\n    {\n        \"id\": \"1\",\n        \"name\": \"Important\",\n        \"orderBy\": \"date_created\",\n        \"orderDir\": \"asc\",\n        \"sorted\": false,\n        \"hideCompleted\": false,\n        \"color\": [80,40,250],\n        \"defaultList\": true\n    },\n    {\n        \"id\": \"2\",\n        \"name\": \"Planned\",\n        \"orderBy\": \"date_due\",\n        \"orderDir\": \"asc\",\n        \"sorted\": false,\n        \"hideCompleted\": false,\n        \"color\": [80,40,250],\n        \"defaultList\": true\n    },\n    {\n        \"id\": \"3\",\n        \"name\": \"Tasks\",\n        \"orderBy\": \"date_created\",\n        \"orderDir\": \"asc\",\n        \"sorted\": false,\n        \"hideCompleted\": false,\n        \"color\": [80,40,250],\n        \"defaultList\": true\n    }\n];\n\nconst list = (state={}, action) =>\n    (action.type === C.ADD_LIST) ?\n        action.payload :\n        state\n\nconst listReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case C.ADD_LIST :\n            return [\n                ...state,\n                list(null, action)\n            ]\n        \n        case C.REMOVE_LIST :\n            return state.filter(list => list.id !== action.payload)\n\n        case C.RENAME_LIST :\n            return state.map(list => \n                list.id === action.payload ?\n                {\n                    ...list,\n                    name: action.newName\n                }\n                :\n                list\n            )\n\n        case C.SET_ORDERBY :\n            return state.map(list => \n                list.id === action.id ?\n                    {\n                        ...list,\n                        orderBy: action.payload,\n                        sorted: true\n                    }\n                    :\n                    list\n            )\n        \n        case C.SET_ORDERDIR :\n            return state.map(list => \n                list.id === action.id ?\n                    list.orderDir === 'asc' ?\n                        {\n                            ...list,\n                            orderDir: 'desc',\n                            sorted: true\n                        }\n                        :\n                        {\n                            ...list,\n                            orderDir: 'asc',\n                            sorted: true\n                        }\n                    :\n                    list\n            )\n        \n        case C.RESET_ORDERDIR :\n            return state.map(list => \n                list.id === action.id ?\n                    {\n                        ...list,\n                        orderDir: 'asc',\n                        sorted: false\n                    }\n                    :\n                    list\n            )\n        \n        case C.TOGGLE_HIDE :\n            return state.map(list => \n                list.id === action.id ?\n                    {\n                        ...list,\n                        hideCompleted: !list.hideCompleted\n                    }\n                    :\n                    list\n            )\n        \n        case C.SET_BGCOLOR :\n            return state.map(list => \n                list.id === action.id ?\n                    {\n                        ...list,\n                        color: action.payload\n                    }\n                    :\n                    list\n            )\n\n        default :\n            return state\n    }\n}\n\nexport default listReducer;\n","import C from '../actions/constants';\nimport moment from 'moment';\n\nconst todaysDate = moment(new Date()).format('YYYY-MM-DD');\n\nconst initialState = [];\n\nconst step = (state={}, action) =>\n    (action.type === C.ADD_STEP) ?\n        action.payload :\n        state\n        \nconst task = (state={}, action) =>\n    (action.type === C.ADD_TASK) ?\n        action.payload :\n        state\n\nconst tasksReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case C.ADD_TASK :\n            return [\n                ...state,\n                task(null, action)\n            ]\n        \n        case C.LOAD_TASKS :\n            return state.map(task =>\n                (\n                    task.date_created === todaysDate ||\n                    task.date_due === todaysDate ||\n                    task.temp === todaysDate\n                )?\n                    {\n                        ...task,\n                        my_day: true\n                    }\n                    :\n                    {\n                        ...task,\n                        my_day: false\n                    }\n                )\n        \n        case C.EDIT_TASK_STATUS_COMPLETE :\n            return state.map(task => {\n                if (task.task_id === action.payload) {\n                    if (task.importantStatus && task.date_due) {\n                        if (task.completedStatus) {\n                            return {\n                                ...task,\n                                important: !task.important,\n                                planned: !task.planned,\n                                completedStatus: !task.completedStatus,\n                                date_completed: \"\"\n                            }\n                        } else {\n                            return {\n                                ...task,\n                                important: !task.important,\n                                planned: !task.planned,\n                                completedStatus: !task.completedStatus,\n                                date_completed: todaysDate\n                            }\n                        }\n                    } else if (task.importantStatus) {\n                        if (task.completedStatus) {\n                            return {\n                                ...task,\n                                important: !task.important,\n                                completedStatus: !task.completedStatus,\n                                date_completed: \"\"\n                            }\n                        } else {\n                            return {\n                                ...task,\n                                important: !task.important,\n                                completedStatus: !task.completedStatus,\n                                date_completed: todaysDate\n                            }\n                        }\n                    } else if (task.date_due) {\n                        if (task.completedStatus) {\n                            return {\n                                ...task,\n                                planned: !task.planned,\n                                completedStatus: !task.completedStatus,\n                                date_completed: \"\"\n                            }\n                        } else {\n                            return {\n                                ...task,\n                                planned: !task.planned,\n                                completedStatus: !task.completedStatus,\n                                date_completed: todaysDate\n                            }\n                        }\n                    } else {\n                        if (task.completedStatus) {\n                            return {\n                                ...task,\n                                completedStatus: !task.completedStatus,\n                                date_completed: \"\"\n                            }\n                        } else {\n                            return {\n                                ...task,\n                                completedStatus: !task.completedStatus,\n                                date_completed: todaysDate\n                            }\n                        }\n                    }\n                } else {\n                    return task\n                }\n            })\n\n        case C.EDIT_TASK_STATUS_IMPORTANT :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                    task.completedStatus ?\n                        {\n                            ...task,\n                            importantStatus: !task.importantStatus,\n                            important: false\n                        }\n                        :\n                        {\n                            ...task,\n                            importantStatus: !task.importantStatus,\n                            important: !task.important\n                        }\n                    :\n                    task\n                )\n            \n        case C.EDIT_TASK_STATUS_MYDAY :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                    task.my_day === true ?\n                        {\n                            ...task,\n                            my_day: !task.my_day,\n                            temp: \"\"\n                        }\n                        :\n                        {\n                            ...task,\n                            my_day: !task.my_day,\n                            temp: todaysDate\n                        }\n                    :\n                    task\n            )            \n            \n        case C.REMOVE_TASK_DATE_DUE :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                {\n                    ...task,\n                    date_due: \"\",\n                    planned: false\n                }\n                :\n                task\n            )\n\n        case C.ADD_TASK_DATE_DUE :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                {\n                    ...task,\n                    date_due: action.date,\n                    planned: true\n                }\n                :\n                task\n            )\n\n        case C.UPDATE_TASK :\n            return state.map(task =>\n                task.task_id === action.taskId ?\n                    {\n                        ...task,\n                        item: action.payload\n                    }\n                    :\n                    task\n            )    \n\n        case C.SET_NOTE :\n            return state.map(task =>\n                task.task_id === action.id ?\n                {\n                    ...task,\n                    note: action.payload\n                }\n                :\n                task\n            )\n\n        case C.REMOVE_TASK :\n            return state.filter(task => task.task_id !== action.payload)\n            \n        case C.ADD_STEP :\n            return state.map(task =>\n                task.task_id === action.taskId ?\n                    {\n                        ...task,\n                        steps: [\n                            ...task.steps,\n                            step({}, action)\n                        ]\n                    }\n                    :\n                    task\n                )\n        \n        case C.EDIT_STEP_STATUS_COMPLETE :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                    {\n                        ...task,\n                        steps: task.steps.map(step =>\n                            step.id === action.stepId ?\n                                {\n                                    ...step,\n                                    completedStatus: !step.completedStatus\n                                }\n                                :\n                                step\n                        )\n                    }\n                    :\n                    task\n                )\n\n        case C.UPDATE_STEP :\n            return state.map(task =>\n                task.task_id === action.taskId ?\n                    {\n                        ...task,\n                        steps: task.steps.map(step =>\n                            step.id === action.id ?\n                                {\n                                    ...step,\n                                    step: action.payload\n                                }\n                                :\n                                step\n                        )\n                    }\n                    :\n                    task\n                )\n\n        case C.REMOVE_STEP :\n            return state.map(task =>\n                task.task_id === action.payload ?\n                    {\n                        ...task,\n                        steps: task.steps.filter(step => step.id !== action.stepId)\n                    }\n                    :\n                    task\n                )\n            \n        case C.UPDATE_NOTE :\n            return state.map(task =>\n                task.task_id === action.taskId ?\n                    {\n                        ...task,\n                        note: action.payload\n                    }\n                    :\n                    task\n                )\n        default:\n            return state\n    }\n}\n\nexport default tasksReducer;","import { combineReducers } from 'redux';\nimport queryReducer from './queryReducer';\nimport currentReducer from './currentReducer';\nimport listsReducer from './listsReducer';\nimport tasksReducer from './tasksReducer';\n\nexport default combineReducers({\n    query: queryReducer,\n    current: currentReducer,\n    lists: listsReducer,\n    tasks: tasksReducer\n})","import rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\n\nconst initialState = (localStorage[\"redux-store\"]) ?\n    JSON.parse(localStorage[\"redux-store\"]) :\n    {};\n\nconst saveState = () => \n    localStorage[\"redux-store\"] = JSON.stringify(store.getState())\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      window.REDUX_DEVTOOLS_EXTENSION_COMPOSE ? window.REDUX_DEVTOOLS_EXTENSION_COMPOSE({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose\n    )\n  );\n\nstore.subscribe(saveState)\n\nexport default store;","import C from '../actions/constants';\n\nexport const loadTasks = () => ({\n    type: C.LOAD_TASKS\n})\n\nexport const addTask = (\n        task_id, item, date_completed, date_created, date_due, temp,\n        completedStatus, importantStatus, my_day, planned, important, tasks, list_id, note, steps\n    ) => dispatch => {\n    dispatch({\n        type: C.ADD_TASK,\n        payload: {\n            task_id, item, date_completed, date_created, date_due, temp,\n            completedStatus, importantStatus, my_day, planned, important, tasks, list_id, note, steps\n        }\n    })\n}\n\nexport const removeTask = id => ({\n    type: C.REMOVE_TASK,\n    payload: id\n})\n\nexport const toggleCompleted = id => ({\n    type: C.EDIT_TASK_STATUS_COMPLETE,\n    payload: id\n})\n\nexport const toggleImportant = id => ({\n    type: C.EDIT_TASK_STATUS_IMPORTANT,\n    payload: id\n})\n\nexport const toggleMyDay = id => ({\n    type: C.EDIT_TASK_STATUS_MYDAY,\n    payload: id\n})\n\nexport const removeDateDue = id => ({\n    type: C.REMOVE_TASK_DATE_DUE,\n    payload: id\n})\n\nexport const addDateDue = (id, date) => ({\n    type: C.ADD_TASK_DATE_DUE,\n    payload: id,\n    date\n})\n\nexport const updateTask = (taskId, newTask) => ({\n    type: C.UPDATE_TASK,\n    payload: newTask,\n    taskId\n})\n\nexport const addStep = (completedStatus, id, step, taskId) => dispatch => {\n    dispatch({\n        type: C.ADD_STEP,\n        payload: {completedStatus, id, step, taskId},\n        taskId\n    })\n}\n\nexport const removeStep = (taskId, stepId) => ({\n    type: C.REMOVE_STEP,\n    payload: taskId,\n    stepId\n})\n\nexport const toggleStep = (taskId, stepId) => ({\n    type: C.EDIT_STEP_STATUS_COMPLETE,\n    payload: taskId,\n    stepId\n})\n\nexport const updateStep = (id, step, taskId) => ({\n    type: C.UPDATE_STEP,\n    payload: step, \n    id,\n    taskId\n})\n\nexport const updateNote = (taskId, note) => ({\n    type: C.UPDATE_NOTE,\n    payload: note,\n    taskId\n})","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaSearch, FaTimesCircle } from 'react-icons/fa';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: theme.mixins.toolbar,\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade('#787', 0.15),\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '50%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(5),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 6),\n        transition: theme.transitions.create('width'),\n        width: '90%',\n    },\n}));\n\nconst Search = React.forwardRef(({query, onChange=f=>f, onClear=f=>f}, ref) => {\n    const classes = useStyles();\n\n    return (\n        <div className=\"search-bar\">\n            <div className={classes.toolbar} />\n\n            <div className={classes.search} style={{width: '90%', margin: 'auto'}}>\n                <div className={classes.searchIcon}>\n                    <FaSearch style={{fontSize: '1rem'}} />\n                </div>\n\n                <InputBase\n                    style={{width: '88%'}}\n                    placeholder=\"Search\"\n                    classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'Search' }}\n                    inputRef={ ref }\n                    onChange={ onChange }\n                />\n\n                { !query ? null : <FaTimesCircle style={{fontSize: '1rem'}} onClick={ onClear } /> }\n            </div>\n        </div>\n    );\n});\n\nSearch.propTypes = {\n    query: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    onClear: PropTypes.func.isRequired,\n};\n\nexport default Search;","import C from './constants';\n\nexport const addList = (id, name, orderBy, orderDir, sorted, hideCompleted, color, defaultList) => dispatch => {\n    dispatch({\n        type: C.ADD_LIST,\n        payload: {id, name, orderBy, orderDir, sorted, hideCompleted, color, defaultList}\n    })\n}\n\nexport const removeList = id => ({\n    type: C.REMOVE_LIST,\n    payload: id\n})\n\nexport const renameList = (id, newName) => ({\n    type: C.RENAME_LIST,\n    payload: id,\n    newName\n})\n\nexport const changeOrder = (orderBy, id) => ({\n    type: C.SET_ORDERBY,\n    payload: orderBy,\n    id\n})\n\nexport const changeDir = id => ({\n    type: C.SET_ORDERDIR,\n    id\n})\n\nexport const resetChangeDir = id => ({\n    type: C.RESET_ORDERDIR,\n    id\n})\n\nexport const toggleHide = id => ({\n    type: C.TOGGLE_HIDE,\n    id\n})\n\nexport const changeBgColor = (color, id) => ({\n    type: C.SET_BGCOLOR,\n    payload: color,\n    id\n})","import C from '../actions/constants';\n\nexport const setList = (id, title) => ({\n    type: C.SET_LIST,\n    payload: title,\n    id\n})\n\nexport const setTask = (id, task, note, steps) => ({\n    type: C.SET_TASK,\n    payload: task,\n    id,\n    note,\n    steps\n})\n\nexport const setStep = (id, step) => ({\n    type: C.SET_STEP,\n    payload: {id, step},\n    id\n})\n\nexport const setNote = (id, note) => ({\n    type: C.SET_NOTE,\n    payload: note,\n    id\n})","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { FaList } from 'react-icons/fa';\n\nconst TitleRow = ({list, listIcons, index, headerStyle=f=>f, iconStyle=f=>f, numberOfTasks=f=>f, onClick=f=>f}) => (\n    <ListItem style={ headerStyle(list.name) } onClick={ onClick }>\n        <div style={{display: 'flex', alignItems: 'center'}}>\n            <ListItemIcon style={ iconStyle(list.color) }>\n                { list.defaultList ? listIcons[index] : <FaList /> }\n            </ListItemIcon>\n\n            <ListItemText primary={list.name} />\n        </div>\n\n        { numberOfTasks(list.id, list.name) } \n    </ListItem>\n);\n\nTitleRow.propTypes = {\n    list: PropTypes.any,\n    index: PropTypes.any,\n    listIcons: PropTypes.array.isRequired,\n    headerStyle: PropTypes.func.isRequired,\n    iconStyle: PropTypes.func.isRequired,\n    numberOfTasks: PropTypes.func.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default TitleRow;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setList } from '../../../actions/currentActions';\nimport { FaRegSun, FaRegStar, FaRegCalendar, FaRegCalendarCheck } from 'react-icons/fa';\nimport TitleRow from './TitleRow';\n\nconst listIcons = [<FaRegSun />, <FaRegStar />, <FaRegCalendar />, <FaRegCalendarCheck />];\n\nconst TitleRowContainer = ({list, index, lists, query, selectedListId, tasks, onClick=f=>f, onClose=f=>f, onSetList=f=>f}) => {\n    const selectedList = lists.filter(list => list.id === selectedListId);\n    const name = selectedList[0].name;\n\n    const headerStyle = text => {\n        return {\n            display: 'flex', \n            alignItems: 'center', \n            justifyContent: 'space-between', \n            backgroundColor: name === text ? 'gainsboro' : null\n        }\n    }\n\n    const iconStyle = color => {\n        return {\n            marginRight: -25, \n            fontSize: '1.2rem',\n            color: 'rgb(' + color.join(',') + ')'\n        }\n    }\n\n    const handleClick = () => {\n        if (query) {\n            onClick()\n        }\n\n        onSetList(list.id, list.name);\n        onClose();\n    }\n\n    const numberOfTasks = (id, name) => {\n        const numOfTasks = tasks.filter(task =>\n            ((task[`${name.toLowerCase().replace(/ /g,\"_\") }`] || task.list_id === id) && !task.completedStatus)\n        ).length\n        \n        return numOfTasks > 0 ?\n            <div style={{color: 'gray'}}>\n                { numOfTasks }\n            </div>\n            :\n            null\n    }\n\n    return (\n        <TitleRow\n            list={ list }\n            index={ index }\n            listIcons={ listIcons }\n            headerStyle={ headerStyle }\n            iconStyle={ iconStyle }\n            numberOfTasks={ numberOfTasks }\n            onClick={ handleClick }\n        />\n    );\n};\n\nTitleRowContainer.propTypes = {\n    list: PropTypes.object.isRequired,\n    index: PropTypes.number.isRequired,\n    lists: PropTypes.array.isRequired,\n    query: PropTypes.string.isRequired,\n    selectedListId: PropTypes.string.isRequired,\n    tasks: PropTypes.array,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSetList: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    query: state.query,\n    selectedListId: state.current.list[\"id\"],\n    tasks: state.tasks\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetList(id, title) {\n        dispatch(\n            setList(id, title)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TitleRowContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Modal, DialogActions, Button } from '@material-ui/core';\nimport { FaRegTrashAlt, FaTimes } from 'react-icons/fa';\n\nconst getModalStyle = () => {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 4),\n        outline: 'none',\n    },\n}));\n\nconst DeleteModal = ({id, location, name, todo, onClick=f=>f}) => {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const deleteType = location === 'more-bottom'\n        ? <FaRegTrashAlt style={{ margin: '0 5px 3px 0' }} />\n        : location === 'more-top'\n            ? <FaTimes />\n            : (\n                <>\n                    <FaRegTrashAlt style={{ margin: '0 5px 3px 0' }} />\n                    <span>Delete {todo}</span>\n                </>\n            );\n\n    return (\n        <>\n            <div id={`${todo}_${id}`} onClick={handleOpen}>\n                { deleteType }\n            </div>\n            \n            <Modal\n                aria-labelledby={`item-${todo}_${id}`}\n                aria-describedby={`content-${todo}_${id}`}\n                open={open}>\n\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id={`item-${todo}_${id}`} style={{fontSize: '1rem', fontWeight: 'bold'}}>\n                        \"{ name }\" will be permanently deleted.\n                    </h2>\n\n                    <p id={`content-${todo}_${id}`}>\n                        You won't be able to undo this action.\n                    </p>\n                    \n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n\n                        <Button onClick={onClick} color=\"primary\" autoFocus={true}>\n                            Delete { todo }\n                        </Button>\n                    </DialogActions>\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nDeleteModal.propTypes = {\n    id: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    todo: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nexport default DeleteModal;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu';\nimport { FaRegEdit } from 'react-icons/fa';\nimport TitleRow from './TitleRowContainer';\nimport DeleteModal from '../../common/DeleteModal';\n\nconst RightClickMenuSide = ({list, onClick=f=>f, onClose=f=>f, onEditClick=f=>f, onRemove=f=>f}) => (\n    <React.Fragment>\n        <ContextMenuTrigger id={list.id}>\n            <TitleRow\n                list={ list }\n                onClick={ onClick }\n                onClose={ onClose }\n            />\n        </ContextMenuTrigger>\n\n        <ContextMenu id={list.id}>\n            <MenuItem onClick={ onEditClick }>\n                <FaRegEdit className=\"list-icon\" style={{margin: '0 5px 3px 0'}} />\n                <span>Rename list</span>\n            </MenuItem>\n\n            <MenuItem>\n                <DeleteModal\n                    id={ list.id }\n                    location={ 'side-rightclick' }\n                    name={ list.name }\n                    todo={ 'list'}\n                    onClick={ onRemove }\n                />\n            </MenuItem>\n        </ContextMenu>\n    </React.Fragment>\n);\n\nRightClickMenuSide.propTypes = {\n    list: PropTypes.any,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired\n};\n\nexport default RightClickMenuSide;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeList } from '../../../actions/listsActions';\nimport { setList } from '../../../actions/currentActions';\nimport { removeTask } from '../../../actions/tasksActions';\nimport RightClickMenuSide from './RightClickMenuSide';\n\nconst RightClickMenuSideContainer = ({list, tasks, onClick=f=>f, onClose=f=>f, onEditClick=f=>f, onRemoveList=f=>f, onRemoveTask=f=>f}) => {\n    const removeTasks = () => {\n        const listTasks = tasks.filter(task => task.list_id === list.id);\n\n        listTasks.forEach(task => onRemoveTask(task.task_id))\n    }\n\n    const removeAll = () => {\n        removeTasks();\n        onRemoveList(list.id);\n    }\n\n    return (\n        <RightClickMenuSide\n            list={ list }\n            onClick={ onClick }\n            onClose={ onClose }\n            onEditClick={ onEditClick }\n            onRemove={ removeAll }\n        />\n    )\n};\n\nconst mapStateToProps = state => ({\n    tasks: state.tasks\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveList(id) {\n        dispatch(\n            removeList(id)\n        )\n\n        dispatch(\n            setList('0', 'My Day')\n        )\n    },\n\n    onRemoveTask(id) {\n        dispatch(\n            removeTask(id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightClickMenuSideContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Divider, List } from '@material-ui/core';\n\nconst TitleList = ({renderLists}) => (\n    <List className=\"list-titles\" style={{height: '82vh', overflow: 'auto', paddingBottom: 60}}>\n        { renderLists.defaults() }\n\n        <Divider style={{margin: 10}} />\n\n        { renderLists.customs() }\n    </List>\n);\n\nTitleList.propTypes = {\n    renderLists: PropTypes.object.isRequired\n};\n \nexport default TitleList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport RightClickMenuSide from './RightClickMenuSideContainer';\nimport TitleRow from './TitleRowContainer';\nimport TitleList from './TitleList';\n\nconst TitleListContainer = ({lists, onClick=f=>f, onClose=f=>f, onEditClick=f=>f}) => {\n    const defaultLists = lists.filter(list => list.defaultList)\n    const customLists = lists.filter(list => !list.defaultList)\n\n    const defaults = () =>\n        defaultLists.map((list, index) => (\n            <TitleRow\n                key={list.name + '_' + list.id}\n                list={ list }\n                index={ index }\n                onClick={ onClick }\n                onClose={ onClose }\n            />\n        ))\n\n    const customs = () =>\n        customLists.map(list => (\n            <RightClickMenuSide\n                key={list.name + '_' + list.id}\n                list={ list }\n                onClick={ onClick }\n                onEditClick={ onEditClick }\n                onClose={ onClose }\n            />\n        ))\n    \n    const renderLists = {\n        defaults,\n        customs\n    }\n\n    return <TitleList renderLists={renderLists} />;\n};\n\nTitleListContainer.propTypes = {\n    lists: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n});\n\nexport default connect(mapStateToProps)(TitleListContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaPlus } from 'react-icons/fa';\nimport { ListItemText } from '@material-ui/core';\n\nconst AddList = ({onClick=f=>f}) => (\n    <div className=\"add-list\" onClick={ onClick }>\n        <FaPlus className=\"list-icon list-icon-margin-rt\" />\n\n        <ListItemText primary=\"New List\" />\n    </div>\n);\n\nAddList.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default AddList;","import React from 'react';\nimport uuid from 'uuid';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addList } from '../../../actions/listsActions';\nimport { setList } from '../../../actions/currentActions';\nimport AddList from './AddList';\n\nconst AddListContainer = ({lists, onAddList=f=>f, onEditClick=f=>f, onClose=f=>f})  => {\n    const namesOnList = lists.map(list => list.name);\n\n    const setListName = () => {\n        let subName = \"Untitled List\";\n        let num = 1;\n\n        while (namesOnList.includes(subName)) {\n            subName = `Untitled List ${num}`;\n            num++;\n        }\n\n        return subName;\n    }\n\n    const handleClick = () => {\n        const newList = {\n            id: uuid.v4(),\n            name: setListName(),\n            orderBy: 'date_created',\n            orderDir: 'asc',\n            sorted: false,\n            hideCompleted: false,\n            color: [80,40,250],\n            defaultList: false\n        }\n\n        onAddList(newList);\n        onEditClick();\n        onClose();\n    }\n\n    return <AddList onClick={ handleClick } />;\n};\n\nAddListContainer.propTypes = {\n    lists: PropTypes.array.isRequired,\n    onAddList: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onAddList({id, name, orderBy, orderDir, sorted, hideCompleted, color, defaultList}) {\n        dispatch(\n            addList(id, name, orderBy, orderDir, sorted, hideCompleted, color, defaultList)\n        )\n\n        dispatch(\n            setList(id, name)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddListContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer, Hidden } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Search from './Search/Search';\nimport TitleList from './Lists/TitleListContainer';\nimport AddList from '../../components/Side/AddList/AddListContainer';\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        background: '#eee'\n    },\n}));\n\nconst Sidebar = React.forwardRef(({query, onChange=f=>f, onClear=f=>f, onClose=f=>f, onEditClick=f=>f}, ref) => {\n    const classes = useStyles();\n\n    return (\n        <nav className={classes.drawer} aria-label=\"Todo Lists\">\n            <Hidden xsDown implementation=\"css\">\n                <Drawer open variant=\"permanent\" classes={{paper: classes.drawerPaper}}>\n                    <Search ref={ ref } query={ query } onChange={ onChange } onClear={ onClear } />\n\n                    <TitleList onClick={ onClear } onClose={ onClose } onEditClick={ onEditClick } />\n\n                    <AddList onEditClick={ onEditClick } onClose={ onClose } />\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n});\n\nSidebar.propTypes = {\n    query: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func\n};\n\nexport default Sidebar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeQuery, clearQuery } from '../../actions/queryActions';\nimport Sidebar from './Sidebar';\n\nconst SidebarContainer = ({query, onChangeQuery=f=>f, onClear=f=>f, onClose=f=>f, onEditClick=f=>f}) => {\n    let _searchInput;\n\n    const handleChange = e => {\n        onChangeQuery(e.target.value);\n        onClose();\n    }\n\n    const clearSearch = () => {\n        _searchInput.value = '';\n        onClear();\n    }\n\n    return (\n        <Sidebar\n            ref={ input => _searchInput = input }\n            query={ query }\n            onChange={ handleChange }\n            onClear={ clearSearch }\n            onClose={ onClose }\n            onEditClick={ onEditClick }\n        />\n    )\n};\n\nSidebarContainer.propTypes = {\n    query: PropTypes.string,\n    onChangeQuery: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onEditClick: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    query: state.query\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeQuery(query) {\n        dispatch(\n            changeQuery(query)\n        )\n    },\n\n    onClear() {\n        dispatch(\n            clearQuery()\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {forwardRef: true})(SidebarContainer);","import C from './constants';\n\nexport const changeQuery = query => ({\n    type: C.CHANGE_QUERY,\n    payload: query\n})\n\nexport const clearQuery = () => ({\n    type: C.CLEAR_QUERY\n})","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleCompleted } from '../../../../../../actions/tasksActions'; \nimport { FaCheckCircle, FaRegCircle } from 'react-icons/fa';\n\nconst Completed = ({task, onToggleComplete=f=>f}) => {\n    const completed =\n        <FaCheckCircle \n            className=\"list-icon green list-icon-margin-rt\" \n            onClick={() => onToggleComplete(task.task_id)}\n        />\n        \n    const notCompleted =\n        <FaRegCircle \n            className=\"list-icon list-icon-margin-rt gray\" \n            onClick={() => onToggleComplete(task.task_id)}\n        />\n        \n    return task.completedStatus ? completed : notCompleted;\n};\n\nCompleted.propTypes = {\n    task: PropTypes.object.isRequired,\n    onToggleComplete: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleComplete(id) {\n        dispatch(\n            toggleCompleted(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(Completed);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleImportant } from '../../../../../../actions/tasksActions'; \nimport { FaStar, FaRegStar } from 'react-icons/fa';\n\nconst Important = ({task, onToggleImportant=f=>f}) => {\n    const important =\n        <FaStar \n            className=\"list-icon blue\" \n            onClick={() => onToggleImportant(task.task_id)}\n        />\n    \n    const notImportant =\n        <FaRegStar \n            className=\"list-icon gray\"\n            onClick={() => onToggleImportant(task.task_id)}\n        />\n\n    return task.importantStatus ? important : notImportant;\n};\n\nImportant.propTypes = {\n    task: PropTypes.object.isRequired,\n    onToggleImportant: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleImportant(id) {\n        dispatch(\n            toggleImportant(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(Important);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Icon } from '@material-ui/core';\n\nconst Detail = ({el, name, task}) => {\n    const todaysDate = moment(new Date()).format('YYYY-MM-DD');\n\n    const statusColor = (el.id === 'my_day' || (el.id === 'planned' && task.date_due === todaysDate))\n        ? 'royalblue'\n        : (el.id === 'planned' && task.date_due < todaysDate)\n            ? 'crimson'\n            : null;\n    \n    const detailIcon = el.icon\n        ? <Icon style={{ fontSize: 'small', marginRight: 3, paddingTop: 1 }}>{el.icon}</Icon>\n        : null\n\n    const listDetail =\n        <li className=\"list-detail\" style={{ color: statusColor }}>\n            {detailIcon}\n            {el.text}\n        </li>\n    \n    return (\n        (el.id === \"my_day\" && task.my_day === true && name !== \"My Day\") ||\n        (el.id === \"custom\" && task.tasks === false && name !== el.text) ||\n        (el.id === \"tasks\" && task.tasks === true && name !== \"Tasks\") ||\n        (el.id === \"step\" && task.steps.length > 0) ||\n        (el.id === \"planned\" && task.date_due) ||\n        (el.id === \"note\" && task.note)\n    )\n        ? listDetail\n        : null\n};\n\nDetail.propTypes = {\n    el: PropTypes.object.isRequired,\n    name: PropTypes.string.isRequired,\n    task: PropTypes.object.isRequired\n};\n\nexport default Detail;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FaCheck } from 'react-icons/fa';\nimport moment from 'moment';\nimport Detail from './Detail';\n\nconst Details = ({lists, selectedListId, task}) => {\n    const selectedList = lists.filter(list => list.id === selectedListId);\n\n    const listItemDetail = () => {\n        return {\n            display: 'flex',\n            fontSize: '.8rem',\n            color: task.completedStatus ? 'darkgray' : 'dimgray'\n        }\n    }\n\n    const getListName = () => {\n        const arr = lists.filter(list => list.id === task.list_id);\n        return arr[0].name;\n    }\n\n    const completedTask = () => {\n        return numOfCompletedSteps() === task.steps.length ? <FaCheck style={{fontSize: '.7rem'}} /> : null\n    }\n\n    const numOfCompletedSteps = () => {\n        let count = 0;\n        task.steps.forEach(step => step.completedStatus === true ? count++ : count)\n\n        return count;\n    }\n\n    const getFormattedDate = () => {\n        let formattedDate;\n        if (task.date_due === moment(new Date()).format('YYYY-MM-DD')) {\n            formattedDate = 'Today';\n        } else if (task.date_due === moment(new Date()).add(1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Tomorrow';\n        } else if (task.date_due === moment(new Date()).add(-1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Yesterday';\n        } else {\n            formattedDate = moment(task.date_due).format('ddd, MMM D')\n        }\n        return formattedDate;\n    }\n    \n    const getPlannedDate = !task.date_due ? null : getFormattedDate();\n\n    const details = [\n        {\n            \"id\": \"my_day\",\n            \"icon\": \"wb_sunny\",\n            \"text\": \"My Day\"\n        },\n        {\n            \"id\": \"tasks\",\n            \"text\": \"Tasks\"\n        },\n        {\n            \"id\": \"custom\",\n            \"text\": getListName()\n        },\n        {\n            \"id\": \"step\",\n            \"icon\": task.steps.length > 0 && completedTask() ? \"check\" : null,\n            \"text\": task.steps.length > 0 ? `${numOfCompletedSteps()} of ${task.steps.length}` : null\n        },\n        {\n            \"id\": \"planned\",\n            \"icon\": \"calendar_today\",\n            \"text\": getPlannedDate\n        },\n        {\n            \"id\": \"note\",\n            \"icon\": \"bookmark_border\",\n            \"text\": \"Note\"\n        }\n    ];\n\n    const renderDetails = arr => {\n        const name = selectedList[0].name;\n\n        return arr.map(detail =>\n            <Detail key={detail.id} el= {detail} name={name} task={task} />\n        )\n    }\n\n    return (\n        <ul style={ listItemDetail() }>\n            { renderDetails(details) }\n        </ul>\n    );\n};\n\nDetails.propTypes = {\n    lists: PropTypes.array.isRequired,\n    selectedListId: PropTypes.string.isRequired, \n    task: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"]\n});\n \nexport default connect(mapStateToProps)(Details);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Details from './Details/Details';\n\nconst Item = ({task}) => {\n    const listItem = () => {\n        return {\n            color: task.completedStatus ? 'dimgray' : 'black',\n            textDecoration: task.completedStatus ? 'line-through' : 'none'\n        }\n    };\n    \n    return (\n        <span style={ listItem() }>\n            { task.item }\n\n            <Details task={ task } />\n        </span>\n    );\n};\n\nItem.propTypes = {\n    task: PropTypes.object.isRequired\n};\n \nexport default Item;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Completed from './Status/Completed';\nimport Important from './Status/Important';\nimport Item from './Item';\n\nconst Task = ({selectedTaskId, task, onClick=f=>f}) => {\n    const listStyle = id => {\n        return {\n            borderRadius: id === selectedTaskId ? 10 : null,\n            backgroundColor: id === selectedTaskId ? '#eee' : null\n        }\n    };\n\n    return ( \n        <div className=\"list-item align-center space-between\" style={ listStyle(task.task_id) } onClick={ onClick }>\n            <div style={{display: 'flex', alignItems: 'center'}}>\n                <Completed task={task} />\n\n                <Item task={task} />\n            </div>\n\n            <Important task={task} />\n        </div>\n    );\n};\n\nTask.propTypes = {\n    selectedTaskId: PropTypes.string,\n    task: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nexport default Task;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setTask } from '../../../../../actions/currentActions';\nimport Task from './Task';\n\nconst TaskContainer = ({selectedTaskId, task, onClick=f=>f, onSetTask=f=>f}) => {\n    const handleClick = () => {\n        onSetTask(task.task_id, task.item, task.note, task.steps);\n        onClick();\n    }\n\n    return ( \n        <Task \n            task={ task }\n            selectedTaskId={ selectedTaskId }\n            onClick={ handleClick }\n        />\n    );\n};\n\nTaskContainer.propTypes = {\n    selectedTaskId: PropTypes.string,\n    task: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSetTask: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    selectedTaskId: state.current.task[\"id\"]\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetTask(id, task, note, steps) {\n        dispatch(\n            setTask(id, task, note, steps)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { MenuItem } from 'react-contextmenu';\nimport { FaRegSun } from 'react-icons/fa';\nimport { toggleMyDay } from '../../../../../../actions/tasksActions'; \n\nconst MarkMyDay = ({task, onToggleMyDay=f=>f}) => {\n    const removeMyDay =\n        <div onClick={() => onToggleMyDay(task.task_id)}>\n            <FaRegSun className=\"list-icon\" style={{margin: '0 5px 3px 0'}}/>\n            <span>Remove from My Day</span>\n        </div>\n\n    const addMyDay =\n        <div onClick={() => onToggleMyDay(task.task_id)}>\n            <FaRegSun className=\"list-icon\" style={{margin: '0 5px 3px 0'}}/>\n            <span>Add to My Day</span>\n        </div>\n\n    return (\n        <MenuItem>\n            { task.my_day ? removeMyDay : addMyDay }\n        </MenuItem>\n    );\n};\n\nMarkMyDay.propTypes =  {\n    task: PropTypes.object.isRequired,\n    onToggleMyDay: PropTypes.func.isRequired\n};\n \nconst mapDispatchToProps = dispatch => ({\n    onToggleMyDay(id) {\n        dispatch(\n            toggleMyDay(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(MarkMyDay);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { MenuItem } from 'react-contextmenu';\nimport { FaCheckCircle, FaRegCheckCircle } from 'react-icons/fa';\nimport { toggleCompleted } from '../../../../../../actions/tasksActions'; \n\nconst MarkCompleted = ({task, onToggleComplete=f=>f}) => {\n    const markNotCompleted =\n        <div onClick={() => onToggleComplete(task.task_id)}>\n            <FaRegCheckCircle className=\"list-icon\" style={{margin: '0 5px 3px 0'}}/>\n            <span>Mark as not completed</span>\n        </div>\n\n    const markCompleted =\n        <div onClick={() => onToggleComplete(task.task_id)}>\n            <FaCheckCircle className=\"list-icon\" style={{margin: '0 5px 3px 0'}}/>\n            <span>Mark as completed</span>\n        </div>\n        \n    return (\n        <MenuItem>\n            { task.completedStatus ? markNotCompleted : markCompleted }\n        </MenuItem>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleComplete(id) {\n        dispatch(\n            toggleCompleted(id)\n        )\n    }\n});\n\nMarkCompleted.propTypes = {\n    task: PropTypes.object.isRequired,\n    onToggleComplete: PropTypes.func.isRequired\n};\n\nexport default connect(null, mapDispatchToProps)(MarkCompleted);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { MenuItem } from 'react-contextmenu';\nimport { FaStar, FaRegStar } from 'react-icons/fa';\nimport { toggleImportant } from '../../../../../../actions/tasksActions'; \n\nconst MarkImportant = ({task, onToggleImportant=f=>f}) => {\n    const removeImportance =\n        <div onClick={() => onToggleImportant(task.task_id)}>\n            <FaRegStar className=\"list-icon\" style={{margin: '0 5px 3px 0'}}/>\n            <span>Remove importance</span>\n        </div>\n    \n    const markImportant =\n        <div onClick={() => onToggleImportant(task.task_id)}>\n            <FaStar className=\"list-icon\" style={{margin: '0 5px 3px 0'}}/>\n            <span>Mark as important</span>\n        </div>\n\n    return (\n        <MenuItem>\n            { task.importantStatus ? removeImportance : markImportant }\n        </MenuItem>\n    );\n};\n\nMarkImportant.propTypes ={\n    task: PropTypes.object.isRequired,\n    onToggleImportant: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleImportant(id) {\n        dispatch(\n            toggleImportant(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(MarkImportant);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { removeTask } from '../../../../../../actions/tasksActions'; \nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu';\nimport TaskContainer from '../TaskContainer';\nimport DeleteModal from '../../../../../common/DeleteModal';\nimport MarkMyDay from '../MenuItem/MarkMyDay';\nimport MarkCompleted from '../MenuItem/MarkCompleted';\nimport MarkImportant from '../MenuItem/MarkImportant';\n\nconst RightClickMenu = ({task, onClick=f=>f, onClose=f=>f, onRemoveTask=f=>f}) => {\n    const handleRemove = () => {\n        onRemoveTask(task.task_id);\n        onClose();\n    }\n\n    return (\n        <div>\n            <ContextMenuTrigger id={`menuitem_${task.task_id}`}>\n                <TaskContainer task={ task } onClick={ onClick } />\n            </ContextMenuTrigger>\n\n            <ContextMenu id={`menuitem_${task.task_id}`}>\n                <MarkMyDay task={task} />\n\n                <MarkCompleted task={task} />\n                \n                <MarkImportant task={task} />\n                \n                <MenuItem divider />\n\n                <MenuItem>\n                    <DeleteModal \n                        id={ task.task_id }\n                        location={ 'main-rightclick' }\n                        name={ task.item }\n                        todo={ 'task' }\n                        onClick={ handleRemove }\n                    />\n                </MenuItem>\n            </ContextMenu>\n        </div>\n    )\n};\n\nRightClickMenu.propTypes = {\n    task: PropTypes.object.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onRemoveTask: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveTask(id) {\n        dispatch(\n            removeTask(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(RightClickMenu);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RightClickMenu from './RightClickMenu/RightClickMenu';\n\nconst Tasks = ({tasks, onClick=f=>f, onClose=f=>f}) => {\n    const renderTasks = () =>\n        tasks.map(task =>\n            <RightClickMenu\n                key={ task.task_id }\n                task={ task }\n                onClick={ onClick }\n                onClose={ onClose }\n            />\n    )\n    return renderTasks();\n};\n\nTasks.propTypes = {\n    tasks: PropTypes.array,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n \nexport default Tasks;\n","import React from 'react';\nimport '../../stylesheets/common.css';\nimport PropTypes from 'prop-types';\nimport { FaRegCircle, FaPlus } from 'react-icons/fa';\n\nconst AddButton = ({ addItem, item }) => {\n    const getSize = addItem === 'task' ? '1.2rem' : '1rem';\n    \n    const add =\n        <FaPlus \n            style={{fontSize: getSize}} \n            className=\"blue\" \n        />\n\n    const status = \n        <FaRegCircle \n            style={{fontSize: getSize}} \n            className=\"gray\" \n        /> \n\n    return (\n        <button className=\"add-btn\" type=\"submit\">\n            { !item ?  add : status }\n        </button>\n    );\n};\n\nAddButton.propTypes = {\n    addItem: PropTypes.string.isRequired,\n    item: PropTypes.string.isRequired\n};\n \nexport default AddButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddButton from './AddButton';\n\nconst AddItem = React.forwardRef(({ addItem, item, placeholder, itemStyle = f => f, onChange = f => f, onSubmit = f => f }, ref) => (\n    <form\n        className=\"add-form align-center\"\n        style={itemStyle()}\n        onSubmit={onSubmit}\n    >\n        <AddButton\n            addItem={addItem}\n            item={item}\n        />\n        \n        <input\n            ref={ref}\n            style={{flex: '10', padding: 5, border: 'none'}}\n            type=\"text\"\n            name=\"item\"\n            placeholder={ placeholder }\n            value={ item }\n            onChange={ e => onChange(e.target.value) }\n        />\n    </form>\n));\n\nAddItem.propTypes = {\n    addItem: PropTypes.string.isRequired,\n    item: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    itemStyle: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n};\n\nexport default AddItem;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport uuid from 'uuid';\nimport { connect } from 'react-redux';\nimport { addStep, addTask } from '../../actions/tasksActions';\nimport AddItem from './AddItem';\n\nconst AddItemContainer = ({addItem, lists, placeholder, selectedListId, selectedTaskId, onAddStep=f=>f, onAddTask=f=>f}) => {\n    const [item, setItem] = useState('');\n    const selectedList = lists.filter(list => list.id === selectedListId);\n    const name = selectedList[0].name;\n    const todaysDate = moment(new Date()).format('YYYY-MM-DD');\n\n    let _newItem;\n\n    const itemStyle = () => {\n        if (addItem === 'task') {\n            return {\n                margin: '0 auto',\n                height: 60,\n                padding: '10px 14px',\n                borderBottom: '1px solid gainsboro'\n            }\n        } else {\n            return {\n                margin: '3px 0 10px 0',\n                height: 30,\n                padding: '10px 12px',\n                borderBottom: 'none'\n            }\n        }\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (!item) return\n\n        const newStep = {\n            completedStatus: false,\n            id: uuid.v4(),\n            step: item,\n            task_id: selectedTaskId\n        }\n\n        if (addItem === 'step') {\n            onAddStep(newStep);\n        }\n\n        else {\n            if (name === \"My Day\") {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: \"\",\n                    completedStatus: false,\n                    importantStatus: false,\n                    my_day: true,\n                    planned: false,\n                    important: false,\n                    tasks: true,\n                    list_id: '3',\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            } else if (name === \"Important\") {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: \"\",\n                    completedStatus: false,\n                    importantStatus: true,\n                    my_day: false,\n                    planned: false,\n                    important: true,\n                    tasks: true,\n                    list_id: '3',\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            } else if (name === \"Planned\") {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: todaysDate,\n                    completedStatus: false,\n                    importantStatus: false,\n                    my_day: false,\n                    planned: true,\n                    important: false,\n                    tasks: true,\n                    list_id: '3',\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            } else if (name === \"Tasks\") {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: \"\",\n                    completedStatus: false,\n                    importantStatus: false,\n                    my_day: false,\n                    planned: false,\n                    important: false,\n                    tasks: true,\n                    list_id: '3',\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            } else {\n                onAddTask({\n                    task_id: uuid.v4(),\n                    item,\n                    date_completed: \"\",\n                    date_created: todaysDate,\n                    date_due: \"\",\n                    completedStatus: false,\n                    importantStatus: false,\n                    my_day: false,\n                    planned: false,\n                    important: false,\n                    tasks: false,\n                    list_id: selectedList[0].id,\n                    note: \"\",\n                    steps: [],\n                    temp: \"\"\n                });\n            }\n        }\n\n        setItem('');\n    };\n\n    const handleChange = () => {\n        setItem(_newItem.value)\n    };\n\n    \n    return (\n        <AddItem\n            ref={input => _newItem = input}\n            addItem={addItem}\n            item={item}\n            placeholder={placeholder}\n            itemStyle={itemStyle}\n            onChange={handleChange}\n            onSubmit={onSubmit}\n        />\n    );\n};\n\nAddItemContainer.propTypes = {\n    addItem: PropTypes.string.isRequired,\n    lists: PropTypes.array.isRequired,\n    placeholder: PropTypes.any,\n    selectedListId: PropTypes.string.isRequired,\n    selectedTaskId: PropTypes.string.isRequired,\n    onAddStep: PropTypes.func.isRequired,\n    onAddTask: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"],\n    selectedTaskId: state.current.task[\"id\"]\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onAddTask({\n            task_id, item, date_completed, date_created, date_due, temp,\n            completedStatus, importantStatus, my_day, planned, important, tasks, list_id, note, steps\n        }) {\n        dispatch(\n            addTask(\n                task_id, item, date_completed, date_created, date_due, temp,\n                completedStatus, importantStatus, my_day, planned, important, tasks, list_id, note, steps\n            )\n        )\n    },\n\n    onAddStep({completedStatus, id, step, task_id}) {\n        dispatch(\n            addStep(completedStatus, id, step, task_id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddItemContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Tasks from './Task/Tasks';\nimport AddItem from '../../../common/AddItemContainer';\n\nconst Body = ({ query, tasks, onClick = f => f, onClose = f => f }) => (\n    <div className=\"main-container\">\n        <Tasks tasks={tasks} onClick={onClick} onClose={onClose} />\n\n        {query ? null : <AddItem addItem={'task'} placeholder={'Add Task'} />}\n    </div>\n);\n\nBody.propTypes = {\n    query: PropTypes.string,\n    tasks: PropTypes.array,\n    onClick: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    query: state.query\n});\n\nexport default connect(mapStateToProps)(Body);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FaCheckCircle, FaRegCircle } from 'react-icons/fa';\nimport { toggleCompleted } from '../../../../actions/tasksActions';\n\nconst Completed = ({selectedTask, onToggleComplete=f=>f}) => {\n    const completed =\n        <FaCheckCircle \n            className=\"list-icon list-icon-margin-rt green\" \n            onClick={() => onToggleComplete(selectedTask[0].task_id)}\n        />\n\n    const notCompleted =\n        <FaRegCircle \n            className=\"list-icon list-icon-margin-rt gray\" \n            onClick={() => onToggleComplete(selectedTask[0].task_id)}\n        />\n\n    return selectedTask[0].completedStatus ? completed : notCompleted;\n};\n\nCompleted.propTypes = {\n    selectedTask: PropTypes.array,\n    onToggleComplete: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleComplete(id) {\n        dispatch(\n            toggleCompleted(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(Completed);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleImportant } from '../../../../actions/tasksActions';\nimport { FaStar, FaRegStar } from 'react-icons/fa';\n\nconst Important = ({selectedTask, onToggleImportant=f=>f}) => {\n    const important =\n        <FaStar \n            className=\"list-icon blue\" \n            onClick={() => onToggleImportant(selectedTask[0].task_id)}\n        />\n    \n    const notImportant =\n        <FaRegStar \n            className=\"list-icon gray\" \n            onClick={() => onToggleImportant(selectedTask[0].task_id)}\n        />\n\n    return selectedTask[0].importantStatus ? important : notImportant;\n};\n\nImportant.propTypes = {\n    selectedTask: PropTypes.array,\n    onToggleImportant: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleImportant(id) {\n        dispatch(\n            toggleImportant(id)\n        )\n    }\n});\n \nexport default connect(null, mapDispatchToProps)(Important);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Textarea from 'react-textarea-autosize';\nimport Completed from './Status/Completed';\nimport Important from './Status/Important';\n\nconst HeaderSection = ({currentTask, selectedTask, onEnterPress=f=>f, onSetTask=f=>f, onSubmit=f=>f}) => (\n    <div className=\"more-margins more-header\">\n        <div style={{display: 'flex'}}>\n            <Completed selectedTask={selectedTask} />\n\n            <form onSubmit={onSubmit}>\n                <Textarea\n                    type=\"text\"\n                    className=\"more-list-title\"\n                    value={ currentTask.task }\n                    onChange={e => onSetTask(currentTask.id, e.target.value, selectedTask[0].note, selectedTask[0].steps)}\n                    onKeyDown={e => onEnterPress(e)}\n                />\n            </form>\n        </div>\n\n        <Important selectedTask={selectedTask} />\n    </div>\n);\n\nHeaderSection.propTypes = {\n    currentTask: PropTypes.object.isRequired,\n    selectedTask: PropTypes.array.isRequired,\n    onEnterPress: PropTypes.func.isRequired,\n    onSetTask: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default HeaderSection;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setTask } from '../../../actions/currentActions'; \nimport { updateTask } from '../../../actions/tasksActions';\nimport HeaderSection from './HeaderSection';\n\nconst HeaderSectionContainer = ({currentTask, selectedTask, onSetTask=f=>f, onUpdateTask=f=>f}) => {\n    if (!selectedTask[0]) return null;\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (currentTask.task === '') {\n            let subTask = selectedTask[0].item;\n            onUpdateTask(currentTask.id, subTask, selectedTask[0].note, selectedTask[0].steps);\n        } else {\n            onUpdateTask(currentTask.id, currentTask.task, selectedTask[0].note, selectedTask[0].steps);\n        }\n    }\n\n    const onEnterPress = e => {\n        if (e.which === 13 && !e.shiftKey) {\n            e.preventDefault();\n            onSubmit(e);\n        }\n    }\n\n    return (\n        <HeaderSection\n            currentTask={ currentTask }\n            selectedTask={ selectedTask }\n            onEnterPress={ onEnterPress }\n            onSetTask={ onSetTask }\n            onSubmit={ onSubmit }\n        />\n    );\n};\n\nHeaderSectionContainer.propTypes = {\n    currentTask: PropTypes.object,\n    selectedTask: PropTypes.array,\n    onSetTask: PropTypes.func.isRequired,\n    onUpdateTask: PropTypes.func.isRequired\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onSetTask(id, task, note, steps) {\n        dispatch(\n            setTask(id, task, note, steps)\n        )\n    },\n\n    onUpdateTask(id, task, note, steps) {\n        dispatch(\n            setTask(id, task, note, steps)\n        )\n\n        dispatch(\n            updateTask(id, task)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(HeaderSectionContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaCheckCircle, FaRegCircle } from 'react-icons/fa';\n\nconst Completed = ({selectedTask, step, onToggleStep=f=>f}) => {\n    const completed =\n        <FaCheckCircle \n            className=\"step-margin-rt green\" \n            style={{fontSize: '1rem'}} \n            onClick={() => onToggleStep(selectedTask[0].task_id, step.id)}\n        />\n    \n    const notCompleted =\n        <FaRegCircle \n            className=\"step-margin-rt gray\" \n            style={{fontSize: '1rem'}} \n            onClick={() => onToggleStep(selectedTask[0].task_id, step.id)}\n        />\n\n    return step.completedStatus ? completed : notCompleted;\n};\n\nCompleted.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    step: PropTypes.object,\n    onToggleStep: PropTypes.func.isRequired\n};\n \nexport default Completed;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport Textarea from 'react-textarea-autosize';\nimport DeleteModal from '../../../../common/DeleteModal';\nimport Completed from './Completed';\n\nconst Step = ({selectedTask, step, stepContainer=f=>f, stepStyle=f=>f, getPlaceholder=f=>f, onEnterPress=f=>f, onRemoveStep=f=>f, onSetStep=f=>f, onToggleStep=f=>f}) => (\n    <ListItem key={`${step.step}_${step.id}`} style={ stepContainer(step.id) } onClick={() => onSetStep(step.id, step.step)}>\n        <div className=\"align-center\">\n            <Completed selectedTask={selectedTask} step={step} onToggleStep={onToggleStep} />\n            \n            <Textarea\n                style={ stepStyle(step) }\n                type=\"text\"\n                value={getPlaceholder(step)}\n                onChange={e => onSetStep(step.id, e.target.value)}\n                onKeyPress={e => onEnterPress(e)}\n            />\n        </div>\n\n        <DeleteModal \n            id={ step.id }\n            location={ 'more-top' }\n            name={ step.step }\n            todo={ 'step' }\n            onClick={() => onRemoveStep(selectedTask[0].task_id, step.id)}\n        />\n    </ListItem>\n);\n\nStep.propTypes = {\n    selectedTask: PropTypes.array,\n    step: PropTypes.object.isRequired,\n    getPlaceholder: PropTypes.func.isRequired,\n    onEnterPress: PropTypes.func.isRequired,\n    onRemoveStep: PropTypes.func.isRequired,\n    onSetStep: PropTypes.func.isRequired,\n    stepContainer: PropTypes.func.isRequired,\n    stepStyle: PropTypes.func.isRequired\n};\n\nexport default Step;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setStep } from '../../../../../actions/currentActions'; \nimport { removeStep, toggleStep, updateStep } from '../../../../../actions/tasksActions';\nimport Step from './Step';\n\nconst StepContainer = ({currentStep, currentSteps, selectedTask, step, onRemoveStep=f=>f, onSetStep=f=>f, onToggleStep=f=>f, onUpdateStep=f=>f}) => {\n    const stepContainer = id => {\n        return {\n            padding: '8px 16px',\n            backgroundColor: currentStep.id === id ? '#eee' : null\n        }\n    }\n\n    const stepStyle = step => {\n        return {\n            color: step.completedStatus ? 'dimgray' : 'black',\n            textDecoration: step.completedStatus ? 'line-through' : 'none'\n        }\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (currentStep.step === '') {\n            let subStep = currentStep[0].step;\n            onUpdateStep(currentStep.id, subStep, selectedTask[0].task_id)\n        } else {\n            onUpdateStep(currentStep.id, currentStep.step, selectedTask[0].task_id);\n        }\n    }\n\n    const onEnterPress = e => {\n        if (e.which === 13 && !e.shiftKey) {\n            e.preventDefault();\n            onSubmit(e);\n        }\n    }\n\n    const getPlaceholder = (step) => {\n        const el = currentSteps.filter(selected => selected.id === step.id)\n\n        if (!el[0]) return\n        return el[0].step\n    }\n\n    \n    return (\n        <Step\n            step={ step }\n            selectedTask={ selectedTask }\n            getPlaceholder={ getPlaceholder }\n            onEnterPress={ onEnterPress }\n            onRemoveStep={ onRemoveStep }\n            onSetStep={ onSetStep }\n            onToggleStep={ onToggleStep }\n            stepContainer={ stepContainer }\n            stepStyle={ stepStyle }\n        />\n    );\n};\n\nStepContainer.propTypes = {\n    currentStep: PropTypes.object,\n    currentSteps: PropTypes.array,\n    selectedTask: PropTypes.array,\n    step: PropTypes.object,\n    onRemoveStep: PropTypes.func.isRequired,\n    onSetStep: PropTypes.func.isRequired,\n    onToggleStep: PropTypes.func.isRequired,\n    onUpdateStep: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    currentStep: state.current.step,\n    currentSteps: state.current.taskSteps,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveStep(taskId, stepId) {\n        dispatch(\n            removeStep(taskId, stepId)\n        )\n    },\n\n    onSetStep(id, step) {\n        dispatch(\n            setStep(id, step)\n        )\n    },\n\n    onToggleStep(taskId, stepId) {\n        dispatch(\n            toggleStep(taskId, stepId)\n        )\n    },\n\n    onUpdateStep(id, step, taskId) {\n        dispatch(\n            setStep(id, step, taskId)\n        )\n    \n        dispatch(\n            updateStep(id, step, taskId)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StepContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from '@material-ui/core';\nimport Step from './StepContainer';\n\nconst Steps = ({selectedTask}) => {\n    if (!selectedTask[0]) return null;\n    \n    const renderSteps = () => {\n        if (selectedTask[0].steps.length === 0) return null;\n        \n        return selectedTask[0].steps.map(step =>\n            <Step key={`step_${step.id}`} step={ step } selectedTask={ selectedTask } />\n        )\n    }\n\n    return (\n        <List>\n            { renderSteps() }\n        </List>\n    )\n};\n\nSteps.propTypes = {\n    selectedTask: PropTypes.array.isRequired\n};\n \nexport default Steps;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Steps from './Steps';\nimport AddItem from '../../../../common/AddItemContainer';\n\nconst StepsContainer = ({selectedTask}) => {\n    if (!selectedTask[0]) return null;\n    \n    return (\n        <React.Fragment>\n            <Steps selectedTask={selectedTask} />\n\n            <AddItem addItem={'step'} placeholder={selectedTask[0].steps.length > 0 ? 'Next Step' : 'Add step'} />\n        </React.Fragment>\n        \n    );\n};\n\nStepsContainer.propTypes = {\n    selectedTask: PropTypes.array.isRequired\n};\n \nexport default StepsContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleMyDay } from '../../../../actions/tasksActions';\nimport { FaRegSun, FaTimes } from 'react-icons/fa';\nimport { ListItem } from '@material-ui/core';\n\nconst MyDay = ({currentList, selectedTask, onClose=f=>f, onToggleMyDay=f=>f}) => {\n    if (!selectedTask[0]) return null;\n\n    const handleClick = () => {\n        if (currentList === \"My Day\") {\n            onClose();\n        }\n        onToggleMyDay(selectedTask[0].task_id);\n    };\n\n    const removeMyDay = \n        <div className=\"align-center space-between\">\n            <div className=\"align-center blue\">\n                <FaRegSun className=\"list-icon list-icon-left\"/>\n                Added to My Day \n            </div>\n            \n            <FaTimes style={{color: 'dimgray'}}/>\n        </div>\n\n    const addMyDay =\n        <div className=\"align-center\" style={{color: 'dimgray'}}>\n            <FaRegSun className=\"list-icon list-icon-left\" />\n            <span>Add to My Day</span>\n        </div>\n    \n    return (\n        <ListItem style={{margin: '10px 0px'}} onClick={ handleClick }>\n            { selectedTask[0].my_day ? removeMyDay : addMyDay }\n        </ListItem>\n    );\n};\n\nMyDay.propTypes = {\n    currentList: PropTypes.string.isRequired,\n    selectedTask: PropTypes.array,\n    onClose: PropTypes.func.isRequired,\n    onToggleMyDay: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    currentList: state.current.list[\"title\"],\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onToggleMyDay(id) {\n        dispatch(\n            toggleMyDay(id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyDay);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { FaRegCalendar, FaTimes } from 'react-icons/fa';\nimport { removeDateDue } from '../../../../../actions/tasksActions';\n\nconst PlannedButton = ({selectedTask, onClick=f=>f, onRemoveDateDue=f=>f}) => {\n    if (!selectedTask[0]) return null;\n    const todaysDate = moment(new Date()).format('YYYY-MM-DD');\n\n    const getDateDue = () => {\n        if (!selectedTask[0].date_due) return\n\n        let formattedDate;\n        if (selectedTask[0].date_due === todaysDate) {\n            formattedDate = 'Today';\n        } else if (selectedTask[0].date_due === moment(new Date()).add(1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Tomorrow';\n        } else if (selectedTask[0].date_due === moment(new Date()).add(-1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Yesterday';\n        } else {\n            formattedDate = moment(selectedTask[0].date_due).format('ddd, MMM D')\n        }\n        return formattedDate;\n    }\n\n    const add = \n        <div className=\"align-center\" style={{color: 'dimgray'}} onClick={ onClick }>\n            <FaRegCalendar className=\"list-icon list-icon-margin-rt\" />\n            <span>Add Due Date</span>\n        </div>\n        \n    const show =\n        <div className=\"align-center space-between\">\n            <div className=\"align-center\" style={{color: selectedTask[0].date_due < todaysDate ? 'crimson' : 'royalblue'}} onClick={ onClick }>\n                <FaRegCalendar className=\"list-icon list-icon-margin-rt\" />\n                <span>Due {getDateDue()}</span>\n            </div>\n\n            <FaTimes style={{color: 'dimgray'}} onClick={() => onRemoveDateDue(selectedTask[0].task_id)} />\n        </div>\n\n    return !selectedTask[0].date_due ? add : show;\n};\n\nPlannedButton.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onRemoveDateDue: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveDateDue(id) {\n        dispatch(\n            removeDateDue(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(PlannedButton);","import 'date-fns';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';\nimport moment from 'moment';\n\nconst MaterialUIPickers = ({selectedTask, tasks, onAddDateDue=f=>f, onClose=f=>f}) => {\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n        \n        const arr = tasks.filter(task => task.task_id === selectedTask[0].task_id);\n        const taskId = arr[0].task_id;\n        const newDate = moment(date).format('YYYY-MM-DD');\n\n        onAddDateDue(taskId, newDate);\n        onClose();\n    }\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n                margin=\"normal\"\n                id=\"date-picker-dialog\"\n                label=\"Pick a Date\"\n                format=\"MM/dd/yyyy\"\n                value={selectedDate}\n                onChange={handleDateChange}\n                KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                }}\n            />\n        </MuiPickersUtilsProvider>\n    );\n};\n\nMaterialUIPickers.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    tasks: PropTypes.array.isRequired,\n    onAddDateDue: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default MaterialUIPickers;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu } from '@material-ui/core';\n\nconst MenuTemplate = ({anchorEl, menuArr, open, onClose=f=>f, renderMenuItems=f=>f}) => (\n    <Menu\n        open={ open }\n        onClose={ onClose }\n        anchorEl={ anchorEl }>\n\n        { renderMenuItems(menuArr) }\n    </Menu>\n);\n\nMenuTemplate.propTypes = {\n    open: PropTypes.bool.isRequired,\n    anchorElement: PropTypes.any,\n    onClose: PropTypes.func.isRequired,\n    menuArr: PropTypes.array.isRequired,\n    renderMenuItems: PropTypes.func.isRequired\n};\n\nexport default MenuTemplate;","import moment from 'moment';\n\nconst getDay = num => {\n    return moment(new Date()).add(num, 'days').format('ddd')\n}\n\nconst plannedMenu = [\n    {\n        \"id\": \"today\",\n        \"icon\": \"today\",\n        \"caption\": \"Today\",\n        \"size\": \".8rem\",\n        \"num\": 0,\n        \"day\": getDay(0)\n    },\n    {\n        \"id\": \"tomorrow\",\n        \"icon\": \"event\",\n        \"caption\": \"Tomorrow\",\n        \"size\": \".8rem\",\n        \"num\": 1,\n        \"day\": getDay(1)\n    },\n    {\n        \"id\": \"nextWeek\",\n        \"icon\": \"event_note\",\n        \"caption\": \"Next Week\",\n        \"size\": \".8rem\",\n        \"num\": 2,\n        \"day\": getDay(2)\n    },\n    {\n        \"id\":\"pickDate\",\n        \"icon\": \"calendar_today\",\n        \"caption\": \"Pick a Date\",\n        \"children\": \"children\"\n    }\n]\n\nexport default plannedMenu;","import React, { Component } from 'react';\nimport moment from 'moment'\nimport DatePicker from './DatePicker';\nimport { connect } from 'react-redux';\nimport { addDateDue } from '../../../../../actions/tasksActions';\nimport { Icon, ListItemText, MenuItem } from '@material-ui/core';\nimport MenuTemplate from '../../../../common/MenuTemplate';\nimport dateDueMenu from './DateMenu';\n\nclass PlannedMenu extends Component {\n    state={\n        subAnchorEl: null,\n        subMenuOpen: false,\n        value: null\n    }\n\n    handleSubItemClick = (e, item) => {\n        this.setState({\n            subAnchorEl: e.currentTarget,\n            subMenuOpen: !this.state.subMenuOpen,\n            value: item.id\n        });\n    }\n\n    handleSubMenuClose = () => {\n        this.setState({\n            subMenuOpen: false\n        });\n    }\n    \n    handleSort = (item) => {\n        const { selectedTask, tasks, onAddDateDue=f=>f, onClose=f=>f } = this.props;\n        const arr = tasks.filter(task => task.task_id === selectedTask[0].task_id);\n        const taskId = arr[0].task_id;\n        const newDate = moment(new Date()).add(item.num, 'days').format('YYYY-MM-DD');\n\n        onAddDateDue(taskId, newDate);\n        onClose();\n    }\n\n    renderMenuItems = children => {\n        const { selectedTask, tasks, onAddDateDue=f=>f, onClose=f=>f } = this.props;\n\n        return children.map(item => {\n            if (item.children) {\n                return (\n                    <MenuItem key={item.id}>\n                        <DatePicker\n                            selectedTask={ selectedTask }\n                            tasks={ tasks }\n                            onAddDateDue={ onAddDateDue }\n                            onClose={ onClose }\n                        />\n                    </MenuItem>\n                )\n            }\n\n            return (\n                <MenuItem key={item.id}\n                    className=\"align-center space-between\"\n                    onClick={() => this.handleSort(item)}>\n                        <Icon className=\"list-icon\" style={{marginRight: '.5rem'}}>\n                            { item.icon }\n                        </Icon>\n                \n                        <ListItemText primary={item.caption} />\n\n                        <span style={{fontSize: item.size}}>\n                            {item.day}\n                        </span>\n                </MenuItem>\n            )\n        });\n    };\n \n    render() {\n        const { anchorEl, open, onClose } = this.props;\n        \n        return (\n            <MenuTemplate\n                anchorEl={anchorEl}\n                menuArr={dateDueMenu}\n                open={open}\n                onClose={onClose}\n                renderMenuItems={this.renderMenuItems}\n            />\n        );\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onAddDateDue(id, date) {\n        dispatch(\n            addDateDue(id, date)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(PlannedMenu);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport PlannedButton from './PlannedButton';\nimport PlannedMenu from './PlannedMenu';\n\nconst Planned = ({selectedTask, tasks}) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    if (!selectedTask[0]) return null;\n\n    const handleButtonClick = e => {\n        setAnchorEl(e.currentTarget);\n    }\n\n    const handleMenuClose = () => {\n        setAnchorEl(null)\n    }\n\n    return (\n        <ListItem style={{margin: '10px 0px'}}>\n            <PlannedButton selectedTask={ selectedTask } onClick={ handleButtonClick } />\n\n            <PlannedMenu\n                open={ Boolean(anchorEl) }\n                onClose={ handleMenuClose }\n                anchorEl={ anchorEl }\n                selectedTask={ selectedTask }\n                tasks={ tasks }\n            />\n        </ListItem>\n    );\n};\n\nPlanned.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    tasks: PropTypes.array.isRequired\n};\n\nexport default Planned;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ClickAwayListener, ListItem } from '@material-ui/core';\nimport Textarea from 'react-textarea-autosize';\nimport { setNote } from '../../../../actions/currentActions';\nimport { updateNote } from '../../../../actions/tasksActions';\n\nconst Note = ({currentNote, selectedTask, onSetNote=f=>f, onUpdateNote=f=>f}) => {\n    const [open, setOpen] = React.useState(false);\n\n    if (!selectedTask[0]) return null;\n    if (!currentNote) currentNote = \"\";\n\n    const handleClick = () => {\n        setOpen(prev => !prev);\n    };\n\n    const handleClickAway = () => {\n        if (open) {\n            onUpdateNote(selectedTask[0].task_id, currentNote);\n        }\n        setOpen(false);\n    };\n\n    const placeholder = \n        <Textarea\n            placeholder={'Add a Note'}\n            value={ currentNote }\n            onChange={e => onSetNote(selectedTask[0].task_id, e.target.value)}\n        />\n\n    const note = \n        <Textarea\n            value={ currentNote }\n            onChange={e => onSetNote(selectedTask[0].task_id, e.target.value)}\n        />\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway}>\n            <ListItem style={{margin: '10px 3px'}} onClick={handleClick}>\n                { selectedTask[0].note ? note : placeholder }\n            </ListItem>\n        </ClickAwayListener>\n    );\n};\n\nNote.propTypes = {\n    currentNote: PropTypes.string,\n    selectedTask: PropTypes.array,\n    onSetNote: PropTypes.func.isRequired,\n    onUpdateNote: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    currentNote: state.current.note,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetNote(id, note) {\n        dispatch(\n            setNote(id, note)\n        )\n    },\n\n    onUpdateNote(id, note) {\n        dispatch(\n            updateNote(id, note)\n        )\n    }\n});\n\nexport default (connect)(mapStateToProps, mapDispatchToProps)(Note);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Divider } from '@material-ui/core';\nimport Steps from './Sections/Steps/StepsContainer';\nimport MoreMyDay from './Sections/MyDay';\nimport MorePlanned from './Sections/Planned/MorePlanned';\nimport Note from './Sections/Note';\n\nconst BodySection = ({selectedTask, tasks, onClose}) => (\n    <div style={{height: '82vh', overflow: 'auto'}}>\n        <Steps selectedTask={ selectedTask } />\n\n        <Divider />\n\n        <MoreMyDay selectedTask={ selectedTask } onClose={ onClose } />\n\n        <Divider />\n\n        <MorePlanned selectedTask={ selectedTask } tasks={ tasks } />\n\n        <Divider />\n\n        <Note selectedTask={ selectedTask } />\n    </div>\n);\n\nBodySection.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    tasks: PropTypes.array.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default BodySection;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst Completed = ({selectedTask}) => {\n    const getFormattedDate = (inputDate) => {\n        let formattedDate;\n        if (inputDate === moment(new Date()).format('YYYY-MM-DD')) {\n            formattedDate = 'Today';\n        } else if (inputDate === moment(new Date()).add(1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Tomorrow';\n        } else if (inputDate === moment(new Date()).add(-1, 'days').format('YYYY-MM-DD')) {\n            formattedDate = 'Yesterday';\n        } else {\n            formattedDate = moment(inputDate).format('ddd, MMM D')\n        }\n        \n        return formattedDate;\n    }\n\n    const completed =\n        <span style={{fontSize: '.75rem'}}>\n            Completed {' '} { getFormattedDate(selectedTask[0].date_completed) }\n        </span>\n    \n    const created =\n        <span style={{fontSize: '.75rem'}}>\n            Created {' '} { getFormattedDate(selectedTask[0].date_created) }\n        </span>\n\n    return selectedTask[0].completedStatus ? completed : created;\n};\n\nCompleted.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n};\n \nexport default Completed;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaChevronRight } from 'react-icons/fa';\nimport Completed from './Completed';\nimport DeleteModal from '../../common/DeleteModal';\n\nconst FooterSection = ({selectedTask, onClose=f=>f, onRemove=f=>f}) => (\n    <div className=\"more-fixed more-margins more-footer\">\n        <FaChevronRight onClick={onClose} />\n\n        <Completed selectedTask={selectedTask} />\n\n        <DeleteModal \n            id={ selectedTask[0].task_id }\n            location= { 'more-bottom' }\n            name={ selectedTask[0].item }\n            todo={ 'task' }\n            onClick={() => onRemove(selectedTask[0].task_id)}\n        />\n    </div>\n);\n\nFooterSection.propTypes = {\n    selectedTask: PropTypes.array.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired\n};\n \nexport default FooterSection;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { removeTask } from '../../../actions/tasksActions';\nimport FooterSection from './FooterSection';\n\nconst FooterSectionContainer = ({selectedTask, onClose=f=>f, onRemoveTask=f=>f}) => {\n    if (!selectedTask[0]) return null;\n\n    const onRemove = (id) => {\n        onRemoveTask(id);\n        onClose();\n    }\n\n    return (\n        <FooterSection \n            selectedTask={ selectedTask }\n            onClose={ onClose }\n            onRemove={ onRemove }\n        />\n    )\n};\n\nFooterSectionContainer.propTypes = {\n    selectedTask: PropTypes.array,\n    onClose: PropTypes.func.isRequired,\n    onRemoveTask: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveTask(id) {\n        dispatch(\n            removeTask(id)\n        )\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(FooterSectionContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Drawer, Hidden } from '@material-ui/core';\nimport HeaderSection from './Header/HeaderSectionContainer';\nimport BodySection from './Body/BodySection';\nimport FooterSection from './Footer/FooterSectionContainer';\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: theme.mixins.toolbar,\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        background: '#FAFAFA'\n    },\n    drawerHeader: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n    },\n}));\n\nconst More = ({currentTask, tasks, open, onClose=f=>f}) => {\n    const classes = useStyles();\n    const selectedTask = tasks.filter(task => task.task_id === currentTask.id);\n\n    return (\n        <Hidden smDown implementation=\"css\">\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"right\"\n                open={ open }\n                classes={{\n                    paper: classes.drawerPaper,\n                }}>\n\n                <div className={classes.drawerHeader}>\n                    <div className={classes.toolbar} />\n\n                    <HeaderSection currentTask={ currentTask } selectedTask={ selectedTask } />\n\n                    <BodySection selectedTask={ selectedTask } tasks={ tasks } onClose={ onClose } />\n\n                    <FooterSection selectedTask={ selectedTask } onClose={ onClose } />\n                </div>\n            </Drawer>\n        </Hidden>\n    )\n};\n\nMore.propTypes = {\n    currentTask: PropTypes.object.isRequired,\n    tasks: PropTypes.array.isRequired, \n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default More;","import MoreInfo from './MoreInfo';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n    currentTask: state.current.task,\n    tasks: state.tasks\n});\n\nexport default connect(mapStateToProps)(MoreInfo);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListBody from '../Todolist/Body';\nimport MoreSection from '../../MoreInfo/MoreInfoContainer';\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        [theme.breakpoints.up('md')]: {\n            marginRight: -drawerWidth,\n        }\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: 0,\n    },\n}));\n\nexport const Match = ({filteredTasks, selectedList, open, onOpen=f=>f, onClose=f=>f}) => {\n    const classes = useStyles();\n\n    const mainStyle = () => {\n        return {\n            position: selectedList[0].sorted ? 'relative' : null, \n            top: selectedList[0].sorted ? 30 : null\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <main style={ mainStyle() }\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}>\n\n                <ListBody tasks={ filteredTasks } onClick={ onOpen } onClose={ onClose } />\n            </main>\n\n            <MoreSection open={ open } onClose={ onClose } />\n        </div>\n    )\n};\n\nMatch.propTypes = {\n    filteredTasks: PropTypes.array,\n    selectedList: PropTypes.array,\n    open: PropTypes.bool.isRequired,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport const NoMatch = () =>\n    <div className=\"no-match align-center\">\n        <p>We searched high and low but couldn't find what you're looking for.</p>\n    </div>","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Match, NoMatch } from './Results';\n\nconst ResultsContainer = ({filteredTasks, selectedList, open, onOpen=f=>f, onClose=f=>f}) => (\n    <div style={{flexGrow: 1}}>\n        { filteredTasks.length > 0 ? \n            <Match \n                filteredTasks={filteredTasks}\n                selectedList={selectedList}\n                open={open}\n                onOpen={onOpen}\n                onClose={onClose}\n            />\n            :\n            <NoMatch />\n        }\n    </div>\n);\n\nResultsContainer.propTypes = {\n    filteredTasks: PropTypes.array,\n    selectedList: PropTypes.array,\n    open: PropTypes.bool.isRequired,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n \nexport default ResultsContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Title = React.forwardRef(({currentList, lists, onSetList=f=>f, onSubmit=f=>f}, ref) => { \n    const selectedList = lists.filter(list => list.id === currentList.id);\n    const defaultList = selectedList[0].defaultList;\n\n    return (\n        <h2 style={{fontWeight: 'bold'}} >\n            { defaultList ?\n                currentList.title\n                :\n                <form onSubmit={ onSubmit }>\n                    <input\n                        ref={ref}\n                        type=\"text\"\n                        className=\"edit-input\"\n                        value={ currentList.title }\n                        onChange={e => onSetList(currentList.id, e.target.value)}\n                    />\n                </form>\n            }\n        </h2>\n    )\n});\n\nTitle.propTypes = {\n    currentList: PropTypes.object.isRequired,\n    lists: PropTypes.array.isRequired,\n    onSetList: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n};\n\nexport default Title;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { renameList } from '../../../../../actions/listsActions';\nimport { setList } from '../../../../../actions/currentActions';\nimport Name from './Name';\n\nconst NameContainer = React.forwardRef(({currentList, lists, onRenameList=f=>f, onSetList=f=>f}, ref) => { \n    const onSubmit = e => {\n        e.preventDefault();\n\n        const namesOnList = lists.map(list => list.name);\n        const regex=/^\\s+$/;\n\n        if (regex.test(currentList.title) || currentList.title === '') {\n            let subName = \"Untitled List\"\n            let num = 1\n            \n            while (namesOnList.includes(subName)) {\n                subName = `Untitled List (${num})`;\n                num++\n            }\n            onRenameList(currentList.id, subName);\n        } else if (!namesOnList.includes(currentList.title)){\n            onRenameList(currentList.id, currentList.title);\n        } else if (namesOnList.includes(currentList.title)) {\n            let subName = currentList.title;\n            let num = 1;\n\n            while (namesOnList.includes(subName)) {\n                subName = `${subName} (${num})`\n                num++\n            }\n            onRenameList(currentList.id, subName);\n        }\n    }\n\n    return (\n        <Name \n            ref={ ref }\n            currentList={ currentList }\n            lists={ lists }\n            onSetList={ onSetList }\n            onSubmit={ onSubmit }\n        />\n    )\n});\n\nNameContainer.propTypes = {\n    currentList: PropTypes.object.isRequired,\n    lists: PropTypes.array.isRequired,\n    onRenameList: PropTypes.func.isRequired,\n    onSetList: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    currentList: state.current.list,\n    lists: state.lists\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSetList(id, title) {\n        dispatch(\n            setList(id, title)\n        )\n    },\n\n    onRenameList(id, name) {\n        dispatch(\n            setList(id, name)\n        )\n\n        dispatch(\n            renameList(id, name)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {forwardRef: true})(NameContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst TodaysDate = ({name}) => (\n    <span style={{display: name === \"My Day\" ? 'block' : 'none'}}>\n        { moment(new Date()).format('dddd, MMMM D') }\n    </span>\n);\n\nTodaysDate.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default TodaysDate;","const todoMenu = [\n    {\n        \"id\": \"sortTasks\",\n        \"size\": '1.3rem',\n        \"icon\": \"format_line_spacing\",\n        \"caption\": \"Sort\",\n        \"children\": [\n            {\n                \"id\": \"importantStatus\",\n                \"size\": '1.3rem',\n                \"icon\": \"star_border\",\n                \"caption\": \"Importance\"\n            },\n            {\n                \"id\": \"item\",\n                \"size\": '1.3rem',\n                \"icon\": \"sort_by_alpha\",\n                \"caption\": \"Alphabetically\"\n            },\n            {\n                \"id\": \"date_due\",\n                \"size\": '1.3rem',\n                \"icon\": \"event\",\n                \"caption\": \"Due date\"\n            },\n            {\n                \"id\": \"date_created\",\n                \"size\": '1.3rem',\n                \"icon\": \"library_add\",\n                \"caption\": \"Creation date\"\n            },\n            {\n                \"id\": \"completedStatus\",\n                \"size\": '1.3rem',\n                \"icon\": \"check_circle_outline\",\n                \"caption\": \"Completed\"\n            },\n            {\n                \"id\": \"my_day\",\n                \"size\": '1.3rem',\n                \"icon\": \"wb_sunny\",\n                \"caption\": \"Added to My Day\"\n            }\n        ]\n    },\n    {\n        \"id\": \"changeTheme\",\n        \"size\": '1.3rem',\n        \"icon\": \"color_lens\",\n        \"caption\": \"Change theme\",\n        \"children\": [\n            {\n                \"id\": \"blue\",\n                \"size\": '2rem',\n                \"icon\": \"lens\",\n                \"color\": [80,40,250]\n            },\n            {\n                \"id\": \"red\",\n                \"size\": '2rem',\n                \"icon\": \"lens\",\n                \"color\": [250,70,60]\n            },\n            {\n                \"id\": \"purple\",\n                \"size\": '2rem',\n                \"icon\": \"lens\",\n                \"color\": [100,30,150]\n            },\n            {\n                \"id\": \"green\",\n                \"size\": '2rem',\n                \"icon\": \"lens\",\n                \"color\": [80,160,50]\n            },\n            {\n                \"id\": \"ltblue\",\n                \"size\": '2rem',\n                \"icon\": \"lens\",\n                \"color\": [0,120,255]\n            },\n        ]\n    },\n    {\n        \"id\": \"hideTasks\",\n        \"size\": '1.3rem',\n        \"icon\": \"check_circle_outline\",\n        \"caption\": \"Hide completed tasks\"\n    },\n    {\n        \"id\": \"showTasks\",\n        \"size\": '1.3rem',\n        \"icon\": \"check_circle_outline\",\n        \"caption\": \"Show completed tasks\"\n    }\n]\n\nexport default todoMenu;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { changeBgColor, changeOrder, toggleHide } from '../../../../../../actions/listsActions';\nimport { Icon, ListItemText, Menu, MenuItem } from '@material-ui/core';\nimport { FaCaretRight } from 'react-icons/fa';\nimport MenuTemplate from '../../../../../common/MenuTemplate';\nimport headerMenu from './todoMenu';\n\nconst HeaderMenuContainer = ({anchorEl, open, onClose, lists, selectedListId, onToggleHide=f=>f, onChangeBgColor=f=>f, onChangeOrder=f=>f}) => {\n    const [subAnchorEl, setAnchor] = useState(null);\n    const [subMenuOpen, setMenu] = useState(false);\n    const [value, setValue] = useState(null);\n\n    const handleSubItemClick = (e, item) => {\n        setAnchor(e.currentTarget);\n        setMenu(!subMenuOpen);\n        setValue(item.id);\n    }\n\n    const handleSubMenuClose = () => {\n        setMenu(false);\n    }\n\n    const formatColor = color => {\n        return color ?\n            'rgb(' + color.join(',') + ')' : null\n    }\n\n    const handleSort = item => {\n        item.id === 'hideTasks' || item.id === 'showTasks' ?\n            onToggleHide(selectedListId)\n            :\n            item.icon === 'lens' ?\n                onChangeBgColor(item.color, selectedListId)\n                :\n                onChangeOrder(item.id, selectedListId);\n                setMenu(false);\n                onClose();\n    }\n\n    const renderMenuItems = children => {\n        const selectedList = lists.filter(list => list.id === selectedListId),\n              name = selectedList[0].name,\n              hideCompleted = selectedList[0].hideCompleted,\n              defaultList = selectedList[0].defaultList;\n\n        return children.map(item => {\n            if (item.children) {\n                return (name !== 'Planned' || item.id !== \"sortTasks\") ?\n                    <div key={ item.id }>\n                        <MenuItem\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'space-between'\n                            }}\n                            onClick={e => handleSubItemClick(e, item)}>\n                        \n                            <Icon style={{marginRight: '.5rem', fontSize: item.size}}>\n                                { item.icon }\n                            </Icon>\n\n                            <ListItemText primary={ item.caption } />\n\n                            <FaCaretRight />\n                        </MenuItem>\n\n                        { \n                            value === item.id &&\n                            <Menu\n                                anchorEl={ subAnchorEl }\n                                open={ subMenuOpen }\n                                onClose={ handleSubMenuClose }\n                                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n                                transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}>\n\n                                { renderMenuItems(item.children) }\n                            </Menu>\n                        }\n                    </div>\n                    :\n                    null\n            }\n\n            return (\n                (\n                    ((name === 'My Day' && item.id !== 'my_day') && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks'))) ||\n                    (name === 'Important' && (item.id !== 'importantStatus' && item.id !== 'completedStatus') && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks'))) ||\n                    (name === 'Planned' && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks'))) ||\n                    (name === 'Tasks' && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks'))) ||\n                    (!defaultList && ((hideCompleted && item.id !== 'hideTasks') || (!hideCompleted && item.id !== 'showTasks')))\n                ) ?\n                    <MenuItem\n                        key={item.id}\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'space-between'\n                        }}\n                        onClick={() => handleSort(item)}>\n                            <Icon style={{color: formatColor(item.color), marginRight: '.5rem', fontSize: item.size}}>\n                                { item.icon }\n                            </Icon>\n                    \n                            <ListItemText \n                                primary={item.caption} \n                            />\n                    </MenuItem>\n                    :\n                    null\n            )\n        });\n    };\n\n    return (\n        <MenuTemplate \n            anchorEl={ anchorEl }\n            menuArr={ headerMenu }\n            open={ open }\n            onClose={ onClose }\n            renderMenuItems={ renderMenuItems }\n        />\n    )\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"]\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeBgColor(color, id) {\n        dispatch(\n            changeBgColor(color, id)\n        )\n    },\n\n    onChangeOrder(order, id) {\n        dispatch(\n            changeOrder(order, id)\n        )\n    },\n\n    onToggleHide(id) {\n        dispatch(\n            toggleHide(id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderMenuContainer);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\nimport { FaEllipsisH } from 'react-icons/fa';\nimport HeaderMenu from './HeaderMenuContainer';\n\nconst HeaderButton = ({buttonColor}) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleButtonClick = e => {\n        setAnchorEl(e.currentTarget);\n    }\n\n    const handleMenuClose = () => {\n        setAnchorEl(null)\n    }\n\n    return (\n        <React.Fragment>\n            <Button\n                variant=\"contained\"\n                style={{\n                    minWidth: 30, \n                    color: 'white',\n                    backgroundColor: buttonColor\n                }}\n                onClick={ handleButtonClick }>\n\n                <FaEllipsisH />\n            </Button>\n\n            <HeaderMenu\n                open={ Boolean(anchorEl) }\n                onClose={ handleMenuClose }\n                anchorEl={ anchorEl }\n            />\n        </React.Fragment>\n    );\n};\n\nHeaderButton.propTypes = {\n    buttonColor: PropTypes.string.isRequired\n};\n\nexport default HeaderButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Name from './NameContainer';\nimport TodaysDate from './TodaysDate';\nimport HeaderButton from './MenuButton/HeaderButton';\n\nconst Title = React.forwardRef(({name, formatColor, secondaryColor}, ref) => (\n    <header className=\"header align-center space-between\" style={{backgroundColor: formatColor}}>\n        <div style={{width: '100%'}}>\n            <Name ref={ref} />\n\n            <TodaysDate name={name} />\n        </div>\n\n        <HeaderButton buttonColor={ secondaryColor() } />\n    </header>\n));\n\nTitle.propTypes = {\n    name: PropTypes.string.isRequired,\n    formatColor: PropTypes.string.isRequired,\n    secondaryColor: PropTypes.func.isRequired\n};\n \nexport default Title;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaTimes } from 'react-icons/fa';\n\nconst SortBar = ({barColor, getDirIcon, selectedList, selectedListId, getOrderBy=f=>f, onChange=f=>f, onClear=f=>f}) => {\n    return selectedList[0].sorted ?\n        <div className=\"sort-bar align-center space-between\" style={{ backgroundColor: barColor }}>\n            <div onClick={() => onChange(selectedListId)}>\n                Sorted { getOrderBy() } { getDirIcon }\n            </div>\n            \n            <FaTimes onClick={ () => onClear(selectedListId) }/>\n        </div>\n        :\n        null\n};\n\nSortBar.propTypes = {\n    barColor: PropTypes.string.isRequired,\n    selectedListId: PropTypes.string.isRequired,\n    getOrderBy: PropTypes.func.isRequired,\n    getDirIcon: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onClear: PropTypes.func,\n};\n\nexport default SortBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeDir, changeOrder, resetChangeDir } from '../../../../../actions/listsActions';\nimport { FaChevronUp, FaChevronDown } from 'react-icons/fa';\nimport SortBar from './SortBar';\n\nconst SortBarContainer = ({barColor, lists, selectedList, selectedListId, onChangeDir=f=>f, onClear=f=>f}) => {\n    const currentList = lists.filter(list => list.id === selectedListId);\n\n    const getOrderBy = () => {\n        const orderBy = currentList[0].orderBy;\n\n        const dict = {\n            'importantStatus': 'by importance',\n            'item': 'alphabetically',\n            'date_due': 'by due date',\n            'date_created': 'by creation date',\n            'completedStatus': 'by completed',\n            'my_day': 'by added to My Day'\n        }\n\n        return dict[orderBy];\n    }\n\n    const getDirIcon = currentList[0].orderDir === 'asc'\n        ? <FaChevronUp />\n        : <FaChevronDown />;\n\n    return (\n        <SortBar\n            barColor={ barColor }\n            selectedList={ selectedList }\n            selectedListId={ selectedListId }\n            getOrderBy={ getOrderBy }\n            getDirIcon={ getDirIcon }\n            onChange={ onChangeDir }\n            onClear={ onClear }\n        />\n    )\n};\n    \nSortBarContainer.propTypes = {\n    barColor: PropTypes.string.isRequired,\n    lists: PropTypes.array.isRequired,\n    selectedList: PropTypes.array.isRequired,\n    selectedListId: PropTypes.string.isRequired,\n    onChangeDir: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired\n};\n    \nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"]\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeDir(id) {\n        dispatch(\n            changeDir(id)\n        )\n    },\n\n    onClear(id) {\n        dispatch(\n            changeOrder('date_created', id)\n        )\n\n        dispatch(\n            resetChangeDir(id)\n        )\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortBarContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from './Title';\nimport SortBar from './SortBar/SortBarContainer';\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        marginLeft: 200,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - 200px)`,\n        },\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        [theme.breakpoints.up('md')]: {\n            width: `calc(100% - ${drawerWidth+200}px)`,\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginRight: drawerWidth,\n        },\n    }\n}));\n\nconst Header = React.forwardRef(({formatColor, name, open, selectedList, secondaryColor=f=>f}, ref) => {\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}>\n            <Title ref={ref} name={name} formatColor={formatColor} secondaryColor={secondaryColor} />\n\n            <SortBar barColor={ secondaryColor() } selectedList= {selectedList} />\n        </AppBar>\n    );\n});\n\nHeader.propTypes = {\n    name: PropTypes.string.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedList: PropTypes.array.isRequired,\n    formatColor: PropTypes.string.isRequired,\n    secondaryColor: PropTypes.func.isRequired\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from './Header';\n\nconst HeaderContainer = React.forwardRef(({lists, open, selectedListId}, ref) => {\n    const selectedList = lists.filter(list => list.id === selectedListId);\n    const name = selectedList[0].name;\n    const formatColor = 'rgb(' + selectedList[0].color.join(',') + ')';\n\n    const secondaryColor = () => {\n        const newArr = selectedList[0].color.map(col => parseInt(col * .6));\n        const newColor = 'rgb(' + newArr.join(',') + ')';\n        return newColor;\n    };\n\n    return (\n        <Header \n            ref={ ref }\n            name={ name }\n            open={ open }\n            selectedList={ selectedList }\n            formatColor={ formatColor }\n            secondaryColor={ secondaryColor }\n        />\n    );\n});\n\nHeaderContainer.propTypes = {\n    lists: PropTypes.array.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedListId: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    selectedListId: state.current.list[\"id\"]\n});\n\nexport default connect(mapStateToProps, null, null, {forwardRef: true})(HeaderContainer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { CssBaseline } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from './Header';\nimport ListBody from './Body';\nimport MoreSection from '../../MoreInfo/MoreInfoContainer';\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-start',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        [theme.breakpoints.up('md')]: {\n            marginRight: -drawerWidth,\n        }\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: 0,\n    },\n}));\n\nconst TodoList = React.forwardRef(({filteredTasks, open, selectedList, onOpen=f=>f, onClose=f=>f}, ref) => {\n    const classes = useStyles();\n\n    const mainStyle = () => {\n        return {\n            position: selectedList[0].sorted ? 'relative' : null, \n            top: selectedList[0].sorted ? 30 : null\n        }\n    }\n\n    return (\n        <div style={{flexGrow: 1}} className={classes.root}>\n            <CssBaseline />\n\n            <Header ref={ref} open={open} />\n\n            <main style={ mainStyle() }\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}>\n\n                <div className={classes.drawerHeader} />\n\n                <ListBody tasks={ filteredTasks } onClick={ onOpen } onClose={ onClose } />\n            </main>\n\n            <MoreSection open={ open } onClose={ onClose } />\n        </div>\n    );\n});\n\nTodoList.propTypes = {\n    filteredTasks: PropTypes.array,\n    open: PropTypes.bool.isRequired,\n    selectedList: PropTypes.array,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default TodoList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ResultsContainer from './Results/ResultsContainer';\nimport TodoList from './Todolist/TodoList';\n\nconst Main = React.forwardRef(({filteredTasks, open, query, selectedList, onOpen=f=>f, onClose=f=>f}, ref) => (\n    query ? \n        <ResultsContainer\n            filteredTasks={filteredTasks}\n            open={open}\n            selectedList={selectedList}\n            onOpen={onOpen}\n            onClose={onClose}\n        /> \n        : \n        <TodoList\n            ref={ref}\n            filteredTasks={filteredTasks}\n            open={open}\n            selectedList={selectedList}\n            onOpen={onOpen}\n            onClose={onClose}\n        />\n));\n\nMain.propTypes = {\n    filteredTasks: PropTypes.array,\n    open: PropTypes.bool.isRequired,\n    query: PropTypes.string.isRequired,\n    selectedList: PropTypes.array,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default Main;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Main from './Main';\n\nconst MainContainer = React.forwardRef(({lists, query, selectedListId, tasks, open, onClose=f=>f, onOpen=f=>f}, ref) => {\n    let filteredTasks = [],\n        order,\n        selectedList = lists.filter(list => list.id === selectedListId),\n        name = selectedList[0].name,\n        orderBy = selectedList[0].orderBy,\n        orderDir = selectedList[0].orderDir,\n        hideCompleted = selectedList[0].hideCompleted;\n\n    orderDir === 'asc' ? order = 1 : order = -1;\n\n    query ?\n        tasks.forEach(task => {\n            if (\n                (task.item.toLowerCase().indexOf(query) !== -1) ||\n                (task.note.toLowerCase().indexOf(query) !== -1)\n            ){\n                filteredTasks.push(task);\n            }\n        })\n        :\n        filteredTasks = tasks.filter(task => {\n                return task[`${ name.toLowerCase().replace(/ /g,\"_\") }`] || task.list_id === selectedListId\n            })\n            .sort((a,b) => {\n                return (orderBy === 'item' || orderBy === 'date_due' || orderBy === 'date_created') ?\n                    (a[orderBy].toLowerCase() < b[orderBy].toLowerCase()) ? -1 * order : 1 * order\n                    :\n                    (orderDir === 'asc') ?\n                        b[orderBy] - a[orderBy] : a[orderBy] - b[orderBy]\n            })\n            .filter(task => hideCompleted ? !task.completedStatus : task)\n    \n    return (\n        <Main\n            ref={ref}\n            filteredTasks={filteredTasks}\n            selectedList={selectedList}\n            open={open}\n            onOpen={onOpen}\n            onClose={onClose}\n            query={ query }\n        />\n    )\n});\n\nconst mapStateToProps = state => ({\n    lists: state.lists,\n    query: state.query,\n    selectedListId: state.current.list[\"id\"],\n    tasks: state.tasks,\n});\n\nexport default connect(mapStateToProps, null, null, {forwardRef: true})(MainContainer);","import React from 'react';\nimport { CssBaseline, useMediaQuery} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport Sidebar from './Side';\nimport Main from './Main';\n\nconst ResponsiveDrawer = () => {\n    let inputEl = null;\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('md'));\n\n    const [openDrawer, setOpen] = React.useState(false)\n\n    const handleDrawerOpen = () => {\n        if (!matches) return\n        setOpen(true);\n    }\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    }\n\n    const editClick = () => {\n        if(inputEl) {\n            inputEl.select();\n        }\n    }\n\n    return (\n        <div style={{display: 'flex'}}>\n            <CssBaseline />\n\n            <Sidebar\n                onClose={ handleDrawerClose }\n                onEditClick={ editClick }\n            />\n\n            <Main\n                ref={input => inputEl = input}\n                open={ openDrawer }\n                onOpen={ handleDrawerOpen }\n                onClose={ handleDrawerClose }\n            />\n        </div>\n    );\n};\n\nexport default ResponsiveDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadTasks } from './actions/tasksActions';\nimport ResponsiveDrawer from './components/ResponsiveDrawer';\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.loadTasks();\n    }\n    \n    render() {\n        return (\n            <ResponsiveDrawer />\n        );\n    }\n}\n\nexport default connect(null, { loadTasks })(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}